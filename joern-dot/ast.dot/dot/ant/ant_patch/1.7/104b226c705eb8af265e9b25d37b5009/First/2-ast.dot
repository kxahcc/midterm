digraph "getCollection" {  
"41" [label = <(METHOD,getCollection)<SUB>57</SUB>> ]
"4" [label = <(PARAM,this)<SUB>57</SUB>> ]
"42" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>57</SUB>> ]
"43" [label = <(LOCAL,int ct: int)> ]
"44" [label = <(&lt;operator&gt;.assignment,int ct = this.getCount())<SUB>58</SUB>> ]
"45" [label = <(IDENTIFIER,ct,int ct = this.getCount())<SUB>58</SUB>> ]
"46" [label = <(getCount,this.getCount())<SUB>58</SUB>> ]
"3" [label = <(IDENTIFIER,this,this.getCount())<SUB>58</SUB>> ]
"47" [label = <(CONTROL_STRUCTURE,if (ct &lt; 0),if (ct &lt; 0))<SUB>59</SUB>> ]
"48" [label = <(&lt;operator&gt;.lessThan,ct &lt; 0)<SUB>59</SUB>> ]
"49" [label = <(IDENTIFIER,ct,ct &lt; 0)<SUB>59</SUB>> ]
"50" [label = <(LITERAL,0,ct &lt; 0)<SUB>59</SUB>> ]
"51" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>59</SUB>> ]
"52" [label = <(&lt;operator&gt;.throw,throw new BuildException(BAD_COUNT);)<SUB>60</SUB>> ]
"53" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>60</SUB>> ]
"54" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"55" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"56" [label = <(&lt;operator&gt;.alloc,new BuildException(BAD_COUNT))<SUB>60</SUB>> ]
"57" [label = <(&lt;init&gt;,new BuildException(BAD_COUNT))<SUB>60</SUB>> ]
"58" [label = <(IDENTIFIER,$obj0,new BuildException(BAD_COUNT))> ]
"59" [label = <(&lt;operator&gt;.fieldAccess,First.BAD_COUNT)<SUB>60</SUB>> ]
"60" [label = <(IDENTIFIER,First,new BuildException(BAD_COUNT))<SUB>60</SUB>> ]
"61" [label = <(FIELD_IDENTIFIER,BAD_COUNT,BAD_COUNT)<SUB>60</SUB>> ]
"62" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"63" [label = <(LOCAL,Iterator iter: java.util.Iterator)> ]
"64" [label = <(&lt;operator&gt;.assignment,Iterator iter = iterator())<SUB>62</SUB>> ]
"65" [label = <(IDENTIFIER,iter,Iterator iter = iterator())<SUB>62</SUB>> ]
"66" [label = <(iterator,iterator())<SUB>62</SUB>> ]
"67" [label = <(getResourceCollection,getResourceCollection())<SUB>62</SUB>> ]
"5" [label = <(IDENTIFIER,this,getResourceCollection())<SUB>62</SUB>> ]
"7" [label = <(LOCAL,ArrayList al: java.util.ArrayList)> ]
"68" [label = <(&lt;operator&gt;.assignment,ArrayList al = new ArrayList(ct))<SUB>63</SUB>> ]
"69" [label = <(IDENTIFIER,al,ArrayList al = new ArrayList(ct))<SUB>63</SUB>> ]
"70" [label = <(&lt;operator&gt;.alloc,new ArrayList(ct))<SUB>63</SUB>> ]
"71" [label = <(&lt;init&gt;,new ArrayList(ct))<SUB>63</SUB>> ]
"6" [label = <(IDENTIFIER,al,new ArrayList(ct))<SUB>63</SUB>> ]
"72" [label = <(IDENTIFIER,ct,new ArrayList(ct))<SUB>63</SUB>> ]
"73" [label = <(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; ct &amp;&amp; iter.hasNext()); i++),for (int i = 0; Some(i &lt; ct &amp;&amp; iter.hasNext()); i++))<SUB>64</SUB>> ]
"74" [label = <(LOCAL,int i: int)> ]
"75" [label = <(&lt;operator&gt;.assignment,int i = 0)<SUB>64</SUB>> ]
"76" [label = <(IDENTIFIER,i,int i = 0)<SUB>64</SUB>> ]
"77" [label = <(LITERAL,0,int i = 0)<SUB>64</SUB>> ]
"78" [label = <(&lt;operator&gt;.logicalAnd,i &lt; ct &amp;&amp; iter.hasNext())<SUB>64</SUB>> ]
"79" [label = <(&lt;operator&gt;.lessThan,i &lt; ct)<SUB>64</SUB>> ]
"80" [label = <(IDENTIFIER,i,i &lt; ct)<SUB>64</SUB>> ]
"81" [label = <(IDENTIFIER,ct,i &lt; ct)<SUB>64</SUB>> ]
"82" [label = <(hasNext,iter.hasNext())<SUB>64</SUB>> ]
"83" [label = <(IDENTIFIER,iter,iter.hasNext())<SUB>64</SUB>> ]
"84" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>64</SUB>> ]
"85" [label = <(IDENTIFIER,i,i++)<SUB>64</SUB>> ]
"86" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>64</SUB>> ]
"87" [label = <(add,al.add(iter.next()))<SUB>65</SUB>> ]
"88" [label = <(IDENTIFIER,al,al.add(iter.next()))<SUB>65</SUB>> ]
"89" [label = <(next,iter.next())<SUB>65</SUB>> ]
"90" [label = <(IDENTIFIER,iter,iter.next())<SUB>65</SUB>> ]
"91" [label = <(RETURN,return al;,return al;)<SUB>67</SUB>> ]
"92" [label = <(IDENTIFIER,al,return al;)<SUB>67</SUB>> ]
"93" [label = <(MODIFIER,PROTECTED)> ]
"94" [label = <(MODIFIER,VIRTUAL)> ]
"95" [label = <(METHOD_RETURN,java.util.Collection)<SUB>57</SUB>> ]
  "41" -> "4" 
  "41" -> "42" 
  "41" -> "93" 
  "41" -> "94" 
  "41" -> "95" 
  "42" -> "43" 
  "42" -> "44" 
  "42" -> "47" 
  "42" -> "63" 
  "42" -> "64" 
  "42" -> "7" 
  "42" -> "68" 
  "42" -> "71" 
  "42" -> "73" 
  "42" -> "91" 
  "44" -> "45" 
  "44" -> "46" 
  "46" -> "3" 
  "47" -> "48" 
  "47" -> "51" 
  "48" -> "49" 
  "48" -> "50" 
  "51" -> "52" 
  "52" -> "53" 
  "53" -> "54" 
  "53" -> "57" 
  "53" -> "62" 
  "54" -> "55" 
  "54" -> "56" 
  "57" -> "58" 
  "57" -> "59" 
  "59" -> "60" 
  "59" -> "61" 
  "64" -> "65" 
  "64" -> "66" 
  "66" -> "67" 
  "67" -> "5" 
  "68" -> "69" 
  "68" -> "70" 
  "71" -> "6" 
  "71" -> "72" 
  "73" -> "74" 
  "73" -> "75" 
  "73" -> "78" 
  "73" -> "84" 
  "73" -> "86" 
  "75" -> "76" 
  "75" -> "77" 
  "78" -> "79" 
  "78" -> "82" 
  "79" -> "80" 
  "79" -> "81" 
  "82" -> "83" 
  "84" -> "85" 
  "86" -> "87" 
  "87" -> "88" 
  "87" -> "89" 
  "89" -> "90" 
  "91" -> "92" 
}

digraph "getElementName" {  
"1032" [label = <(METHOD,getElementName)<SUB>553</SUB>> ]
"1033" [label = <(PARAM,this)<SUB>553</SUB>> ]
"1034" [label = <(PARAM,Object o)<SUB>553</SUB>> ]
"1035" [label = <(PARAM,boolean brief)<SUB>553</SUB>> ]
"1036" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>553</SUB>> ]
"1037" [label = <(LOCAL,Class elementClass: java.lang.Class)> ]
"1038" [label = <(&lt;operator&gt;.assignment,Class elementClass = o.getClass())<SUB>557</SUB>> ]
"1039" [label = <(IDENTIFIER,elementClass,Class elementClass = o.getClass())<SUB>557</SUB>> ]
"1040" [label = <(getClass,o.getClass())<SUB>557</SUB>> ]
"1041" [label = <(IDENTIFIER,o,o.getClass())<SUB>557</SUB>> ]
"1042" [label = <(LOCAL,String elementClassname: java.lang.String)> ]
"1043" [label = <(&lt;operator&gt;.assignment,String elementClassname = elementClass.getName())<SUB>558</SUB>> ]
"1044" [label = <(IDENTIFIER,elementClassname,String elementClassname = elementClass.getName())<SUB>558</SUB>> ]
"1045" [label = <(getName,elementClass.getName())<SUB>558</SUB>> ]
"1046" [label = <(IDENTIFIER,elementClass,elementClass.getName())<SUB>558</SUB>> ]
"1047" [label = <(CONTROL_STRUCTURE,for (Iterator i = antTypeTable.values().iterator(); Some(i.hasNext()); ),for (Iterator i = antTypeTable.values().iterator(); Some(i.hasNext()); ))<SUB>559</SUB>> ]
"1048" [label = <(LOCAL,Iterator i: java.util.Iterator)> ]
"1049" [label = <(&lt;operator&gt;.assignment,Iterator i = antTypeTable.values().iterator())<SUB>559</SUB>> ]
"1050" [label = <(IDENTIFIER,i,Iterator i = antTypeTable.values().iterator())<SUB>559</SUB>> ]
"1051" [label = <(iterator,antTypeTable.values().iterator())<SUB>559</SUB>> ]
"1052" [label = <(values,antTypeTable.values())<SUB>559</SUB>> ]
"1053" [label = <(&lt;operator&gt;.fieldAccess,this.antTypeTable)<SUB>559</SUB>> ]
"1054" [label = <(IDENTIFIER,this,antTypeTable.values())<SUB>559</SUB>> ]
"1055" [label = <(FIELD_IDENTIFIER,antTypeTable,antTypeTable)<SUB>559</SUB>> ]
"1056" [label = <(hasNext,i.hasNext())<SUB>559</SUB>> ]
"1057" [label = <(IDENTIFIER,i,i.hasNext())<SUB>559</SUB>> ]
"1058" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>559</SUB>> ]
"1059" [label = <(LOCAL,AntTypeDefinition def: ANY)> ]
"1060" [label = <(&lt;operator&gt;.assignment,ANY def = (AntTypeDefinition) i.next())<SUB>560</SUB>> ]
"1061" [label = <(IDENTIFIER,def,ANY def = (AntTypeDefinition) i.next())<SUB>560</SUB>> ]
"1062" [label = <(&lt;operator&gt;.cast,(AntTypeDefinition) i.next())<SUB>560</SUB>> ]
"1063" [label = <(TYPE_REF,AntTypeDefinition,AntTypeDefinition)<SUB>560</SUB>> ]
"1064" [label = <(next,i.next())<SUB>560</SUB>> ]
"1065" [label = <(IDENTIFIER,i,i.next())<SUB>560</SUB>> ]
"1066" [label = <(CONTROL_STRUCTURE,if (elementClassname.equals(def.getClassName()) &amp;&amp; (elementClass == def.getExposedClass(project))),if (elementClassname.equals(def.getClassName()) &amp;&amp; (elementClass == def.getExposedClass(project))))<SUB>561</SUB>> ]
"1067" [label = <(&lt;operator&gt;.logicalAnd,elementClassname.equals(def.getClassName()) &amp;&amp; (elementClass == def.getExposedClass(project)))<SUB>561</SUB>> ]
"1068" [label = <(equals,equals(def.getClassName()))<SUB>561</SUB>> ]
"1069" [label = <(IDENTIFIER,elementClassname,equals(def.getClassName()))<SUB>561</SUB>> ]
"1070" [label = <(getClassName,getClassName())<SUB>561</SUB>> ]
"1071" [label = <(IDENTIFIER,def,getClassName())<SUB>561</SUB>> ]
"1072" [label = <(&lt;operator&gt;.equals,elementClass == def.getExposedClass(project))<SUB>562</SUB>> ]
"1073" [label = <(IDENTIFIER,elementClass,elementClass == def.getExposedClass(project))<SUB>562</SUB>> ]
"1074" [label = <(getExposedClass,getExposedClass(project))<SUB>562</SUB>> ]
"1075" [label = <(IDENTIFIER,def,getExposedClass(project))<SUB>562</SUB>> ]
"1076" [label = <(&lt;operator&gt;.fieldAccess,this.project)<SUB>562</SUB>> ]
"1077" [label = <(IDENTIFIER,this,getExposedClass(project))<SUB>562</SUB>> ]
"1078" [label = <(FIELD_IDENTIFIER,project,project)<SUB>562</SUB>> ]
"1079" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>562</SUB>> ]
"1080" [label = <(LOCAL,String name: java.lang.String)> ]
"1081" [label = <(&lt;operator&gt;.assignment,String name = getName())<SUB>563</SUB>> ]
"1082" [label = <(IDENTIFIER,name,String name = getName())<SUB>563</SUB>> ]
"1083" [label = <(getName,getName())<SUB>563</SUB>> ]
"1084" [label = <(IDENTIFIER,def,getName())<SUB>563</SUB>> ]
"1085" [label = <(RETURN,return brief ? name : &quot;The &lt;&quot; + name + &quot;&gt; type&quot;;,return brief ? name : &quot;The &lt;&quot; + name + &quot;&gt; type&quot;;)<SUB>564</SUB>> ]
"1086" [label = <(&lt;operator&gt;.conditional,brief ? name : &quot;The &lt;&quot; + name + &quot;&gt; type&quot;)<SUB>564</SUB>> ]
"1087" [label = <(IDENTIFIER,brief,brief ? name : &quot;The &lt;&quot; + name + &quot;&gt; type&quot;)<SUB>564</SUB>> ]
"1088" [label = <(IDENTIFIER,name,brief ? name : &quot;The &lt;&quot; + name + &quot;&gt; type&quot;)<SUB>564</SUB>> ]
"1089" [label = <(&lt;operator&gt;.addition,&quot;The &lt;&quot; + name + &quot;&gt; type&quot;)<SUB>564</SUB>> ]
"1090" [label = <(&lt;operator&gt;.addition,&quot;The &lt;&quot; + name)<SUB>564</SUB>> ]
"1091" [label = <(LITERAL,&quot;The &lt;&quot;,&quot;The &lt;&quot; + name)<SUB>564</SUB>> ]
"1092" [label = <(IDENTIFIER,name,&quot;The &lt;&quot; + name)<SUB>564</SUB>> ]
"1093" [label = <(LITERAL,&quot;&gt; type&quot;,&quot;The &lt;&quot; + name + &quot;&gt; type&quot;)<SUB>564</SUB>> ]
"1094" [label = <(RETURN,return getUnmappedElementName(o.getClass(), brief);,return getUnmappedElementName(o.getClass(), brief);)<SUB>567</SUB>> ]
"1095" [label = <(getUnmappedElementName,getUnmappedElementName(o.getClass(), brief))<SUB>567</SUB>> ]
"1096" [label = <(getClass,o.getClass())<SUB>567</SUB>> ]
"1097" [label = <(IDENTIFIER,o,o.getClass())<SUB>567</SUB>> ]
"1098" [label = <(IDENTIFIER,brief,getUnmappedElementName(o.getClass(), brief))<SUB>567</SUB>> ]
"1099" [label = <(MODIFIER,PUBLIC)> ]
"1100" [label = <(MODIFIER,VIRTUAL)> ]
"1101" [label = <(METHOD_RETURN,java.lang.String)<SUB>553</SUB>> ]
  "1032" -> "1033" 
  "1032" -> "1034" 
  "1032" -> "1035" 
  "1032" -> "1036" 
  "1032" -> "1099" 
  "1032" -> "1100" 
  "1032" -> "1101" 
  "1036" -> "1037" 
  "1036" -> "1038" 
  "1036" -> "1042" 
  "1036" -> "1043" 
  "1036" -> "1047" 
  "1036" -> "1094" 
  "1038" -> "1039" 
  "1038" -> "1040" 
  "1040" -> "1041" 
  "1043" -> "1044" 
  "1043" -> "1045" 
  "1045" -> "1046" 
  "1047" -> "1048" 
  "1047" -> "1049" 
  "1047" -> "1056" 
  "1047" -> "1058" 
  "1049" -> "1050" 
  "1049" -> "1051" 
  "1051" -> "1052" 
  "1052" -> "1053" 
  "1053" -> "1054" 
  "1053" -> "1055" 
  "1056" -> "1057" 
  "1058" -> "1059" 
  "1058" -> "1060" 
  "1058" -> "1066" 
  "1060" -> "1061" 
  "1060" -> "1062" 
  "1062" -> "1063" 
  "1062" -> "1064" 
  "1064" -> "1065" 
  "1066" -> "1067" 
  "1066" -> "1079" 
  "1067" -> "1068" 
  "1067" -> "1072" 
  "1068" -> "1069" 
  "1068" -> "1070" 
  "1070" -> "1071" 
  "1072" -> "1073" 
  "1072" -> "1074" 
  "1074" -> "1075" 
  "1074" -> "1076" 
  "1076" -> "1077" 
  "1076" -> "1078" 
  "1079" -> "1080" 
  "1079" -> "1081" 
  "1079" -> "1085" 
  "1081" -> "1082" 
  "1081" -> "1083" 
  "1083" -> "1084" 
  "1085" -> "1086" 
  "1086" -> "1087" 
  "1086" -> "1088" 
  "1086" -> "1089" 
  "1089" -> "1090" 
  "1089" -> "1093" 
  "1090" -> "1091" 
  "1090" -> "1092" 
  "1094" -> "1095" 
  "1095" -> "1096" 
  "1095" -> "1098" 
  "1096" -> "1097" 
}

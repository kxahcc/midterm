digraph "mapFileName" {  
"13" [label = <(METHOD,mapFileName)<SUB>35</SUB>> ]
"8" [label = <(PARAM,this)<SUB>35</SUB>> ]
"14" [label = <(PARAM,String sourceFileName)<SUB>35</SUB>> ]
"15" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>> ]
"4" [label = <(LOCAL,List inputs: java.util.List)> ]
"16" [label = <(&lt;operator&gt;.assignment,List inputs = new ArrayList())<SUB>36</SUB>> ]
"17" [label = <(IDENTIFIER,inputs,List inputs = new ArrayList())<SUB>36</SUB>> ]
"18" [label = <(&lt;operator&gt;.alloc,new ArrayList())<SUB>36</SUB>> ]
"19" [label = <(&lt;init&gt;,new ArrayList())<SUB>36</SUB>> ]
"3" [label = <(IDENTIFIER,inputs,new ArrayList())<SUB>36</SUB>> ]
"6" [label = <(LOCAL,List results: java.util.List)> ]
"20" [label = <(&lt;operator&gt;.assignment,List results = new ArrayList())<SUB>37</SUB>> ]
"21" [label = <(IDENTIFIER,results,List results = new ArrayList())<SUB>37</SUB>> ]
"22" [label = <(&lt;operator&gt;.alloc,new ArrayList())<SUB>37</SUB>> ]
"23" [label = <(&lt;init&gt;,new ArrayList())<SUB>37</SUB>> ]
"5" [label = <(IDENTIFIER,results,new ArrayList())<SUB>37</SUB>> ]
"24" [label = <(add,results.add(sourceFileName))<SUB>38</SUB>> ]
"25" [label = <(IDENTIFIER,results,results.add(sourceFileName))<SUB>38</SUB>> ]
"26" [label = <(IDENTIFIER,sourceFileName,results.add(sourceFileName))<SUB>38</SUB>> ]
"27" [label = <(LOCAL,FileNameMapper mapper: ANY)> ]
"28" [label = <(&lt;operator&gt;.assignment,ANY mapper = null)<SUB>39</SUB>> ]
"29" [label = <(IDENTIFIER,mapper,ANY mapper = null)<SUB>39</SUB>> ]
"30" [label = <(LITERAL,null,ANY mapper = null)<SUB>39</SUB>> ]
"31" [label = <(CONTROL_STRUCTURE,for (Iterator mIter = getMappers().iterator(); Some(mIter.hasNext()); ),for (Iterator mIter = getMappers().iterator(); Some(mIter.hasNext()); ))<SUB>41</SUB>> ]
"32" [label = <(LOCAL,Iterator mIter: java.util.Iterator)> ]
"33" [label = <(&lt;operator&gt;.assignment,Iterator mIter = iterator())<SUB>41</SUB>> ]
"34" [label = <(IDENTIFIER,mIter,Iterator mIter = iterator())<SUB>41</SUB>> ]
"35" [label = <(iterator,iterator())<SUB>41</SUB>> ]
"36" [label = <(getMappers,getMappers())<SUB>41</SUB>> ]
"7" [label = <(IDENTIFIER,this,getMappers())<SUB>41</SUB>> ]
"37" [label = <(hasNext,mIter.hasNext())<SUB>41</SUB>> ]
"38" [label = <(IDENTIFIER,mIter,mIter.hasNext())<SUB>41</SUB>> ]
"39" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>41</SUB>> ]
"40" [label = <(&lt;operator&gt;.assignment,mapper = (FileNameMapper) (mIter.next()))<SUB>42</SUB>> ]
"41" [label = <(IDENTIFIER,mapper,mapper = (FileNameMapper) (mIter.next()))<SUB>42</SUB>> ]
"42" [label = <(&lt;operator&gt;.cast,(FileNameMapper) (mIter.next()))<SUB>42</SUB>> ]
"43" [label = <(TYPE_REF,FileNameMapper,FileNameMapper)<SUB>42</SUB>> ]
"44" [label = <(next,mIter.next())<SUB>42</SUB>> ]
"45" [label = <(IDENTIFIER,mIter,mIter.next())<SUB>42</SUB>> ]
"46" [label = <(CONTROL_STRUCTURE,if (mapper != null),if (mapper != null))<SUB>43</SUB>> ]
"47" [label = <(&lt;operator&gt;.notEquals,mapper != null)<SUB>43</SUB>> ]
"48" [label = <(IDENTIFIER,mapper,mapper != null)<SUB>43</SUB>> ]
"49" [label = <(LITERAL,null,mapper != null)<SUB>43</SUB>> ]
"50" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>43</SUB>> ]
"51" [label = <(clear,inputs.clear())<SUB>44</SUB>> ]
"52" [label = <(IDENTIFIER,inputs,inputs.clear())<SUB>44</SUB>> ]
"53" [label = <(addAll,inputs.addAll(results))<SUB>45</SUB>> ]
"54" [label = <(IDENTIFIER,inputs,inputs.addAll(results))<SUB>45</SUB>> ]
"55" [label = <(IDENTIFIER,results,inputs.addAll(results))<SUB>45</SUB>> ]
"56" [label = <(clear,results.clear())<SUB>46</SUB>> ]
"57" [label = <(IDENTIFIER,results,results.clear())<SUB>46</SUB>> ]
"58" [label = <(CONTROL_STRUCTURE,for (Iterator it = inputs.iterator(); Some(it.hasNext()); ),for (Iterator it = inputs.iterator(); Some(it.hasNext()); ))<SUB>48</SUB>> ]
"59" [label = <(LOCAL,Iterator it: java.util.Iterator)> ]
"60" [label = <(&lt;operator&gt;.assignment,Iterator it = inputs.iterator())<SUB>48</SUB>> ]
"61" [label = <(IDENTIFIER,it,Iterator it = inputs.iterator())<SUB>48</SUB>> ]
"62" [label = <(iterator,inputs.iterator())<SUB>48</SUB>> ]
"63" [label = <(IDENTIFIER,inputs,inputs.iterator())<SUB>48</SUB>> ]
"64" [label = <(hasNext,it.hasNext())<SUB>48</SUB>> ]
"65" [label = <(IDENTIFIER,it,it.hasNext())<SUB>48</SUB>> ]
"66" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>48</SUB>> ]
"67" [label = <(LOCAL,String[] mapped: java.lang.String[])> ]
"68" [label = <(&lt;operator&gt;.assignment,String[] mapped = mapFileName((String) (it.next())))<SUB>49</SUB>> ]
"69" [label = <(IDENTIFIER,mapped,String[] mapped = mapFileName((String) (it.next())))<SUB>49</SUB>> ]
"70" [label = <(mapFileName,mapFileName((String) (it.next())))<SUB>49</SUB>> ]
"71" [label = <(IDENTIFIER,mapper,mapFileName((String) (it.next())))<SUB>49</SUB>> ]
"72" [label = <(&lt;operator&gt;.cast,(String) (it.next()))<SUB>49</SUB>> ]
"73" [label = <(TYPE_REF,String,String)<SUB>49</SUB>> ]
"74" [label = <(next,it.next())<SUB>49</SUB>> ]
"75" [label = <(IDENTIFIER,it,it.next())<SUB>49</SUB>> ]
"76" [label = <(CONTROL_STRUCTURE,if (mapped != null),if (mapped != null))<SUB>50</SUB>> ]
"77" [label = <(&lt;operator&gt;.notEquals,mapped != null)<SUB>50</SUB>> ]
"78" [label = <(IDENTIFIER,mapped,mapped != null)<SUB>50</SUB>> ]
"79" [label = <(LITERAL,null,mapped != null)<SUB>50</SUB>> ]
"80" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>50</SUB>> ]
"81" [label = <(addAll,results.addAll(Arrays.asList(mapped)))<SUB>51</SUB>> ]
"82" [label = <(IDENTIFIER,results,results.addAll(Arrays.asList(mapped)))<SUB>51</SUB>> ]
"83" [label = <(asList,Arrays.asList(mapped))<SUB>51</SUB>> ]
"84" [label = <(IDENTIFIER,Arrays,Arrays.asList(mapped))<SUB>51</SUB>> ]
"85" [label = <(&lt;operator&gt;.arrayInitializer,&lt;operator&gt;.arrayInitializer)<SUB>51</SUB>> ]
"86" [label = <(IDENTIFIER,mapped,&lt;operator&gt;.arrayInitializer)<SUB>51</SUB>> ]
"87" [label = <(RETURN,return (results.size() == 0) ? null : (String[]) results.toArray(new String[results.size()]);,return (results.size() == 0) ? null : (String[]) results.toArray(new String[results.size()]);)<SUB>56</SUB>> ]
"88" [label = <(&lt;operator&gt;.conditional,(results.size() == 0) ? null : (String[]) results.toArray(new String[results.size()]))<SUB>56</SUB>> ]
"89" [label = <(&lt;operator&gt;.equals,results.size() == 0)<SUB>56</SUB>> ]
"90" [label = <(size,results.size())<SUB>56</SUB>> ]
"91" [label = <(IDENTIFIER,results,results.size())<SUB>56</SUB>> ]
"92" [label = <(LITERAL,0,results.size() == 0)<SUB>56</SUB>> ]
"93" [label = <(LITERAL,null,(results.size() == 0) ? null : (String[]) results.toArray(new String[results.size()]))<SUB>56</SUB>> ]
"94" [label = <(&lt;operator&gt;.cast,(String[]) results.toArray(new String[results.size()]))<SUB>57</SUB>> ]
"95" [label = <(TYPE_REF,String[],String[])<SUB>57</SUB>> ]
"96" [label = <(toArray,results.toArray(new String[results.size()]))<SUB>57</SUB>> ]
"97" [label = <(IDENTIFIER,results,results.toArray(new String[results.size()]))<SUB>57</SUB>> ]
"98" [label = <(&lt;operator&gt;.alloc,new String[results.size()])> ]
"99" [label = <(size,results.size())<SUB>57</SUB>> ]
"100" [label = <(IDENTIFIER,results,results.size())<SUB>57</SUB>> ]
"101" [label = <(MODIFIER,PUBLIC)> ]
"102" [label = <(MODIFIER,VIRTUAL)> ]
"103" [label = <(METHOD_RETURN,java.lang.String[])<SUB>35</SUB>> ]
  "13" -> "8" 
  "13" -> "14" 
  "13" -> "15" 
  "13" -> "101" 
  "13" -> "102" 
  "13" -> "103" 
  "15" -> "4" 
  "15" -> "16" 
  "15" -> "19" 
  "15" -> "6" 
  "15" -> "20" 
  "15" -> "23" 
  "15" -> "24" 
  "15" -> "27" 
  "15" -> "28" 
  "15" -> "31" 
  "15" -> "87" 
  "16" -> "17" 
  "16" -> "18" 
  "19" -> "3" 
  "20" -> "21" 
  "20" -> "22" 
  "23" -> "5" 
  "24" -> "25" 
  "24" -> "26" 
  "28" -> "29" 
  "28" -> "30" 
  "31" -> "32" 
  "31" -> "33" 
  "31" -> "37" 
  "31" -> "39" 
  "33" -> "34" 
  "33" -> "35" 
  "35" -> "36" 
  "36" -> "7" 
  "37" -> "38" 
  "39" -> "40" 
  "39" -> "46" 
  "40" -> "41" 
  "40" -> "42" 
  "42" -> "43" 
  "42" -> "44" 
  "44" -> "45" 
  "46" -> "47" 
  "46" -> "50" 
  "47" -> "48" 
  "47" -> "49" 
  "50" -> "51" 
  "50" -> "53" 
  "50" -> "56" 
  "50" -> "58" 
  "51" -> "52" 
  "53" -> "54" 
  "53" -> "55" 
  "56" -> "57" 
  "58" -> "59" 
  "58" -> "60" 
  "58" -> "64" 
  "58" -> "66" 
  "60" -> "61" 
  "60" -> "62" 
  "62" -> "63" 
  "64" -> "65" 
  "66" -> "67" 
  "66" -> "68" 
  "66" -> "76" 
  "68" -> "69" 
  "68" -> "70" 
  "70" -> "71" 
  "70" -> "72" 
  "72" -> "73" 
  "72" -> "74" 
  "74" -> "75" 
  "76" -> "77" 
  "76" -> "80" 
  "77" -> "78" 
  "77" -> "79" 
  "80" -> "81" 
  "81" -> "82" 
  "81" -> "83" 
  "83" -> "84" 
  "83" -> "85" 
  "85" -> "86" 
  "87" -> "88" 
  "88" -> "89" 
  "88" -> "93" 
  "88" -> "94" 
  "89" -> "90" 
  "89" -> "92" 
  "90" -> "91" 
  "94" -> "95" 
  "94" -> "96" 
  "96" -> "97" 
  "96" -> "98" 
  "98" -> "99" 
  "99" -> "100" 
}

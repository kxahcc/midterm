digraph "run" {  
"31" [label = <(METHOD,run)<SUB>48</SUB>> ]
"32" [label = <(PARAM,this)<SUB>48</SUB>> ]
"33" [label = <(PARAM,Commandline cmd)<SUB>48</SUB>> ]
"34" [label = <(PARAM,ProjectComponent log)<SUB>48</SUB>> ]
"35" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>49</SUB>> ]
"36" [label = <(CONTROL_STRUCTURE,try,try)<SUB>50</SUB>> ]
"37" [label = <(BLOCK,try,try)<SUB>50</SUB>> ]
"38" [label = <(LOCAL,Class n2aMain: java.lang.Class)> ]
"39" [label = <(&lt;operator&gt;.assignment,Class n2aMain = Class.forName(&quot;sun.tools.native2ascii.Main&quot;))<SUB>51</SUB>> ]
"40" [label = <(IDENTIFIER,n2aMain,Class n2aMain = Class.forName(&quot;sun.tools.native2ascii.Main&quot;))<SUB>51</SUB>> ]
"41" [label = <(forName,Class.forName(&quot;sun.tools.native2ascii.Main&quot;))<SUB>51</SUB>> ]
"42" [label = <(IDENTIFIER,Class,Class.forName(&quot;sun.tools.native2ascii.Main&quot;))<SUB>51</SUB>> ]
"43" [label = <(LITERAL,&quot;sun.tools.native2ascii.Main&quot;,Class.forName(&quot;sun.tools.native2ascii.Main&quot;))<SUB>51</SUB>> ]
"44" [label = <(LOCAL,Class[] param: java.lang.Class[])> ]
"45" [label = <(&lt;operator&gt;.assignment,Class[] param = new Class[] { String[].class })<SUB>52</SUB>> ]
"46" [label = <(IDENTIFIER,param,Class[] param = new Class[] { String[].class })<SUB>52</SUB>> ]
"47" [label = <(&lt;operator&gt;.arrayInitializer,new Class[] { String[].class })<SUB>52</SUB>> ]
"48" [label = <(&lt;operator&gt;.fieldAccess,String[].class)<SUB>52</SUB>> ]
"49" [label = <(IDENTIFIER,String[],new Class[] { String[].class })<SUB>52</SUB>> ]
"50" [label = <(FIELD_IDENTIFIER,class,class)<SUB>52</SUB>> ]
"51" [label = <(LOCAL,Method convert: java.lang.reflect.Method)> ]
"52" [label = <(&lt;operator&gt;.assignment,Method convert = n2aMain.getMethod(&quot;convert&quot;, param))<SUB>53</SUB>> ]
"53" [label = <(IDENTIFIER,convert,Method convert = n2aMain.getMethod(&quot;convert&quot;, param))<SUB>53</SUB>> ]
"54" [label = <(getMethod,n2aMain.getMethod(&quot;convert&quot;, param))<SUB>53</SUB>> ]
"55" [label = <(IDENTIFIER,n2aMain,n2aMain.getMethod(&quot;convert&quot;, param))<SUB>53</SUB>> ]
"56" [label = <(LITERAL,&quot;convert&quot;,n2aMain.getMethod(&quot;convert&quot;, param))<SUB>53</SUB>> ]
"57" [label = <(&lt;operator&gt;.arrayInitializer,&lt;operator&gt;.arrayInitializer)<SUB>53</SUB>> ]
"58" [label = <(IDENTIFIER,param,&lt;operator&gt;.arrayInitializer)<SUB>53</SUB>> ]
"59" [label = <(CONTROL_STRUCTURE,if (convert == null),if (convert == null))<SUB>54</SUB>> ]
"60" [label = <(&lt;operator&gt;.equals,convert == null)<SUB>54</SUB>> ]
"61" [label = <(IDENTIFIER,convert,convert == null)<SUB>54</SUB>> ]
"62" [label = <(LITERAL,null,convert == null)<SUB>54</SUB>> ]
"63" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>54</SUB>> ]
"64" [label = <(&lt;operator&gt;.throw,throw new BuildException(&quot;Could not find convert() method in &quot; + &quot;sun.tools.native2ascii.Main&quot;);)<SUB>55</SUB>> ]
"65" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>55</SUB>> ]
"66" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"67" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"68" [label = <(&lt;operator&gt;.alloc,new BuildException(&quot;Could not find convert() method in &quot; + &quot;sun.tools.native2ascii.Main&quot;))<SUB>55</SUB>> ]
"69" [label = <(&lt;init&gt;,new BuildException(&quot;Could not find convert() method in &quot; + &quot;sun.tools.native2ascii.Main&quot;))<SUB>55</SUB>> ]
"70" [label = <(IDENTIFIER,$obj0,new BuildException(&quot;Could not find convert() method in &quot; + &quot;sun.tools.native2ascii.Main&quot;))> ]
"71" [label = <(&lt;operator&gt;.addition,&quot;Could not find convert() method in &quot; + &quot;sun.tools.native2ascii.Main&quot;)<SUB>55</SUB>> ]
"72" [label = <(LITERAL,&quot;Could not find convert() method in &quot;,&quot;Could not find convert() method in &quot; + &quot;sun.tools.native2ascii.Main&quot;)<SUB>55</SUB>> ]
"73" [label = <(LITERAL,&quot;sun.tools.native2ascii.Main&quot;,&quot;Could not find convert() method in &quot; + &quot;sun.tools.native2ascii.Main&quot;)<SUB>56</SUB>> ]
"74" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"75" [label = <(LOCAL,Object o: java.lang.Object)> ]
"76" [label = <(&lt;operator&gt;.assignment,Object o = n2aMain.newInstance())<SUB>58</SUB>> ]
"77" [label = <(IDENTIFIER,o,Object o = n2aMain.newInstance())<SUB>58</SUB>> ]
"78" [label = <(newInstance,n2aMain.newInstance())<SUB>58</SUB>> ]
"79" [label = <(IDENTIFIER,n2aMain,n2aMain.newInstance())<SUB>58</SUB>> ]
"80" [label = <(RETURN,return ((Boolean) convert.invoke(o, new Object[] { cmd.getArguments() })).booleanValue();,return ((Boolean) convert.invoke(o, new Object[] { cmd.getArguments() })).booleanValue();)<SUB>59</SUB>> ]
"81" [label = <(booleanValue,this.booleanValue())<SUB>59</SUB>> ]
"82" [label = <(&lt;operator&gt;.cast,(Boolean) convert.invoke(o, new Object[] { cmd.getArguments() }))<SUB>59</SUB>> ]
"83" [label = <(TYPE_REF,Boolean,Boolean)<SUB>59</SUB>> ]
"84" [label = <(invoke,convert.invoke(o, new Object[] { cmd.getArguments() }))<SUB>59</SUB>> ]
"85" [label = <(IDENTIFIER,convert,convert.invoke(o, new Object[] { cmd.getArguments() }))<SUB>59</SUB>> ]
"86" [label = <(IDENTIFIER,o,convert.invoke(o, new Object[] { cmd.getArguments() }))<SUB>59</SUB>> ]
"87" [label = <(&lt;operator&gt;.arrayInitializer,&lt;operator&gt;.arrayInitializer)<SUB>59</SUB>> ]
"88" [label = <(&lt;operator&gt;.arrayInitializer,new Object[] { cmd.getArguments() })<SUB>60</SUB>> ]
"89" [label = <(getArguments,getArguments())<SUB>60</SUB>> ]
"90" [label = <(IDENTIFIER,cmd,getArguments())<SUB>60</SUB>> ]
"91" [label = <(BLOCK,catch,catch)> ]
"92" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>62</SUB>> ]
"93" [label = <(&lt;operator&gt;.throw,throw ex;)<SUB>64</SUB>> ]
"94" [label = <(IDENTIFIER,ex,throw ex;)<SUB>64</SUB>> ]
"95" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>65</SUB>> ]
"96" [label = <(&lt;operator&gt;.throw,throw new BuildException(&quot;Error starting Sun's native2ascii: &quot;, ex);)<SUB>67</SUB>> ]
"97" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>67</SUB>> ]
"98" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"99" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"100" [label = <(&lt;operator&gt;.alloc,new BuildException(&quot;Error starting Sun's native2ascii: &quot;, ex))<SUB>67</SUB>> ]
"101" [label = <(&lt;init&gt;,new BuildException(&quot;Error starting Sun's native2ascii: &quot;, ex))<SUB>67</SUB>> ]
"102" [label = <(IDENTIFIER,$obj1,new BuildException(&quot;Error starting Sun's native2ascii: &quot;, ex))> ]
"103" [label = <(LITERAL,&quot;Error starting Sun's native2ascii: &quot;,new BuildException(&quot;Error starting Sun's native2ascii: &quot;, ex))<SUB>67</SUB>> ]
"104" [label = <(IDENTIFIER,ex,new BuildException(&quot;Error starting Sun's native2ascii: &quot;, ex))<SUB>67</SUB>> ]
"105" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"106" [label = <(MODIFIER,PROTECTED)> ]
"107" [label = <(MODIFIER,VIRTUAL)> ]
"108" [label = <(METHOD_RETURN,boolean)<SUB>48</SUB>> ]
  "31" -> "32" 
  "31" -> "33" 
  "31" -> "34" 
  "31" -> "35" 
  "31" -> "106" 
  "31" -> "107" 
  "31" -> "108" 
  "35" -> "36" 
  "36" -> "37" 
  "36" -> "91" 
  "37" -> "38" 
  "37" -> "39" 
  "37" -> "44" 
  "37" -> "45" 
  "37" -> "51" 
  "37" -> "52" 
  "37" -> "59" 
  "37" -> "75" 
  "37" -> "76" 
  "37" -> "80" 
  "39" -> "40" 
  "39" -> "41" 
  "41" -> "42" 
  "41" -> "43" 
  "45" -> "46" 
  "45" -> "47" 
  "47" -> "48" 
  "48" -> "49" 
  "48" -> "50" 
  "52" -> "53" 
  "52" -> "54" 
  "54" -> "55" 
  "54" -> "56" 
  "54" -> "57" 
  "57" -> "58" 
  "59" -> "60" 
  "59" -> "63" 
  "60" -> "61" 
  "60" -> "62" 
  "63" -> "64" 
  "64" -> "65" 
  "65" -> "66" 
  "65" -> "69" 
  "65" -> "74" 
  "66" -> "67" 
  "66" -> "68" 
  "69" -> "70" 
  "69" -> "71" 
  "71" -> "72" 
  "71" -> "73" 
  "76" -> "77" 
  "76" -> "78" 
  "78" -> "79" 
  "80" -> "81" 
  "81" -> "82" 
  "82" -> "83" 
  "82" -> "84" 
  "84" -> "85" 
  "84" -> "86" 
  "84" -> "87" 
  "87" -> "88" 
  "88" -> "89" 
  "89" -> "90" 
  "91" -> "92" 
  "91" -> "95" 
  "92" -> "93" 
  "93" -> "94" 
  "95" -> "96" 
  "96" -> "97" 
  "97" -> "98" 
  "97" -> "101" 
  "97" -> "105" 
  "98" -> "99" 
  "98" -> "100" 
  "101" -> "102" 
  "101" -> "103" 
  "101" -> "104" 
}

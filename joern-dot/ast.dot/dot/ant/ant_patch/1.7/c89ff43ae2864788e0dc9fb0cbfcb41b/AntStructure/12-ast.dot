digraph "isNmtoken" {  
"1042" [label = <(METHOD,isNmtoken)<SUB>418</SUB>> ]
"1043" [label = <(PARAM,String s)<SUB>418</SUB>> ]
"1044" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>418</SUB>> ]
"1045" [label = <(LOCAL,int length: int)> ]
"1046" [label = <(&lt;operator&gt;.assignment,int length = s.length())<SUB>419</SUB>> ]
"1047" [label = <(IDENTIFIER,length,int length = s.length())<SUB>419</SUB>> ]
"1048" [label = <(length,s.length())<SUB>419</SUB>> ]
"1049" [label = <(IDENTIFIER,s,s.length())<SUB>419</SUB>> ]
"1050" [label = <(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; length); i++),for (int i = 0; Some(i &lt; length); i++))<SUB>420</SUB>> ]
"1051" [label = <(LOCAL,int i: int)> ]
"1052" [label = <(&lt;operator&gt;.assignment,int i = 0)<SUB>420</SUB>> ]
"1053" [label = <(IDENTIFIER,i,int i = 0)<SUB>420</SUB>> ]
"1054" [label = <(LITERAL,0,int i = 0)<SUB>420</SUB>> ]
"1055" [label = <(&lt;operator&gt;.lessThan,i &lt; length)<SUB>420</SUB>> ]
"1056" [label = <(IDENTIFIER,i,i &lt; length)<SUB>420</SUB>> ]
"1057" [label = <(IDENTIFIER,length,i &lt; length)<SUB>420</SUB>> ]
"1058" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>420</SUB>> ]
"1059" [label = <(IDENTIFIER,i,i++)<SUB>420</SUB>> ]
"1060" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>420</SUB>> ]
"1061" [label = <(LOCAL,char c: char)> ]
"1062" [label = <(&lt;operator&gt;.assignment,char c = s.charAt(i))<SUB>421</SUB>> ]
"1063" [label = <(IDENTIFIER,c,char c = s.charAt(i))<SUB>421</SUB>> ]
"1064" [label = <(charAt,s.charAt(i))<SUB>421</SUB>> ]
"1065" [label = <(IDENTIFIER,s,s.charAt(i))<SUB>421</SUB>> ]
"1066" [label = <(IDENTIFIER,i,s.charAt(i))<SUB>421</SUB>> ]
"1067" [label = <(CONTROL_STRUCTURE,if (!Character.isLetterOrDigit(c) &amp;&amp; c != '.' &amp;&amp; c != '-' &amp;&amp; c != '_' &amp;&amp; c != ':'),if (!Character.isLetterOrDigit(c) &amp;&amp; c != '.' &amp;&amp; c != '-' &amp;&amp; c != '_' &amp;&amp; c != ':'))<SUB>423</SUB>> ]
"1068" [label = <(&lt;operator&gt;.logicalAnd,!Character.isLetterOrDigit(c) &amp;&amp; c != '.' &amp;&amp; c != '-' &amp;&amp; c != '_' &amp;&amp; c != ':')<SUB>423</SUB>> ]
"1069" [label = <(&lt;operator&gt;.logicalAnd,!Character.isLetterOrDigit(c) &amp;&amp; c != '.' &amp;&amp; c != '-' &amp;&amp; c != '_')<SUB>423</SUB>> ]
"1070" [label = <(&lt;operator&gt;.logicalAnd,!Character.isLetterOrDigit(c) &amp;&amp; c != '.' &amp;&amp; c != '-')<SUB>423</SUB>> ]
"1071" [label = <(&lt;operator&gt;.logicalAnd,!Character.isLetterOrDigit(c) &amp;&amp; c != '.')<SUB>423</SUB>> ]
"1072" [label = <(&lt;operator&gt;.logicalNot,!Character.isLetterOrDigit(c))<SUB>423</SUB>> ]
"1073" [label = <(isLetterOrDigit,Character.isLetterOrDigit(c))<SUB>423</SUB>> ]
"1074" [label = <(IDENTIFIER,Character,Character.isLetterOrDigit(c))<SUB>423</SUB>> ]
"1075" [label = <(IDENTIFIER,c,Character.isLetterOrDigit(c))<SUB>423</SUB>> ]
"1076" [label = <(&lt;operator&gt;.notEquals,c != '.')<SUB>424</SUB>> ]
"1077" [label = <(IDENTIFIER,c,c != '.')<SUB>424</SUB>> ]
"1078" [label = <(LITERAL,'.',c != '.')<SUB>424</SUB>> ]
"1079" [label = <(&lt;operator&gt;.notEquals,c != '-')<SUB>424</SUB>> ]
"1080" [label = <(IDENTIFIER,c,c != '-')<SUB>424</SUB>> ]
"1081" [label = <(LITERAL,'-',c != '-')<SUB>424</SUB>> ]
"1082" [label = <(&lt;operator&gt;.notEquals,c != '_')<SUB>424</SUB>> ]
"1083" [label = <(IDENTIFIER,c,c != '_')<SUB>424</SUB>> ]
"1084" [label = <(LITERAL,'_',c != '_')<SUB>424</SUB>> ]
"1085" [label = <(&lt;operator&gt;.notEquals,c != ':')<SUB>424</SUB>> ]
"1086" [label = <(IDENTIFIER,c,c != ':')<SUB>424</SUB>> ]
"1087" [label = <(LITERAL,':',c != ':')<SUB>424</SUB>> ]
"1088" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>424</SUB>> ]
"1089" [label = <(RETURN,return false;,return false;)<SUB>425</SUB>> ]
"1090" [label = <(LITERAL,false,return false;)<SUB>425</SUB>> ]
"1091" [label = <(RETURN,return true;,return true;)<SUB>428</SUB>> ]
"1092" [label = <(LITERAL,true,return true;)<SUB>428</SUB>> ]
"1093" [label = <(MODIFIER,PUBLIC)> ]
"1094" [label = <(MODIFIER,STATIC)> ]
"1095" [label = <(METHOD_RETURN,boolean)<SUB>418</SUB>> ]
  "1042" -> "1043" 
  "1042" -> "1044" 
  "1042" -> "1093" 
  "1042" -> "1094" 
  "1042" -> "1095" 
  "1044" -> "1045" 
  "1044" -> "1046" 
  "1044" -> "1050" 
  "1044" -> "1091" 
  "1046" -> "1047" 
  "1046" -> "1048" 
  "1048" -> "1049" 
  "1050" -> "1051" 
  "1050" -> "1052" 
  "1050" -> "1055" 
  "1050" -> "1058" 
  "1050" -> "1060" 
  "1052" -> "1053" 
  "1052" -> "1054" 
  "1055" -> "1056" 
  "1055" -> "1057" 
  "1058" -> "1059" 
  "1060" -> "1061" 
  "1060" -> "1062" 
  "1060" -> "1067" 
  "1062" -> "1063" 
  "1062" -> "1064" 
  "1064" -> "1065" 
  "1064" -> "1066" 
  "1067" -> "1068" 
  "1067" -> "1088" 
  "1068" -> "1069" 
  "1068" -> "1085" 
  "1069" -> "1070" 
  "1069" -> "1082" 
  "1070" -> "1071" 
  "1070" -> "1079" 
  "1071" -> "1072" 
  "1071" -> "1076" 
  "1072" -> "1073" 
  "1073" -> "1074" 
  "1073" -> "1075" 
  "1076" -> "1077" 
  "1076" -> "1078" 
  "1079" -> "1080" 
  "1079" -> "1081" 
  "1082" -> "1083" 
  "1082" -> "1084" 
  "1085" -> "1086" 
  "1085" -> "1087" 
  "1088" -> "1089" 
  "1089" -> "1090" 
  "1091" -> "1092" 
}

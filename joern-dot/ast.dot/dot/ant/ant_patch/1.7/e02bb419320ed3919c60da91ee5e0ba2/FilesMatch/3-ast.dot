digraph "eval" {  
"66" [label = <(METHOD,eval)<SUB>80</SUB>> ]
"67" [label = <(PARAM,this)<SUB>80</SUB>> ]
"68" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>81</SUB>> ]
"69" [label = <(CONTROL_STRUCTURE,if (file1 == null || file2 == null),if (file1 == null || file2 == null))<SUB>84</SUB>> ]
"70" [label = <(&lt;operator&gt;.logicalOr,file1 == null || file2 == null)<SUB>84</SUB>> ]
"71" [label = <(&lt;operator&gt;.equals,file1 == null)<SUB>84</SUB>> ]
"72" [label = <(&lt;operator&gt;.fieldAccess,this.file1)<SUB>84</SUB>> ]
"73" [label = <(IDENTIFIER,this,file1 == null)<SUB>84</SUB>> ]
"74" [label = <(FIELD_IDENTIFIER,file1,file1)<SUB>84</SUB>> ]
"75" [label = <(LITERAL,null,file1 == null)<SUB>84</SUB>> ]
"76" [label = <(&lt;operator&gt;.equals,file2 == null)<SUB>84</SUB>> ]
"77" [label = <(&lt;operator&gt;.fieldAccess,this.file2)<SUB>84</SUB>> ]
"78" [label = <(IDENTIFIER,this,file2 == null)<SUB>84</SUB>> ]
"79" [label = <(FIELD_IDENTIFIER,file2,file2)<SUB>84</SUB>> ]
"80" [label = <(LITERAL,null,file2 == null)<SUB>84</SUB>> ]
"81" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>84</SUB>> ]
"82" [label = <(&lt;operator&gt;.throw,throw new BuildException(&quot;both file1 and file2 are required in &quot; + &quot;filesmatch&quot;);)<SUB>85</SUB>> ]
"83" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>85</SUB>> ]
"84" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"85" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"86" [label = <(&lt;operator&gt;.alloc,new BuildException(&quot;both file1 and file2 are required in &quot; + &quot;filesmatch&quot;))<SUB>85</SUB>> ]
"87" [label = <(&lt;init&gt;,new BuildException(&quot;both file1 and file2 are required in &quot; + &quot;filesmatch&quot;))<SUB>85</SUB>> ]
"88" [label = <(IDENTIFIER,$obj0,new BuildException(&quot;both file1 and file2 are required in &quot; + &quot;filesmatch&quot;))> ]
"89" [label = <(&lt;operator&gt;.addition,&quot;both file1 and file2 are required in &quot; + &quot;filesmatch&quot;)<SUB>85</SUB>> ]
"90" [label = <(LITERAL,&quot;both file1 and file2 are required in &quot;,&quot;both file1 and file2 are required in &quot; + &quot;filesmatch&quot;)<SUB>85</SUB>> ]
"91" [label = <(LITERAL,&quot;filesmatch&quot;,&quot;both file1 and file2 are required in &quot; + &quot;filesmatch&quot;)<SUB>86</SUB>> ]
"92" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"93" [label = <(LOCAL,boolean matches: boolean)> ]
"94" [label = <(&lt;operator&gt;.assignment,boolean matches = false)<SUB>90</SUB>> ]
"95" [label = <(IDENTIFIER,matches,boolean matches = false)<SUB>90</SUB>> ]
"96" [label = <(LITERAL,false,boolean matches = false)<SUB>90</SUB>> ]
"97" [label = <(CONTROL_STRUCTURE,try,try)<SUB>91</SUB>> ]
"98" [label = <(BLOCK,try,try)<SUB>91</SUB>> ]
"99" [label = <(&lt;operator&gt;.assignment,matches = contentEquals(file1, file2, textfile))<SUB>92</SUB>> ]
"100" [label = <(IDENTIFIER,matches,matches = contentEquals(file1, file2, textfile))<SUB>92</SUB>> ]
"101" [label = <(contentEquals,contentEquals(file1, file2, textfile))<SUB>92</SUB>> ]
"102" [label = <(&lt;operator&gt;.fieldAccess,FilesMatch.FILE_UTILS)<SUB>92</SUB>> ]
"103" [label = <(IDENTIFIER,FilesMatch,contentEquals(file1, file2, textfile))<SUB>92</SUB>> ]
"104" [label = <(FIELD_IDENTIFIER,FILE_UTILS,FILE_UTILS)<SUB>92</SUB>> ]
"105" [label = <(&lt;operator&gt;.fieldAccess,this.file1)<SUB>92</SUB>> ]
"106" [label = <(IDENTIFIER,this,contentEquals(file1, file2, textfile))<SUB>92</SUB>> ]
"107" [label = <(FIELD_IDENTIFIER,file1,file1)<SUB>92</SUB>> ]
"108" [label = <(&lt;operator&gt;.fieldAccess,this.file2)<SUB>92</SUB>> ]
"109" [label = <(IDENTIFIER,this,contentEquals(file1, file2, textfile))<SUB>92</SUB>> ]
"110" [label = <(FIELD_IDENTIFIER,file2,file2)<SUB>92</SUB>> ]
"111" [label = <(&lt;operator&gt;.fieldAccess,this.textfile)<SUB>92</SUB>> ]
"112" [label = <(IDENTIFIER,this,contentEquals(file1, file2, textfile))<SUB>92</SUB>> ]
"113" [label = <(FIELD_IDENTIFIER,textfile,textfile)<SUB>92</SUB>> ]
"114" [label = <(BLOCK,catch,catch)> ]
"115" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>93</SUB>> ]
"116" [label = <(&lt;operator&gt;.throw,throw new BuildException(&quot;when comparing files: &quot; + ioe.getMessage(), ioe);)<SUB>94</SUB>> ]
"117" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>94</SUB>> ]
"118" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"119" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"120" [label = <(&lt;operator&gt;.alloc,new BuildException(&quot;when comparing files: &quot; + ioe.getMessage(), ioe))<SUB>94</SUB>> ]
"121" [label = <(&lt;init&gt;,new BuildException(&quot;when comparing files: &quot; + ioe.getMessage(), ioe))<SUB>94</SUB>> ]
"122" [label = <(IDENTIFIER,$obj1,new BuildException(&quot;when comparing files: &quot; + ioe.getMessage(), ioe))> ]
"123" [label = <(&lt;operator&gt;.addition,&quot;when comparing files: &quot; + ioe.getMessage())<SUB>94</SUB>> ]
"124" [label = <(LITERAL,&quot;when comparing files: &quot;,&quot;when comparing files: &quot; + ioe.getMessage())<SUB>94</SUB>> ]
"125" [label = <(getMessage,ioe.getMessage())<SUB>95</SUB>> ]
"126" [label = <(IDENTIFIER,ioe,ioe.getMessage())<SUB>95</SUB>> ]
"127" [label = <(IDENTIFIER,ioe,new BuildException(&quot;when comparing files: &quot; + ioe.getMessage(), ioe))<SUB>95</SUB>> ]
"128" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"129" [label = <(RETURN,return matches;,return matches;)<SUB>97</SUB>> ]
"130" [label = <(IDENTIFIER,matches,return matches;)<SUB>97</SUB>> ]
"131" [label = <(MODIFIER,PUBLIC)> ]
"132" [label = <(MODIFIER,VIRTUAL)> ]
"133" [label = <(METHOD_RETURN,boolean)<SUB>80</SUB>> ]
  "66" -> "67" 
  "66" -> "68" 
  "66" -> "131" 
  "66" -> "132" 
  "66" -> "133" 
  "68" -> "69" 
  "68" -> "93" 
  "68" -> "94" 
  "68" -> "97" 
  "68" -> "129" 
  "69" -> "70" 
  "69" -> "81" 
  "70" -> "71" 
  "70" -> "76" 
  "71" -> "72" 
  "71" -> "75" 
  "72" -> "73" 
  "72" -> "74" 
  "76" -> "77" 
  "76" -> "80" 
  "77" -> "78" 
  "77" -> "79" 
  "81" -> "82" 
  "82" -> "83" 
  "83" -> "84" 
  "83" -> "87" 
  "83" -> "92" 
  "84" -> "85" 
  "84" -> "86" 
  "87" -> "88" 
  "87" -> "89" 
  "89" -> "90" 
  "89" -> "91" 
  "94" -> "95" 
  "94" -> "96" 
  "97" -> "98" 
  "97" -> "114" 
  "98" -> "99" 
  "99" -> "100" 
  "99" -> "101" 
  "101" -> "102" 
  "101" -> "105" 
  "101" -> "108" 
  "101" -> "111" 
  "102" -> "103" 
  "102" -> "104" 
  "105" -> "106" 
  "105" -> "107" 
  "108" -> "109" 
  "108" -> "110" 
  "111" -> "112" 
  "111" -> "113" 
  "114" -> "115" 
  "115" -> "116" 
  "116" -> "117" 
  "117" -> "118" 
  "117" -> "121" 
  "117" -> "128" 
  "118" -> "119" 
  "118" -> "120" 
  "121" -> "122" 
  "121" -> "123" 
  "121" -> "127" 
  "123" -> "124" 
  "123" -> "125" 
  "125" -> "126" 
  "129" -> "130" 
}

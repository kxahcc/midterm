digraph "eval" {  
"37" [label = <(METHOD,eval)<SUB>39</SUB>> ]
"4" [label = <(PARAM,this)<SUB>39</SUB>> ]
"38" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>> ]
"39" [label = <(validate,this.validate())<SUB>40</SUB>> ]
"3" [label = <(IDENTIFIER,this,this.validate())<SUB>40</SUB>> ]
"40" [label = <(CONTROL_STRUCTURE,try,try)<SUB>41</SUB>> ]
"41" [label = <(BLOCK,try,try)<SUB>41</SUB>> ]
"42" [label = <(CONTROL_STRUCTURE,if (JavaEnvUtils.isAtLeastJavaVersion(&quot;1.6&quot;)),if (JavaEnvUtils.isAtLeastJavaVersion(&quot;1.6&quot;)))<SUB>42</SUB>> ]
"43" [label = <(isAtLeastJavaVersion,isAtLeastJavaVersion(&quot;1.6&quot;))<SUB>42</SUB>> ]
"44" [label = <(IDENTIFIER,JavaEnvUtils,isAtLeastJavaVersion(&quot;1.6&quot;))<SUB>42</SUB>> ]
"45" [label = <(LITERAL,&quot;1.6&quot;,isAtLeastJavaVersion(&quot;1.6&quot;))<SUB>42</SUB>> ]
"46" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>> ]
"6" [label = <(LOCAL,File fs: java.io.File)> ]
"47" [label = <(&lt;operator&gt;.assignment,File fs = new File(partition))<SUB>44</SUB>> ]
"48" [label = <(IDENTIFIER,fs,File fs = new File(partition))<SUB>44</SUB>> ]
"49" [label = <(&lt;operator&gt;.alloc,new File(partition))<SUB>44</SUB>> ]
"50" [label = <(&lt;init&gt;,new File(partition))<SUB>44</SUB>> ]
"5" [label = <(IDENTIFIER,fs,new File(partition))<SUB>44</SUB>> ]
"51" [label = <(&lt;operator&gt;.fieldAccess,this.partition)<SUB>44</SUB>> ]
"52" [label = <(IDENTIFIER,this,new File(partition))<SUB>44</SUB>> ]
"53" [label = <(FIELD_IDENTIFIER,partition,partition)<SUB>44</SUB>> ]
"8" [label = <(LOCAL,ReflectWrapper w: org.apache.tools.ant.util.ReflectWrapper)> ]
"54" [label = <(&lt;operator&gt;.assignment,ReflectWrapper w = new ReflectWrapper(fs))<SUB>45</SUB>> ]
"55" [label = <(IDENTIFIER,w,ReflectWrapper w = new ReflectWrapper(fs))<SUB>45</SUB>> ]
"56" [label = <(&lt;operator&gt;.alloc,new ReflectWrapper(fs))<SUB>45</SUB>> ]
"57" [label = <(&lt;init&gt;,new ReflectWrapper(fs))<SUB>45</SUB>> ]
"7" [label = <(IDENTIFIER,w,new ReflectWrapper(fs))<SUB>45</SUB>> ]
"58" [label = <(IDENTIFIER,fs,new ReflectWrapper(fs))<SUB>45</SUB>> ]
"59" [label = <(LOCAL,long free: long)> ]
"60" [label = <(&lt;operator&gt;.assignment,long free = this.longValue())<SUB>46</SUB>> ]
"61" [label = <(IDENTIFIER,free,long free = this.longValue())<SUB>46</SUB>> ]
"62" [label = <(longValue,this.longValue())<SUB>46</SUB>> ]
"63" [label = <(&lt;operator&gt;.cast,(Long) w.invoke(&quot;getFreeSpace&quot;))<SUB>46</SUB>> ]
"64" [label = <(TYPE_REF,Long,Long)<SUB>46</SUB>> ]
"65" [label = <(invoke,invoke(&quot;getFreeSpace&quot;))<SUB>46</SUB>> ]
"66" [label = <(IDENTIFIER,w,invoke(&quot;getFreeSpace&quot;))<SUB>46</SUB>> ]
"67" [label = <(LITERAL,&quot;getFreeSpace&quot;,invoke(&quot;getFreeSpace&quot;))<SUB>46</SUB>> ]
"68" [label = <(RETURN,return free &gt;= StringUtils.parseHumanSizes(needed);,return free &gt;= StringUtils.parseHumanSizes(needed);)<SUB>47</SUB>> ]
"69" [label = <(&lt;operator&gt;.greaterEqualsThan,free &gt;= StringUtils.parseHumanSizes(needed))<SUB>47</SUB>> ]
"70" [label = <(IDENTIFIER,free,free &gt;= StringUtils.parseHumanSizes(needed))<SUB>47</SUB>> ]
"71" [label = <(parseHumanSizes,parseHumanSizes(needed))<SUB>47</SUB>> ]
"72" [label = <(IDENTIFIER,StringUtils,parseHumanSizes(needed))<SUB>47</SUB>> ]
"73" [label = <(&lt;operator&gt;.fieldAccess,this.needed)<SUB>47</SUB>> ]
"74" [label = <(IDENTIFIER,this,parseHumanSizes(needed))<SUB>47</SUB>> ]
"75" [label = <(FIELD_IDENTIFIER,needed,needed)<SUB>47</SUB>> ]
"76" [label = <(CONTROL_STRUCTURE,else,else)<SUB>48</SUB>> ]
"77" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>48</SUB>> ]
"78" [label = <(&lt;operator&gt;.throw,throw new BuildException(&quot;HasFreeSpace condition not supported on Java5 or less.&quot;);)<SUB>49</SUB>> ]
"79" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>49</SUB>> ]
"80" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"81" [label = <(IDENTIFIER,$obj2,&lt;empty&gt;)> ]
"82" [label = <(&lt;operator&gt;.alloc,new BuildException(&quot;HasFreeSpace condition not supported on Java5 or less.&quot;))<SUB>49</SUB>> ]
"83" [label = <(&lt;init&gt;,new BuildException(&quot;HasFreeSpace condition not supported on Java5 or less.&quot;))<SUB>49</SUB>> ]
"84" [label = <(IDENTIFIER,$obj2,new BuildException(&quot;HasFreeSpace condition not supported on Java5 or less.&quot;))> ]
"85" [label = <(LITERAL,&quot;HasFreeSpace condition not supported on Java5 or less.&quot;,new BuildException(&quot;HasFreeSpace condition not supported on Java5 or less.&quot;))<SUB>49</SUB>> ]
"86" [label = <(IDENTIFIER,$obj2,&lt;empty&gt;)> ]
"87" [label = <(BLOCK,catch,catch)> ]
"88" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>51</SUB>> ]
"89" [label = <(&lt;operator&gt;.throw,throw new BuildException(e);)<SUB>52</SUB>> ]
"90" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>52</SUB>> ]
"91" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"92" [label = <(IDENTIFIER,$obj3,&lt;empty&gt;)> ]
"93" [label = <(&lt;operator&gt;.alloc,new BuildException(e))<SUB>52</SUB>> ]
"94" [label = <(&lt;init&gt;,new BuildException(e))<SUB>52</SUB>> ]
"95" [label = <(IDENTIFIER,$obj3,new BuildException(e))> ]
"96" [label = <(IDENTIFIER,e,new BuildException(e))<SUB>52</SUB>> ]
"97" [label = <(IDENTIFIER,$obj3,&lt;empty&gt;)> ]
"98" [label = <(MODIFIER,PUBLIC)> ]
"99" [label = <(MODIFIER,VIRTUAL)> ]
"100" [label = <(METHOD_RETURN,boolean)<SUB>39</SUB>> ]
  "37" -> "4" 
  "37" -> "38" 
  "37" -> "98" 
  "37" -> "99" 
  "37" -> "100" 
  "38" -> "39" 
  "38" -> "40" 
  "39" -> "3" 
  "40" -> "41" 
  "40" -> "87" 
  "41" -> "42" 
  "42" -> "43" 
  "42" -> "46" 
  "42" -> "76" 
  "43" -> "44" 
  "43" -> "45" 
  "46" -> "6" 
  "46" -> "47" 
  "46" -> "50" 
  "46" -> "8" 
  "46" -> "54" 
  "46" -> "57" 
  "46" -> "59" 
  "46" -> "60" 
  "46" -> "68" 
  "47" -> "48" 
  "47" -> "49" 
  "50" -> "5" 
  "50" -> "51" 
  "51" -> "52" 
  "51" -> "53" 
  "54" -> "55" 
  "54" -> "56" 
  "57" -> "7" 
  "57" -> "58" 
  "60" -> "61" 
  "60" -> "62" 
  "62" -> "63" 
  "63" -> "64" 
  "63" -> "65" 
  "65" -> "66" 
  "65" -> "67" 
  "68" -> "69" 
  "69" -> "70" 
  "69" -> "71" 
  "71" -> "72" 
  "71" -> "73" 
  "73" -> "74" 
  "73" -> "75" 
  "76" -> "77" 
  "77" -> "78" 
  "78" -> "79" 
  "79" -> "80" 
  "79" -> "83" 
  "79" -> "86" 
  "80" -> "81" 
  "80" -> "82" 
  "83" -> "84" 
  "83" -> "85" 
  "87" -> "88" 
  "88" -> "89" 
  "89" -> "90" 
  "90" -> "91" 
  "90" -> "94" 
  "90" -> "97" 
  "91" -> "92" 
  "91" -> "93" 
  "94" -> "95" 
  "94" -> "96" 
}

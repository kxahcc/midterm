digraph "isSelected" {  
"50" [label = <(METHOD,isSelected)<SUB>60</SUB>> ]
"6" [label = <(PARAM,this)<SUB>60</SUB>> ]
"51" [label = <(PARAM,Resource r)<SUB>60</SUB>> ]
"52" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>60</SUB>> ]
"53" [label = <(LOCAL,int passed: int)> ]
"54" [label = <(&lt;operator&gt;.assignment,int passed = 0)<SUB>61</SUB>> ]
"55" [label = <(IDENTIFIER,passed,int passed = 0)<SUB>61</SUB>> ]
"56" [label = <(LITERAL,0,int passed = 0)<SUB>61</SUB>> ]
"57" [label = <(LOCAL,int failed: int)> ]
"58" [label = <(&lt;operator&gt;.assignment,int failed = 0)<SUB>62</SUB>> ]
"59" [label = <(IDENTIFIER,failed,int failed = 0)<SUB>62</SUB>> ]
"60" [label = <(LITERAL,0,int failed = 0)<SUB>62</SUB>> ]
"61" [label = <(LOCAL,int count: int)> ]
"62" [label = <(&lt;operator&gt;.assignment,int count = selectorCount())<SUB>63</SUB>> ]
"63" [label = <(IDENTIFIER,count,int count = selectorCount())<SUB>63</SUB>> ]
"64" [label = <(selectorCount,selectorCount())<SUB>63</SUB>> ]
"5" [label = <(IDENTIFIER,this,selectorCount())<SUB>63</SUB>> ]
"65" [label = <(LOCAL,boolean even: boolean)> ]
"66" [label = <(&lt;operator&gt;.assignment,boolean even = count % 2 == 0)<SUB>64</SUB>> ]
"67" [label = <(IDENTIFIER,even,boolean even = count % 2 == 0)<SUB>64</SUB>> ]
"68" [label = <(&lt;operator&gt;.equals,count % 2 == 0)<SUB>64</SUB>> ]
"69" [label = <(&lt;operator&gt;.modulo,count % 2)<SUB>64</SUB>> ]
"70" [label = <(IDENTIFIER,count,count % 2)<SUB>64</SUB>> ]
"71" [label = <(LITERAL,2,count % 2)<SUB>64</SUB>> ]
"72" [label = <(LITERAL,0,count % 2 == 0)<SUB>64</SUB>> ]
"73" [label = <(LOCAL,int threshold: int)> ]
"74" [label = <(&lt;operator&gt;.assignment,int threshold = count / 2)<SUB>65</SUB>> ]
"75" [label = <(IDENTIFIER,threshold,int threshold = count / 2)<SUB>65</SUB>> ]
"76" [label = <(&lt;operator&gt;.division,count / 2)<SUB>65</SUB>> ]
"77" [label = <(IDENTIFIER,count,count / 2)<SUB>65</SUB>> ]
"78" [label = <(LITERAL,2,count / 2)<SUB>65</SUB>> ]
"79" [label = <(CONTROL_STRUCTURE,for (Iterator i = getSelectors(); Some(i.hasNext()); ),for (Iterator i = getSelectors(); Some(i.hasNext()); ))<SUB>67</SUB>> ]
"80" [label = <(LOCAL,Iterator i: java.util.Iterator)> ]
"81" [label = <(&lt;operator&gt;.assignment,Iterator i = getSelectors())<SUB>67</SUB>> ]
"82" [label = <(IDENTIFIER,i,Iterator i = getSelectors())<SUB>67</SUB>> ]
"83" [label = <(getSelectors,getSelectors())<SUB>67</SUB>> ]
"7" [label = <(IDENTIFIER,this,getSelectors())<SUB>67</SUB>> ]
"84" [label = <(hasNext,i.hasNext())<SUB>67</SUB>> ]
"85" [label = <(IDENTIFIER,i,i.hasNext())<SUB>67</SUB>> ]
"86" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>67</SUB>> ]
"87" [label = <(CONTROL_STRUCTURE,if (((ResourceSelector) i.next()).isSelected(r)),if (((ResourceSelector) i.next()).isSelected(r)))<SUB>68</SUB>> ]
"88" [label = <(isSelected,isSelected(r))<SUB>68</SUB>> ]
"89" [label = <(&lt;operator&gt;.cast,(ResourceSelector) i.next())<SUB>68</SUB>> ]
"90" [label = <(TYPE_REF,ResourceSelector,ResourceSelector)<SUB>68</SUB>> ]
"91" [label = <(next,i.next())<SUB>68</SUB>> ]
"92" [label = <(IDENTIFIER,i,i.next())<SUB>68</SUB>> ]
"93" [label = <(IDENTIFIER,r,isSelected(r))<SUB>68</SUB>> ]
"94" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>68</SUB>> ]
"95" [label = <(&lt;operator&gt;.preIncrement,++passed)<SUB>69</SUB>> ]
"96" [label = <(IDENTIFIER,passed,++passed)<SUB>69</SUB>> ]
"97" [label = <(CONTROL_STRUCTURE,if (passed &gt; threshold || (even &amp;&amp; tie &amp;&amp; passed == threshold)),if (passed &gt; threshold || (even &amp;&amp; tie &amp;&amp; passed == threshold)))<SUB>70</SUB>> ]
"98" [label = <(&lt;operator&gt;.logicalOr,passed &gt; threshold || (even &amp;&amp; tie &amp;&amp; passed == threshold))<SUB>70</SUB>> ]
"99" [label = <(&lt;operator&gt;.greaterThan,passed &gt; threshold)<SUB>70</SUB>> ]
"100" [label = <(IDENTIFIER,passed,passed &gt; threshold)<SUB>70</SUB>> ]
"101" [label = <(IDENTIFIER,threshold,passed &gt; threshold)<SUB>70</SUB>> ]
"102" [label = <(&lt;operator&gt;.logicalAnd,even &amp;&amp; tie &amp;&amp; passed == threshold)<SUB>70</SUB>> ]
"103" [label = <(&lt;operator&gt;.logicalAnd,even &amp;&amp; tie)<SUB>70</SUB>> ]
"104" [label = <(IDENTIFIER,even,even &amp;&amp; tie)<SUB>70</SUB>> ]
"105" [label = <(&lt;operator&gt;.fieldAccess,this.tie)<SUB>70</SUB>> ]
"106" [label = <(IDENTIFIER,this,even &amp;&amp; tie)<SUB>70</SUB>> ]
"107" [label = <(FIELD_IDENTIFIER,tie,tie)<SUB>70</SUB>> ]
"108" [label = <(&lt;operator&gt;.equals,passed == threshold)<SUB>70</SUB>> ]
"109" [label = <(IDENTIFIER,passed,passed == threshold)<SUB>70</SUB>> ]
"110" [label = <(IDENTIFIER,threshold,passed == threshold)<SUB>70</SUB>> ]
"111" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>70</SUB>> ]
"112" [label = <(RETURN,return true;,return true;)<SUB>71</SUB>> ]
"113" [label = <(LITERAL,true,return true;)<SUB>71</SUB>> ]
"114" [label = <(CONTROL_STRUCTURE,else,else)<SUB>73</SUB>> ]
"115" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>73</SUB>> ]
"116" [label = <(&lt;operator&gt;.preIncrement,++failed)<SUB>74</SUB>> ]
"117" [label = <(IDENTIFIER,failed,++failed)<SUB>74</SUB>> ]
"118" [label = <(CONTROL_STRUCTURE,if (failed &gt; threshold || (even &amp;&amp; !tie &amp;&amp; failed == threshold)),if (failed &gt; threshold || (even &amp;&amp; !tie &amp;&amp; failed == threshold)))<SUB>75</SUB>> ]
"119" [label = <(&lt;operator&gt;.logicalOr,failed &gt; threshold || (even &amp;&amp; !tie &amp;&amp; failed == threshold))<SUB>75</SUB>> ]
"120" [label = <(&lt;operator&gt;.greaterThan,failed &gt; threshold)<SUB>75</SUB>> ]
"121" [label = <(IDENTIFIER,failed,failed &gt; threshold)<SUB>75</SUB>> ]
"122" [label = <(IDENTIFIER,threshold,failed &gt; threshold)<SUB>75</SUB>> ]
"123" [label = <(&lt;operator&gt;.logicalAnd,even &amp;&amp; !tie &amp;&amp; failed == threshold)<SUB>75</SUB>> ]
"124" [label = <(&lt;operator&gt;.logicalAnd,even &amp;&amp; !tie)<SUB>75</SUB>> ]
"125" [label = <(IDENTIFIER,even,even &amp;&amp; !tie)<SUB>75</SUB>> ]
"126" [label = <(&lt;operator&gt;.logicalNot,!tie)<SUB>75</SUB>> ]
"127" [label = <(&lt;operator&gt;.fieldAccess,this.tie)<SUB>75</SUB>> ]
"128" [label = <(IDENTIFIER,this,!tie)<SUB>75</SUB>> ]
"129" [label = <(FIELD_IDENTIFIER,tie,tie)<SUB>75</SUB>> ]
"130" [label = <(&lt;operator&gt;.equals,failed == threshold)<SUB>75</SUB>> ]
"131" [label = <(IDENTIFIER,failed,failed == threshold)<SUB>75</SUB>> ]
"132" [label = <(IDENTIFIER,threshold,failed == threshold)<SUB>75</SUB>> ]
"133" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>75</SUB>> ]
"134" [label = <(RETURN,return false;,return false;)<SUB>76</SUB>> ]
"135" [label = <(LITERAL,false,return false;)<SUB>76</SUB>> ]
"136" [label = <(RETURN,return false;,return false;)<SUB>81</SUB>> ]
"137" [label = <(LITERAL,false,return false;)<SUB>81</SUB>> ]
"138" [label = <(MODIFIER,PUBLIC)> ]
"139" [label = <(MODIFIER,VIRTUAL)> ]
"140" [label = <(METHOD_RETURN,boolean)<SUB>60</SUB>> ]
  "50" -> "6" 
  "50" -> "51" 
  "50" -> "52" 
  "50" -> "138" 
  "50" -> "139" 
  "50" -> "140" 
  "52" -> "53" 
  "52" -> "54" 
  "52" -> "57" 
  "52" -> "58" 
  "52" -> "61" 
  "52" -> "62" 
  "52" -> "65" 
  "52" -> "66" 
  "52" -> "73" 
  "52" -> "74" 
  "52" -> "79" 
  "52" -> "136" 
  "54" -> "55" 
  "54" -> "56" 
  "58" -> "59" 
  "58" -> "60" 
  "62" -> "63" 
  "62" -> "64" 
  "64" -> "5" 
  "66" -> "67" 
  "66" -> "68" 
  "68" -> "69" 
  "68" -> "72" 
  "69" -> "70" 
  "69" -> "71" 
  "74" -> "75" 
  "74" -> "76" 
  "76" -> "77" 
  "76" -> "78" 
  "79" -> "80" 
  "79" -> "81" 
  "79" -> "84" 
  "79" -> "86" 
  "81" -> "82" 
  "81" -> "83" 
  "83" -> "7" 
  "84" -> "85" 
  "86" -> "87" 
  "87" -> "88" 
  "87" -> "94" 
  "87" -> "114" 
  "88" -> "89" 
  "88" -> "93" 
  "89" -> "90" 
  "89" -> "91" 
  "91" -> "92" 
  "94" -> "95" 
  "94" -> "97" 
  "95" -> "96" 
  "97" -> "98" 
  "97" -> "111" 
  "98" -> "99" 
  "98" -> "102" 
  "99" -> "100" 
  "99" -> "101" 
  "102" -> "103" 
  "102" -> "108" 
  "103" -> "104" 
  "103" -> "105" 
  "105" -> "106" 
  "105" -> "107" 
  "108" -> "109" 
  "108" -> "110" 
  "111" -> "112" 
  "112" -> "113" 
  "114" -> "115" 
  "115" -> "116" 
  "115" -> "118" 
  "116" -> "117" 
  "118" -> "119" 
  "118" -> "133" 
  "119" -> "120" 
  "119" -> "123" 
  "120" -> "121" 
  "120" -> "122" 
  "123" -> "124" 
  "123" -> "130" 
  "124" -> "125" 
  "124" -> "126" 
  "126" -> "127" 
  "127" -> "128" 
  "127" -> "129" 
  "130" -> "131" 
  "130" -> "132" 
  "133" -> "134" 
  "134" -> "135" 
  "136" -> "137" 
}

digraph "resolveClassName" {  
"96" [label = <(METHOD,resolveClassName)<SUB>82</SUB>> ]
"97" [label = <(PARAM,String className)<SUB>82</SUB>> ]
"98" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>83</SUB>> ]
"99" [label = <(RETURN,return (JavahAdapter) ClasspathUtils.newInstance(className, JavahAdapterFactory.class.getClassLoader(), JavahAdapter.class);,return (JavahAdapter) ClasspathUtils.newInstance(className, JavahAdapterFactory.class.getClassLoader(), JavahAdapter.class);)<SUB>84</SUB>> ]
"100" [label = <(&lt;operator&gt;.cast,(JavahAdapter) ClasspathUtils.newInstance(className, JavahAdapterFactory.class.getClassLoader(), JavahAdapter.class))<SUB>84</SUB>> ]
"101" [label = <(TYPE_REF,JavahAdapter,JavahAdapter)<SUB>84</SUB>> ]
"102" [label = <(newInstance,newInstance(className, JavahAdapterFactory.class.getClassLoader(), JavahAdapter.class))<SUB>84</SUB>> ]
"103" [label = <(IDENTIFIER,ClasspathUtils,newInstance(className, JavahAdapterFactory.class.getClassLoader(), JavahAdapter.class))<SUB>84</SUB>> ]
"104" [label = <(IDENTIFIER,className,newInstance(className, JavahAdapterFactory.class.getClassLoader(), JavahAdapter.class))<SUB>84</SUB>> ]
"105" [label = <(getClassLoader,this.getClassLoader())<SUB>85</SUB>> ]
"106" [label = <(&lt;operator&gt;.fieldAccess,JavahAdapterFactory.class)<SUB>85</SUB>> ]
"107" [label = <(IDENTIFIER,JavahAdapterFactory,this.getClassLoader())<SUB>85</SUB>> ]
"108" [label = <(FIELD_IDENTIFIER,class,class)<SUB>85</SUB>> ]
"109" [label = <(&lt;operator&gt;.fieldAccess,JavahAdapter.class)<SUB>85</SUB>> ]
"110" [label = <(IDENTIFIER,JavahAdapter,newInstance(className, JavahAdapterFactory.class.getClassLoader(), JavahAdapter.class))<SUB>85</SUB>> ]
"111" [label = <(FIELD_IDENTIFIER,class,class)<SUB>85</SUB>> ]
"112" [label = <(MODIFIER,PRIVATE)> ]
"113" [label = <(MODIFIER,STATIC)> ]
"114" [label = <(METHOD_RETURN,ANY)<SUB>82</SUB>> ]
  "96" -> "97" 
  "96" -> "98" 
  "96" -> "112" 
  "96" -> "113" 
  "96" -> "114" 
  "98" -> "99" 
  "99" -> "100" 
  "100" -> "101" 
  "100" -> "102" 
  "102" -> "103" 
  "102" -> "104" 
  "102" -> "105" 
  "102" -> "109" 
  "105" -> "106" 
  "106" -> "107" 
  "106" -> "108" 
  "109" -> "110" 
  "109" -> "111" 
}

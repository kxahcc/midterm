digraph "isValid" {  
"115" [label = <(METHOD,isValid)<SUB>105</SUB>> ]
"116" [label = <(PARAM,this)<SUB>105</SUB>> ]
"117" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>105</SUB>> ]
"118" [label = <(RETURN,return &quot;CRC&quot;.equalsIgnoreCase(algorithm) || &quot;ADLER&quot;.equalsIgnoreCase(algorithm);,return &quot;CRC&quot;.equalsIgnoreCase(algorithm) || &quot;ADLER&quot;.equalsIgnoreCase(algorithm);)<SUB>106</SUB>> ]
"119" [label = <(&lt;operator&gt;.logicalOr,&quot;CRC&quot;.equalsIgnoreCase(algorithm) || &quot;ADLER&quot;.equalsIgnoreCase(algorithm))<SUB>106</SUB>> ]
"120" [label = <(equalsIgnoreCase,this.equalsIgnoreCase(algorithm))<SUB>106</SUB>> ]
"121" [label = <(LITERAL,&quot;CRC&quot;,this.equalsIgnoreCase(algorithm))<SUB>106</SUB>> ]
"122" [label = <(&lt;operator&gt;.fieldAccess,this.algorithm)<SUB>106</SUB>> ]
"123" [label = <(IDENTIFIER,this,this.equalsIgnoreCase(algorithm))<SUB>106</SUB>> ]
"124" [label = <(FIELD_IDENTIFIER,algorithm,algorithm)<SUB>106</SUB>> ]
"125" [label = <(equalsIgnoreCase,this.equalsIgnoreCase(algorithm))<SUB>106</SUB>> ]
"126" [label = <(LITERAL,&quot;ADLER&quot;,this.equalsIgnoreCase(algorithm))<SUB>106</SUB>> ]
"127" [label = <(&lt;operator&gt;.fieldAccess,this.algorithm)<SUB>106</SUB>> ]
"128" [label = <(IDENTIFIER,this,this.equalsIgnoreCase(algorithm))<SUB>106</SUB>> ]
"129" [label = <(FIELD_IDENTIFIER,algorithm,algorithm)<SUB>106</SUB>> ]
"130" [label = <(MODIFIER,PUBLIC)> ]
"131" [label = <(MODIFIER,VIRTUAL)> ]
"132" [label = <(METHOD_RETURN,boolean)<SUB>105</SUB>> ]
  "115" -> "116" 
  "115" -> "117" 
  "115" -> "130" 
  "115" -> "131" 
  "115" -> "132" 
  "117" -> "118" 
  "118" -> "119" 
  "119" -> "120" 
  "119" -> "125" 
  "120" -> "121" 
  "120" -> "122" 
  "122" -> "123" 
  "122" -> "124" 
  "125" -> "126" 
  "125" -> "127" 
  "127" -> "128" 
  "127" -> "129" 
}

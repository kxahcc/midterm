digraph "parseName" {  
"105" [label = <(METHOD,parseName)<SUB>114</SUB>> ]
"106" [label = <(PARAM,byte[] header)<SUB>114</SUB>> ]
"107" [label = <(PARAM,int offset)<SUB>114</SUB>> ]
"108" [label = <(PARAM,int length)<SUB>114</SUB>> ]
"109" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>114</SUB>> ]
"4" [label = <(LOCAL,StringBuffer result: java.lang.StringBuffer)> ]
"110" [label = <(&lt;operator&gt;.assignment,StringBuffer result = new StringBuffer(length))<SUB>115</SUB>> ]
"111" [label = <(IDENTIFIER,result,StringBuffer result = new StringBuffer(length))<SUB>115</SUB>> ]
"112" [label = <(&lt;operator&gt;.alloc,new StringBuffer(length))<SUB>115</SUB>> ]
"113" [label = <(&lt;init&gt;,new StringBuffer(length))<SUB>115</SUB>> ]
"3" [label = <(IDENTIFIER,result,new StringBuffer(length))<SUB>115</SUB>> ]
"114" [label = <(IDENTIFIER,length,new StringBuffer(length))<SUB>115</SUB>> ]
"115" [label = <(LOCAL,int end: int)> ]
"116" [label = <(&lt;operator&gt;.assignment,int end = offset + length)<SUB>116</SUB>> ]
"117" [label = <(IDENTIFIER,end,int end = offset + length)<SUB>116</SUB>> ]
"118" [label = <(&lt;operator&gt;.addition,offset + length)<SUB>116</SUB>> ]
"119" [label = <(IDENTIFIER,offset,offset + length)<SUB>116</SUB>> ]
"120" [label = <(IDENTIFIER,length,offset + length)<SUB>116</SUB>> ]
"121" [label = <(CONTROL_STRUCTURE,for (int i = offset; Some(i &lt; end); ++i),for (int i = offset; Some(i &lt; end); ++i))<SUB>118</SUB>> ]
"122" [label = <(LOCAL,int i: int)> ]
"123" [label = <(&lt;operator&gt;.assignment,int i = offset)<SUB>118</SUB>> ]
"124" [label = <(IDENTIFIER,i,int i = offset)<SUB>118</SUB>> ]
"125" [label = <(IDENTIFIER,offset,int i = offset)<SUB>118</SUB>> ]
"126" [label = <(&lt;operator&gt;.lessThan,i &lt; end)<SUB>118</SUB>> ]
"127" [label = <(IDENTIFIER,i,i &lt; end)<SUB>118</SUB>> ]
"128" [label = <(IDENTIFIER,end,i &lt; end)<SUB>118</SUB>> ]
"129" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>118</SUB>> ]
"130" [label = <(IDENTIFIER,i,++i)<SUB>118</SUB>> ]
"131" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>118</SUB>> ]
"132" [label = <(CONTROL_STRUCTURE,if (header[i] == 0),if (header[i] == 0))<SUB>119</SUB>> ]
"133" [label = <(&lt;operator&gt;.equals,header[i] == 0)<SUB>119</SUB>> ]
"134" [label = <(&lt;operator&gt;.indexAccess,header[i])<SUB>119</SUB>> ]
"135" [label = <(IDENTIFIER,header,header[i] == 0)<SUB>119</SUB>> ]
"136" [label = <(IDENTIFIER,i,header[i] == 0)<SUB>119</SUB>> ]
"137" [label = <(LITERAL,0,header[i] == 0)<SUB>119</SUB>> ]
"138" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>119</SUB>> ]
"139" [label = <(CONTROL_STRUCTURE,break;,break;)<SUB>120</SUB>> ]
"140" [label = <(append,result.append((char) header[i]))<SUB>123</SUB>> ]
"141" [label = <(IDENTIFIER,result,result.append((char) header[i]))<SUB>123</SUB>> ]
"142" [label = <(&lt;operator&gt;.cast,(char) header[i])<SUB>123</SUB>> ]
"143" [label = <(TYPE_REF,char,char)<SUB>123</SUB>> ]
"144" [label = <(&lt;operator&gt;.indexAccess,header[i])<SUB>123</SUB>> ]
"145" [label = <(IDENTIFIER,header,(char) header[i])<SUB>123</SUB>> ]
"146" [label = <(IDENTIFIER,i,(char) header[i])<SUB>123</SUB>> ]
"147" [label = <(RETURN,return result;,return result;)<SUB>126</SUB>> ]
"148" [label = <(IDENTIFIER,result,return result;)<SUB>126</SUB>> ]
"149" [label = <(MODIFIER,PUBLIC)> ]
"150" [label = <(MODIFIER,STATIC)> ]
"151" [label = <(METHOD_RETURN,java.lang.StringBuffer)<SUB>114</SUB>> ]
  "105" -> "106" 
  "105" -> "107" 
  "105" -> "108" 
  "105" -> "109" 
  "105" -> "149" 
  "105" -> "150" 
  "105" -> "151" 
  "109" -> "4" 
  "109" -> "110" 
  "109" -> "113" 
  "109" -> "115" 
  "109" -> "116" 
  "109" -> "121" 
  "109" -> "147" 
  "110" -> "111" 
  "110" -> "112" 
  "113" -> "3" 
  "113" -> "114" 
  "116" -> "117" 
  "116" -> "118" 
  "118" -> "119" 
  "118" -> "120" 
  "121" -> "122" 
  "121" -> "123" 
  "121" -> "126" 
  "121" -> "129" 
  "121" -> "131" 
  "123" -> "124" 
  "123" -> "125" 
  "126" -> "127" 
  "126" -> "128" 
  "129" -> "130" 
  "131" -> "132" 
  "131" -> "140" 
  "132" -> "133" 
  "132" -> "138" 
  "133" -> "134" 
  "133" -> "137" 
  "134" -> "135" 
  "134" -> "136" 
  "138" -> "139" 
  "140" -> "141" 
  "140" -> "142" 
  "142" -> "143" 
  "142" -> "144" 
  "144" -> "145" 
  "144" -> "146" 
  "147" -> "148" 
}

digraph "eval" {  
"51" [label = <(METHOD,eval)<SUB>107</SUB>> ]
"52" [label = <(PARAM,this)<SUB>107</SUB>> ]
"53" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>108</SUB>> ]
"54" [label = <(CONTROL_STRUCTURE,if (file1 == null || file2 == null),if (file1 == null || file2 == null))<SUB>111</SUB>> ]
"55" [label = <(&lt;operator&gt;.logicalOr,file1 == null || file2 == null)<SUB>111</SUB>> ]
"56" [label = <(&lt;operator&gt;.equals,file1 == null)<SUB>111</SUB>> ]
"57" [label = <(&lt;operator&gt;.fieldAccess,this.file1)<SUB>111</SUB>> ]
"58" [label = <(IDENTIFIER,this,file1 == null)<SUB>111</SUB>> ]
"59" [label = <(FIELD_IDENTIFIER,file1,file1)<SUB>111</SUB>> ]
"60" [label = <(LITERAL,null,file1 == null)<SUB>111</SUB>> ]
"61" [label = <(&lt;operator&gt;.equals,file2 == null)<SUB>111</SUB>> ]
"62" [label = <(&lt;operator&gt;.fieldAccess,this.file2)<SUB>111</SUB>> ]
"63" [label = <(IDENTIFIER,this,file2 == null)<SUB>111</SUB>> ]
"64" [label = <(FIELD_IDENTIFIER,file2,file2)<SUB>111</SUB>> ]
"65" [label = <(LITERAL,null,file2 == null)<SUB>111</SUB>> ]
"66" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>111</SUB>> ]
"67" [label = <(&lt;operator&gt;.throw,throw new BuildException(&quot;both file1 and file2 are required in &quot; + &quot;filesmatch&quot;);)<SUB>112</SUB>> ]
"68" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>112</SUB>> ]
"69" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"70" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"71" [label = <(&lt;operator&gt;.alloc,new BuildException(&quot;both file1 and file2 are required in &quot; + &quot;filesmatch&quot;))<SUB>112</SUB>> ]
"72" [label = <(&lt;init&gt;,new BuildException(&quot;both file1 and file2 are required in &quot; + &quot;filesmatch&quot;))<SUB>112</SUB>> ]
"73" [label = <(IDENTIFIER,$obj0,new BuildException(&quot;both file1 and file2 are required in &quot; + &quot;filesmatch&quot;))> ]
"74" [label = <(&lt;operator&gt;.addition,&quot;both file1 and file2 are required in &quot; + &quot;filesmatch&quot;)<SUB>112</SUB>> ]
"75" [label = <(LITERAL,&quot;both file1 and file2 are required in &quot;,&quot;both file1 and file2 are required in &quot; + &quot;filesmatch&quot;)<SUB>112</SUB>> ]
"76" [label = <(LITERAL,&quot;filesmatch&quot;,&quot;both file1 and file2 are required in &quot; + &quot;filesmatch&quot;)<SUB>113</SUB>> ]
"77" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"78" [label = <(LOCAL,boolean matches: boolean)> ]
"79" [label = <(&lt;operator&gt;.assignment,boolean matches = false)<SUB>117</SUB>> ]
"80" [label = <(IDENTIFIER,matches,boolean matches = false)<SUB>117</SUB>> ]
"81" [label = <(LITERAL,false,boolean matches = false)<SUB>117</SUB>> ]
"82" [label = <(CONTROL_STRUCTURE,try,try)<SUB>118</SUB>> ]
"83" [label = <(BLOCK,try,try)<SUB>118</SUB>> ]
"84" [label = <(&lt;operator&gt;.assignment,matches = contentEquals(file1, file2))<SUB>119</SUB>> ]
"85" [label = <(IDENTIFIER,matches,matches = contentEquals(file1, file2))<SUB>119</SUB>> ]
"86" [label = <(contentEquals,contentEquals(file1, file2))<SUB>119</SUB>> ]
"87" [label = <(&lt;operator&gt;.fieldAccess,this.fu)<SUB>119</SUB>> ]
"88" [label = <(IDENTIFIER,this,contentEquals(file1, file2))<SUB>119</SUB>> ]
"89" [label = <(FIELD_IDENTIFIER,fu,fu)<SUB>119</SUB>> ]
"90" [label = <(&lt;operator&gt;.fieldAccess,this.file1)<SUB>119</SUB>> ]
"91" [label = <(IDENTIFIER,this,contentEquals(file1, file2))<SUB>119</SUB>> ]
"92" [label = <(FIELD_IDENTIFIER,file1,file1)<SUB>119</SUB>> ]
"93" [label = <(&lt;operator&gt;.fieldAccess,this.file2)<SUB>119</SUB>> ]
"94" [label = <(IDENTIFIER,this,contentEquals(file1, file2))<SUB>119</SUB>> ]
"95" [label = <(FIELD_IDENTIFIER,file2,file2)<SUB>119</SUB>> ]
"96" [label = <(BLOCK,catch,catch)> ]
"97" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>120</SUB>> ]
"98" [label = <(&lt;operator&gt;.throw,throw new BuildException(&quot;when comparing files: &quot; + ioe.getMessage(), ioe);)<SUB>121</SUB>> ]
"99" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>121</SUB>> ]
"100" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"101" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"102" [label = <(&lt;operator&gt;.alloc,new BuildException(&quot;when comparing files: &quot; + ioe.getMessage(), ioe))<SUB>121</SUB>> ]
"103" [label = <(&lt;init&gt;,new BuildException(&quot;when comparing files: &quot; + ioe.getMessage(), ioe))<SUB>121</SUB>> ]
"104" [label = <(IDENTIFIER,$obj1,new BuildException(&quot;when comparing files: &quot; + ioe.getMessage(), ioe))> ]
"105" [label = <(&lt;operator&gt;.addition,&quot;when comparing files: &quot; + ioe.getMessage())<SUB>121</SUB>> ]
"106" [label = <(LITERAL,&quot;when comparing files: &quot;,&quot;when comparing files: &quot; + ioe.getMessage())<SUB>121</SUB>> ]
"107" [label = <(getMessage,ioe.getMessage())<SUB>122</SUB>> ]
"108" [label = <(IDENTIFIER,ioe,ioe.getMessage())<SUB>122</SUB>> ]
"109" [label = <(IDENTIFIER,ioe,new BuildException(&quot;when comparing files: &quot; + ioe.getMessage(), ioe))<SUB>122</SUB>> ]
"110" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"111" [label = <(RETURN,return matches;,return matches;)<SUB>124</SUB>> ]
"112" [label = <(IDENTIFIER,matches,return matches;)<SUB>124</SUB>> ]
"113" [label = <(MODIFIER,PUBLIC)> ]
"114" [label = <(MODIFIER,VIRTUAL)> ]
"115" [label = <(METHOD_RETURN,boolean)<SUB>107</SUB>> ]
  "51" -> "52" 
  "51" -> "53" 
  "51" -> "113" 
  "51" -> "114" 
  "51" -> "115" 
  "53" -> "54" 
  "53" -> "78" 
  "53" -> "79" 
  "53" -> "82" 
  "53" -> "111" 
  "54" -> "55" 
  "54" -> "66" 
  "55" -> "56" 
  "55" -> "61" 
  "56" -> "57" 
  "56" -> "60" 
  "57" -> "58" 
  "57" -> "59" 
  "61" -> "62" 
  "61" -> "65" 
  "62" -> "63" 
  "62" -> "64" 
  "66" -> "67" 
  "67" -> "68" 
  "68" -> "69" 
  "68" -> "72" 
  "68" -> "77" 
  "69" -> "70" 
  "69" -> "71" 
  "72" -> "73" 
  "72" -> "74" 
  "74" -> "75" 
  "74" -> "76" 
  "79" -> "80" 
  "79" -> "81" 
  "82" -> "83" 
  "82" -> "96" 
  "83" -> "84" 
  "84" -> "85" 
  "84" -> "86" 
  "86" -> "87" 
  "86" -> "90" 
  "86" -> "93" 
  "87" -> "88" 
  "87" -> "89" 
  "90" -> "91" 
  "90" -> "92" 
  "93" -> "94" 
  "93" -> "95" 
  "96" -> "97" 
  "97" -> "98" 
  "98" -> "99" 
  "99" -> "100" 
  "99" -> "103" 
  "99" -> "110" 
  "100" -> "101" 
  "100" -> "102" 
  "103" -> "104" 
  "103" -> "105" 
  "103" -> "109" 
  "105" -> "106" 
  "105" -> "107" 
  "107" -> "108" 
  "111" -> "112" 
}

digraph "getCompiler" {  
"23" [label = <(METHOD,getCompiler)<SUB>93</SUB>> ]
"24" [label = <(PARAM,String compilerType)<SUB>93</SUB>> ]
"25" [label = <(PARAM,Task task)<SUB>93</SUB>> ]
"26" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>94</SUB>> ]
"27" [label = <(CONTROL_STRUCTURE,if (compilerType.equalsIgnoreCase(&quot;jikes&quot;)),if (compilerType.equalsIgnoreCase(&quot;jikes&quot;)))<SUB>98</SUB>> ]
"28" [label = <(equalsIgnoreCase,compilerType.equalsIgnoreCase(&quot;jikes&quot;))<SUB>98</SUB>> ]
"29" [label = <(IDENTIFIER,compilerType,compilerType.equalsIgnoreCase(&quot;jikes&quot;))<SUB>98</SUB>> ]
"30" [label = <(LITERAL,&quot;jikes&quot;,compilerType.equalsIgnoreCase(&quot;jikes&quot;))<SUB>98</SUB>> ]
"31" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>98</SUB>> ]
"32" [label = <(RETURN,return new Jikes();,return new Jikes();)<SUB>99</SUB>> ]
"33" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>99</SUB>> ]
"34" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"35" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"36" [label = <(&lt;operator&gt;.alloc,new Jikes())<SUB>99</SUB>> ]
"37" [label = <(&lt;init&gt;,new Jikes())<SUB>99</SUB>> ]
"38" [label = <(IDENTIFIER,$obj0,new Jikes())> ]
"39" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"40" [label = <(CONTROL_STRUCTURE,if (compilerType.equalsIgnoreCase(&quot;classic&quot;) || compilerType.equalsIgnoreCase(&quot;javac1.1&quot;) || compilerType.equalsIgnoreCase(&quot;javac1.2&quot;)),if (compilerType.equalsIgnoreCase(&quot;classic&quot;) || compilerType.equalsIgnoreCase(&quot;javac1.1&quot;) || compilerType.equalsIgnoreCase(&quot;javac1.2&quot;)))<SUB>101</SUB>> ]
"41" [label = <(&lt;operator&gt;.logicalOr,compilerType.equalsIgnoreCase(&quot;classic&quot;) || compilerType.equalsIgnoreCase(&quot;javac1.1&quot;) || compilerType.equalsIgnoreCase(&quot;javac1.2&quot;))<SUB>101</SUB>> ]
"42" [label = <(&lt;operator&gt;.logicalOr,compilerType.equalsIgnoreCase(&quot;classic&quot;) || compilerType.equalsIgnoreCase(&quot;javac1.1&quot;))<SUB>101</SUB>> ]
"43" [label = <(equalsIgnoreCase,compilerType.equalsIgnoreCase(&quot;classic&quot;))<SUB>101</SUB>> ]
"44" [label = <(IDENTIFIER,compilerType,compilerType.equalsIgnoreCase(&quot;classic&quot;))<SUB>101</SUB>> ]
"45" [label = <(LITERAL,&quot;classic&quot;,compilerType.equalsIgnoreCase(&quot;classic&quot;))<SUB>101</SUB>> ]
"46" [label = <(equalsIgnoreCase,compilerType.equalsIgnoreCase(&quot;javac1.1&quot;))<SUB>102</SUB>> ]
"47" [label = <(IDENTIFIER,compilerType,compilerType.equalsIgnoreCase(&quot;javac1.1&quot;))<SUB>102</SUB>> ]
"48" [label = <(LITERAL,&quot;javac1.1&quot;,compilerType.equalsIgnoreCase(&quot;javac1.1&quot;))<SUB>102</SUB>> ]
"49" [label = <(equalsIgnoreCase,compilerType.equalsIgnoreCase(&quot;javac1.2&quot;))<SUB>103</SUB>> ]
"50" [label = <(IDENTIFIER,compilerType,compilerType.equalsIgnoreCase(&quot;javac1.2&quot;))<SUB>103</SUB>> ]
"51" [label = <(LITERAL,&quot;javac1.2&quot;,compilerType.equalsIgnoreCase(&quot;javac1.2&quot;))<SUB>103</SUB>> ]
"52" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>103</SUB>> ]
"53" [label = <(RETURN,return new Javac12();,return new Javac12();)<SUB>104</SUB>> ]
"54" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>104</SUB>> ]
"55" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"56" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"57" [label = <(&lt;operator&gt;.alloc,new Javac12())<SUB>104</SUB>> ]
"58" [label = <(&lt;init&gt;,new Javac12())<SUB>104</SUB>> ]
"59" [label = <(IDENTIFIER,$obj1,new Javac12())> ]
"60" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"61" [label = <(CONTROL_STRUCTURE,if (compilerType.equalsIgnoreCase(&quot;modern&quot;) || compilerType.equalsIgnoreCase(&quot;javac1.3&quot;)),if (compilerType.equalsIgnoreCase(&quot;modern&quot;) || compilerType.equalsIgnoreCase(&quot;javac1.3&quot;)))<SUB>106</SUB>> ]
"62" [label = <(&lt;operator&gt;.logicalOr,compilerType.equalsIgnoreCase(&quot;modern&quot;) || compilerType.equalsIgnoreCase(&quot;javac1.3&quot;))<SUB>106</SUB>> ]
"63" [label = <(equalsIgnoreCase,compilerType.equalsIgnoreCase(&quot;modern&quot;))<SUB>106</SUB>> ]
"64" [label = <(IDENTIFIER,compilerType,compilerType.equalsIgnoreCase(&quot;modern&quot;))<SUB>106</SUB>> ]
"65" [label = <(LITERAL,&quot;modern&quot;,compilerType.equalsIgnoreCase(&quot;modern&quot;))<SUB>106</SUB>> ]
"66" [label = <(equalsIgnoreCase,compilerType.equalsIgnoreCase(&quot;javac1.3&quot;))<SUB>107</SUB>> ]
"67" [label = <(IDENTIFIER,compilerType,compilerType.equalsIgnoreCase(&quot;javac1.3&quot;))<SUB>107</SUB>> ]
"68" [label = <(LITERAL,&quot;javac1.3&quot;,compilerType.equalsIgnoreCase(&quot;javac1.3&quot;))<SUB>107</SUB>> ]
"69" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>107</SUB>> ]
"70" [label = <(CONTROL_STRUCTURE,try,try)<SUB>109</SUB>> ]
"71" [label = <(BLOCK,try,try)<SUB>109</SUB>> ]
"72" [label = <(forName,Class.forName(&quot;com.sun.tools.javac.Main&quot;))<SUB>110</SUB>> ]
"73" [label = <(IDENTIFIER,Class,Class.forName(&quot;com.sun.tools.javac.Main&quot;))<SUB>110</SUB>> ]
"74" [label = <(LITERAL,&quot;com.sun.tools.javac.Main&quot;,Class.forName(&quot;com.sun.tools.javac.Main&quot;))<SUB>110</SUB>> ]
"75" [label = <(BLOCK,catch,catch)> ]
"76" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>111</SUB>> ]
"77" [label = <(log,log(&quot;Modern compiler is not available - using &quot; + &quot;classic compiler&quot;, Project.MSG_WARN))<SUB>112</SUB>> ]
"78" [label = <(IDENTIFIER,task,log(&quot;Modern compiler is not available - using &quot; + &quot;classic compiler&quot;, Project.MSG_WARN))<SUB>112</SUB>> ]
"79" [label = <(&lt;operator&gt;.addition,&quot;Modern compiler is not available - using &quot; + &quot;classic compiler&quot;)<SUB>112</SUB>> ]
"80" [label = <(LITERAL,&quot;Modern compiler is not available - using &quot;,&quot;Modern compiler is not available - using &quot; + &quot;classic compiler&quot;)<SUB>112</SUB>> ]
"81" [label = <(LITERAL,&quot;classic compiler&quot;,&quot;Modern compiler is not available - using &quot; + &quot;classic compiler&quot;)<SUB>113</SUB>> ]
"82" [label = <(&lt;operator&gt;.fieldAccess,Project.MSG_WARN)<SUB>113</SUB>> ]
"83" [label = <(IDENTIFIER,Project,log(&quot;Modern compiler is not available - using &quot; + &quot;classic compiler&quot;, Project.MSG_WARN))<SUB>113</SUB>> ]
"84" [label = <(FIELD_IDENTIFIER,MSG_WARN,MSG_WARN)<SUB>113</SUB>> ]
"85" [label = <(RETURN,return new Javac12();,return new Javac12();)<SUB>114</SUB>> ]
"86" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>114</SUB>> ]
"87" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"88" [label = <(IDENTIFIER,$obj2,&lt;empty&gt;)> ]
"89" [label = <(&lt;operator&gt;.alloc,new Javac12())<SUB>114</SUB>> ]
"90" [label = <(&lt;init&gt;,new Javac12())<SUB>114</SUB>> ]
"91" [label = <(IDENTIFIER,$obj2,new Javac12())> ]
"92" [label = <(IDENTIFIER,$obj2,&lt;empty&gt;)> ]
"93" [label = <(RETURN,return new Javac13();,return new Javac13();)<SUB>116</SUB>> ]
"94" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>116</SUB>> ]
"95" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"96" [label = <(IDENTIFIER,$obj3,&lt;empty&gt;)> ]
"97" [label = <(&lt;operator&gt;.alloc,new Javac13())<SUB>116</SUB>> ]
"98" [label = <(&lt;init&gt;,new Javac13())<SUB>116</SUB>> ]
"99" [label = <(IDENTIFIER,$obj3,new Javac13())> ]
"100" [label = <(IDENTIFIER,$obj3,&lt;empty&gt;)> ]
"101" [label = <(CONTROL_STRUCTURE,if (compilerType.equalsIgnoreCase(&quot;jvc&quot;) || compilerType.equalsIgnoreCase(&quot;microsoft&quot;)),if (compilerType.equalsIgnoreCase(&quot;jvc&quot;) || compilerType.equalsIgnoreCase(&quot;microsoft&quot;)))<SUB>118</SUB>> ]
"102" [label = <(&lt;operator&gt;.logicalOr,compilerType.equalsIgnoreCase(&quot;jvc&quot;) || compilerType.equalsIgnoreCase(&quot;microsoft&quot;))<SUB>118</SUB>> ]
"103" [label = <(equalsIgnoreCase,compilerType.equalsIgnoreCase(&quot;jvc&quot;))<SUB>118</SUB>> ]
"104" [label = <(IDENTIFIER,compilerType,compilerType.equalsIgnoreCase(&quot;jvc&quot;))<SUB>118</SUB>> ]
"105" [label = <(LITERAL,&quot;jvc&quot;,compilerType.equalsIgnoreCase(&quot;jvc&quot;))<SUB>118</SUB>> ]
"106" [label = <(equalsIgnoreCase,compilerType.equalsIgnoreCase(&quot;microsoft&quot;))<SUB>119</SUB>> ]
"107" [label = <(IDENTIFIER,compilerType,compilerType.equalsIgnoreCase(&quot;microsoft&quot;))<SUB>119</SUB>> ]
"108" [label = <(LITERAL,&quot;microsoft&quot;,compilerType.equalsIgnoreCase(&quot;microsoft&quot;))<SUB>119</SUB>> ]
"109" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>119</SUB>> ]
"110" [label = <(RETURN,return new Jvc();,return new Jvc();)<SUB>120</SUB>> ]
"111" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>120</SUB>> ]
"112" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"113" [label = <(IDENTIFIER,$obj4,&lt;empty&gt;)> ]
"114" [label = <(&lt;operator&gt;.alloc,new Jvc())<SUB>120</SUB>> ]
"115" [label = <(&lt;init&gt;,new Jvc())<SUB>120</SUB>> ]
"116" [label = <(IDENTIFIER,$obj4,new Jvc())> ]
"117" [label = <(IDENTIFIER,$obj4,&lt;empty&gt;)> ]
"118" [label = <(RETURN,return resolveClassName(compilerType);,return resolveClassName(compilerType);)<SUB>122</SUB>> ]
"119" [label = <(resolveClassName,resolveClassName(compilerType))<SUB>122</SUB>> ]
"120" [label = <(IDENTIFIER,compilerType,resolveClassName(compilerType))<SUB>122</SUB>> ]
"121" [label = <(MODIFIER,PUBLIC)> ]
"122" [label = <(MODIFIER,STATIC)> ]
"123" [label = <(METHOD_RETURN,ANY)<SUB>93</SUB>> ]
  "23" -> "24" 
  "23" -> "25" 
  "23" -> "26" 
  "23" -> "121" 
  "23" -> "122" 
  "23" -> "123" 
  "26" -> "27" 
  "26" -> "40" 
  "26" -> "61" 
  "26" -> "101" 
  "26" -> "118" 
  "27" -> "28" 
  "27" -> "31" 
  "28" -> "29" 
  "28" -> "30" 
  "31" -> "32" 
  "32" -> "33" 
  "33" -> "34" 
  "33" -> "37" 
  "33" -> "39" 
  "34" -> "35" 
  "34" -> "36" 
  "37" -> "38" 
  "40" -> "41" 
  "40" -> "52" 
  "41" -> "42" 
  "41" -> "49" 
  "42" -> "43" 
  "42" -> "46" 
  "43" -> "44" 
  "43" -> "45" 
  "46" -> "47" 
  "46" -> "48" 
  "49" -> "50" 
  "49" -> "51" 
  "52" -> "53" 
  "53" -> "54" 
  "54" -> "55" 
  "54" -> "58" 
  "54" -> "60" 
  "55" -> "56" 
  "55" -> "57" 
  "58" -> "59" 
  "61" -> "62" 
  "61" -> "69" 
  "62" -> "63" 
  "62" -> "66" 
  "63" -> "64" 
  "63" -> "65" 
  "66" -> "67" 
  "66" -> "68" 
  "69" -> "70" 
  "69" -> "93" 
  "70" -> "71" 
  "70" -> "75" 
  "71" -> "72" 
  "72" -> "73" 
  "72" -> "74" 
  "75" -> "76" 
  "76" -> "77" 
  "76" -> "85" 
  "77" -> "78" 
  "77" -> "79" 
  "77" -> "82" 
  "79" -> "80" 
  "79" -> "81" 
  "82" -> "83" 
  "82" -> "84" 
  "85" -> "86" 
  "86" -> "87" 
  "86" -> "90" 
  "86" -> "92" 
  "87" -> "88" 
  "87" -> "89" 
  "90" -> "91" 
  "93" -> "94" 
  "94" -> "95" 
  "94" -> "98" 
  "94" -> "100" 
  "95" -> "96" 
  "95" -> "97" 
  "98" -> "99" 
  "101" -> "102" 
  "101" -> "109" 
  "102" -> "103" 
  "102" -> "106" 
  "103" -> "104" 
  "103" -> "105" 
  "106" -> "107" 
  "106" -> "108" 
  "109" -> "110" 
  "110" -> "111" 
  "111" -> "112" 
  "111" -> "115" 
  "111" -> "117" 
  "112" -> "113" 
  "112" -> "114" 
  "115" -> "116" 
  "118" -> "119" 
  "119" -> "120" 
}

digraph "exactlyOne" {  
"1014" [label = <(METHOD,exactlyOne)<SUB>398</SUB>> ]
"1015" [label = <(PARAM,this)<SUB>398</SUB>> ]
"1016" [label = <(PARAM,String[] attrs)<SUB>398</SUB>> ]
"1017" [label = <(PARAM,String alt)<SUB>398</SUB>> ]
"1018" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>398</SUB>> ]
"1019" [label = <(LOCAL,StringBuffer buf: java.lang.StringBuffer)> ]
"1020" [label = <(&lt;operator&gt;.assignment,StringBuffer buf = new StringBuffer(&quot;Exactly one of &quot;).append('[').append(attrs[0]))<SUB>399</SUB>> ]
"1021" [label = <(IDENTIFIER,buf,StringBuffer buf = new StringBuffer(&quot;Exactly one of &quot;).append('[').append(attrs[0]))<SUB>399</SUB>> ]
"1022" [label = <(append,new StringBuffer(&quot;Exactly one of &quot;).append('[').append(attrs[0]))<SUB>399</SUB>> ]
"1023" [label = <(append,new StringBuffer(&quot;Exactly one of &quot;).append('['))<SUB>399</SUB>> ]
"1024" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>399</SUB>> ]
"1025" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"1026" [label = <(IDENTIFIER,$obj16,&lt;empty&gt;)> ]
"1027" [label = <(&lt;operator&gt;.alloc,new StringBuffer(&quot;Exactly one of &quot;))<SUB>399</SUB>> ]
"1028" [label = <(&lt;init&gt;,new StringBuffer(&quot;Exactly one of &quot;))<SUB>399</SUB>> ]
"1029" [label = <(IDENTIFIER,$obj16,new StringBuffer(&quot;Exactly one of &quot;))> ]
"1030" [label = <(LITERAL,&quot;Exactly one of &quot;,new StringBuffer(&quot;Exactly one of &quot;))<SUB>399</SUB>> ]
"1031" [label = <(IDENTIFIER,$obj16,&lt;empty&gt;)> ]
"1032" [label = <(LITERAL,'[',new StringBuffer(&quot;Exactly one of &quot;).append('['))<SUB>400</SUB>> ]
"1033" [label = <(&lt;operator&gt;.indexAccess,attrs[0])<SUB>400</SUB>> ]
"1034" [label = <(IDENTIFIER,attrs,new StringBuffer(&quot;Exactly one of &quot;).append('[').append(attrs[0]))<SUB>400</SUB>> ]
"1035" [label = <(LITERAL,0,new StringBuffer(&quot;Exactly one of &quot;).append('[').append(attrs[0]))<SUB>400</SUB>> ]
"1036" [label = <(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; attrs.length); i++),for (int i = 1; Some(i &lt; attrs.length); i++))<SUB>401</SUB>> ]
"1037" [label = <(LOCAL,int i: int)> ]
"1038" [label = <(&lt;operator&gt;.assignment,int i = 1)<SUB>401</SUB>> ]
"1039" [label = <(IDENTIFIER,i,int i = 1)<SUB>401</SUB>> ]
"1040" [label = <(LITERAL,1,int i = 1)<SUB>401</SUB>> ]
"1041" [label = <(&lt;operator&gt;.lessThan,i &lt; attrs.length)<SUB>401</SUB>> ]
"1042" [label = <(IDENTIFIER,i,i &lt; attrs.length)<SUB>401</SUB>> ]
"1043" [label = <(&lt;operator&gt;.fieldAccess,attrs.length)<SUB>401</SUB>> ]
"1044" [label = <(IDENTIFIER,attrs,i &lt; attrs.length)<SUB>401</SUB>> ]
"1045" [label = <(FIELD_IDENTIFIER,length,length)<SUB>401</SUB>> ]
"1046" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>401</SUB>> ]
"1047" [label = <(IDENTIFIER,i,i++)<SUB>401</SUB>> ]
"1048" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>401</SUB>> ]
"1049" [label = <(append,buf.append('|').append(attrs[i]))<SUB>402</SUB>> ]
"1050" [label = <(append,buf.append('|'))<SUB>402</SUB>> ]
"1051" [label = <(IDENTIFIER,buf,buf.append('|'))<SUB>402</SUB>> ]
"1052" [label = <(LITERAL,'|',buf.append('|'))<SUB>402</SUB>> ]
"1053" [label = <(&lt;operator&gt;.indexAccess,attrs[i])<SUB>402</SUB>> ]
"1054" [label = <(IDENTIFIER,attrs,buf.append('|').append(attrs[i]))<SUB>402</SUB>> ]
"1055" [label = <(IDENTIFIER,i,buf.append('|').append(attrs[i]))<SUB>402</SUB>> ]
"1056" [label = <(append,buf.append(']'))<SUB>404</SUB>> ]
"1057" [label = <(IDENTIFIER,buf,buf.append(']'))<SUB>404</SUB>> ]
"1058" [label = <(LITERAL,']',buf.append(']'))<SUB>404</SUB>> ]
"1059" [label = <(CONTROL_STRUCTURE,if (alt != null),if (alt != null))<SUB>405</SUB>> ]
"1060" [label = <(&lt;operator&gt;.notEquals,alt != null)<SUB>405</SUB>> ]
"1061" [label = <(IDENTIFIER,alt,alt != null)<SUB>405</SUB>> ]
"1062" [label = <(LITERAL,null,alt != null)<SUB>405</SUB>> ]
"1063" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>405</SUB>> ]
"1064" [label = <(append,buf.append(&quot; or &quot;).append(alt))<SUB>406</SUB>> ]
"1065" [label = <(append,buf.append(&quot; or &quot;))<SUB>406</SUB>> ]
"1066" [label = <(IDENTIFIER,buf,buf.append(&quot; or &quot;))<SUB>406</SUB>> ]
"1067" [label = <(LITERAL,&quot; or &quot;,buf.append(&quot; or &quot;))<SUB>406</SUB>> ]
"1068" [label = <(IDENTIFIER,alt,buf.append(&quot; or &quot;).append(alt))<SUB>406</SUB>> ]
"1069" [label = <(RETURN,return new BuildException(buf.append(&quot; is required.&quot;).toString());,return new BuildException(buf.append(&quot; is required.&quot;).toString());)<SUB>408</SUB>> ]
"1070" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>408</SUB>> ]
"1071" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"1072" [label = <(IDENTIFIER,$obj17,&lt;empty&gt;)> ]
"1073" [label = <(&lt;operator&gt;.alloc,new BuildException(buf.append(&quot; is required.&quot;).toString()))<SUB>408</SUB>> ]
"1074" [label = <(&lt;init&gt;,new BuildException(buf.append(&quot; is required.&quot;).toString()))<SUB>408</SUB>> ]
"1075" [label = <(IDENTIFIER,$obj17,new BuildException(buf.append(&quot; is required.&quot;).toString()))> ]
"1076" [label = <(toString,buf.append(&quot; is required.&quot;).toString())<SUB>408</SUB>> ]
"1077" [label = <(append,buf.append(&quot; is required.&quot;))<SUB>408</SUB>> ]
"1078" [label = <(IDENTIFIER,buf,buf.append(&quot; is required.&quot;))<SUB>408</SUB>> ]
"1079" [label = <(LITERAL,&quot; is required.&quot;,buf.append(&quot; is required.&quot;))<SUB>408</SUB>> ]
"1080" [label = <(IDENTIFIER,$obj17,&lt;empty&gt;)> ]
"1081" [label = <(MODIFIER,PRIVATE)> ]
"1082" [label = <(MODIFIER,VIRTUAL)> ]
"1083" [label = <(METHOD_RETURN,org.apache.tools.ant.BuildException)<SUB>398</SUB>> ]
  "1014" -> "1015" 
  "1014" -> "1016" 
  "1014" -> "1017" 
  "1014" -> "1018" 
  "1014" -> "1081" 
  "1014" -> "1082" 
  "1014" -> "1083" 
  "1018" -> "1019" 
  "1018" -> "1020" 
  "1018" -> "1036" 
  "1018" -> "1056" 
  "1018" -> "1059" 
  "1018" -> "1069" 
  "1020" -> "1021" 
  "1020" -> "1022" 
  "1022" -> "1023" 
  "1022" -> "1033" 
  "1023" -> "1024" 
  "1023" -> "1032" 
  "1024" -> "1025" 
  "1024" -> "1028" 
  "1024" -> "1031" 
  "1025" -> "1026" 
  "1025" -> "1027" 
  "1028" -> "1029" 
  "1028" -> "1030" 
  "1033" -> "1034" 
  "1033" -> "1035" 
  "1036" -> "1037" 
  "1036" -> "1038" 
  "1036" -> "1041" 
  "1036" -> "1046" 
  "1036" -> "1048" 
  "1038" -> "1039" 
  "1038" -> "1040" 
  "1041" -> "1042" 
  "1041" -> "1043" 
  "1043" -> "1044" 
  "1043" -> "1045" 
  "1046" -> "1047" 
  "1048" -> "1049" 
  "1049" -> "1050" 
  "1049" -> "1053" 
  "1050" -> "1051" 
  "1050" -> "1052" 
  "1053" -> "1054" 
  "1053" -> "1055" 
  "1056" -> "1057" 
  "1056" -> "1058" 
  "1059" -> "1060" 
  "1059" -> "1063" 
  "1060" -> "1061" 
  "1060" -> "1062" 
  "1063" -> "1064" 
  "1064" -> "1065" 
  "1064" -> "1068" 
  "1065" -> "1066" 
  "1065" -> "1067" 
  "1069" -> "1070" 
  "1070" -> "1071" 
  "1070" -> "1074" 
  "1070" -> "1080" 
  "1071" -> "1072" 
  "1071" -> "1073" 
  "1074" -> "1075" 
  "1074" -> "1076" 
  "1076" -> "1077" 
  "1077" -> "1078" 
  "1077" -> "1079" 
}

digraph "createMirror" {  
"1076" [label = <(METHOD,createMirror)<SUB>670</SUB>> ]
"1077" [label = <(PARAM,JUnitTask task)<SUB>670</SUB>> ]
"1078" [label = <(PARAM,ClassLoader loader)<SUB>670</SUB>> ]
"1079" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>670</SUB>> ]
"1080" [label = <(CONTROL_STRUCTURE,try,try)<SUB>671</SUB>> ]
"1081" [label = <(BLOCK,try,try)<SUB>671</SUB>> ]
"1082" [label = <(loadClass,loader.loadClass(&quot;junit.framework.Test&quot;))<SUB>672</SUB>> ]
"1083" [label = <(IDENTIFIER,loader,loader.loadClass(&quot;junit.framework.Test&quot;))<SUB>672</SUB>> ]
"1084" [label = <(LITERAL,&quot;junit.framework.Test&quot;,loader.loadClass(&quot;junit.framework.Test&quot;))<SUB>672</SUB>> ]
"1085" [label = <(BLOCK,catch,catch)> ]
"1086" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>673</SUB>> ]
"1087" [label = <(&lt;operator&gt;.throw,throw new BuildException(&quot;The &lt;classpath&gt; for &lt;junit&gt; must include junit.jar &quot; + &quot;if not in Ant's own classpath&quot;, e, task.getLocation());)<SUB>674</SUB>> ]
"1088" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>674</SUB>> ]
"1089" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"1090" [label = <(IDENTIFIER,$obj10,&lt;empty&gt;)> ]
"1091" [label = <(&lt;operator&gt;.alloc,new BuildException(&quot;The &lt;classpath&gt; for &lt;junit&gt; must include junit.jar &quot; + &quot;if not in Ant's own classpath&quot;, e, task.getLocation()))<SUB>674</SUB>> ]
"1092" [label = <(&lt;init&gt;,new BuildException(&quot;The &lt;classpath&gt; for &lt;junit&gt; must include junit.jar &quot; + &quot;if not in Ant's own classpath&quot;, e, task.getLocation()))<SUB>674</SUB>> ]
"1093" [label = <(IDENTIFIER,$obj10,new BuildException(&quot;The &lt;classpath&gt; for &lt;junit&gt; must include junit.jar &quot; + &quot;if not in Ant's own classpath&quot;, e, task.getLocation()))> ]
"1094" [label = <(&lt;operator&gt;.addition,&quot;The &lt;classpath&gt; for &lt;junit&gt; must include junit.jar &quot; + &quot;if not in Ant's own classpath&quot;)<SUB>675</SUB>> ]
"1095" [label = <(LITERAL,&quot;The &lt;classpath&gt; for &lt;junit&gt; must include junit.jar &quot;,&quot;The &lt;classpath&gt; for &lt;junit&gt; must include junit.jar &quot; + &quot;if not in Ant's own classpath&quot;)<SUB>675</SUB>> ]
"1096" [label = <(LITERAL,&quot;if not in Ant's own classpath&quot;,&quot;The &lt;classpath&gt; for &lt;junit&gt; must include junit.jar &quot; + &quot;if not in Ant's own classpath&quot;)<SUB>676</SUB>> ]
"1097" [label = <(IDENTIFIER,e,new BuildException(&quot;The &lt;classpath&gt; for &lt;junit&gt; must include junit.jar &quot; + &quot;if not in Ant's own classpath&quot;, e, task.getLocation()))<SUB>677</SUB>> ]
"1098" [label = <(getLocation,getLocation())<SUB>677</SUB>> ]
"1099" [label = <(IDENTIFIER,task,getLocation())<SUB>677</SUB>> ]
"1100" [label = <(IDENTIFIER,$obj10,&lt;empty&gt;)> ]
"1101" [label = <(CONTROL_STRUCTURE,try,try)<SUB>679</SUB>> ]
"1102" [label = <(BLOCK,try,try)<SUB>679</SUB>> ]
"1103" [label = <(LOCAL,Class c: java.lang.Class)> ]
"1104" [label = <(&lt;operator&gt;.assignment,Class c = loadClass(JUnitTaskMirror.class.getName() + &quot;Impl&quot;))<SUB>680</SUB>> ]
"1105" [label = <(IDENTIFIER,c,Class c = loadClass(JUnitTaskMirror.class.getName() + &quot;Impl&quot;))<SUB>680</SUB>> ]
"1106" [label = <(loadClass,loadClass(JUnitTaskMirror.class.getName() + &quot;Impl&quot;))<SUB>680</SUB>> ]
"1107" [label = <(IDENTIFIER,loader,loadClass(JUnitTaskMirror.class.getName() + &quot;Impl&quot;))<SUB>680</SUB>> ]
"1108" [label = <(&lt;operator&gt;.addition,JUnitTaskMirror.class.getName() + &quot;Impl&quot;)<SUB>680</SUB>> ]
"1109" [label = <(getName,getName())<SUB>680</SUB>> ]
"1110" [label = <(&lt;operator&gt;.fieldAccess,JUnitTaskMirror.class)<SUB>680</SUB>> ]
"1111" [label = <(IDENTIFIER,JUnitTaskMirror,getName())<SUB>680</SUB>> ]
"1112" [label = <(FIELD_IDENTIFIER,class,class)<SUB>680</SUB>> ]
"1113" [label = <(LITERAL,&quot;Impl&quot;,JUnitTaskMirror.class.getName() + &quot;Impl&quot;)<SUB>680</SUB>> ]
"1114" [label = <(CONTROL_STRUCTURE,if (c.getClassLoader() != loader),if (c.getClassLoader() != loader))<SUB>681</SUB>> ]
"1115" [label = <(&lt;operator&gt;.notEquals,c.getClassLoader() != loader)<SUB>681</SUB>> ]
"1116" [label = <(getClassLoader,c.getClassLoader())<SUB>681</SUB>> ]
"1117" [label = <(IDENTIFIER,c,c.getClassLoader())<SUB>681</SUB>> ]
"1118" [label = <(IDENTIFIER,loader,c.getClassLoader() != loader)<SUB>681</SUB>> ]
"1119" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>681</SUB>> ]
"1120" [label = <(&lt;operator&gt;.throw,throw new BuildException(&quot;Overdelegating loader&quot;, task.getLocation());)<SUB>682</SUB>> ]
"1121" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>682</SUB>> ]
"1122" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"1123" [label = <(IDENTIFIER,$obj11,&lt;empty&gt;)> ]
"1124" [label = <(&lt;operator&gt;.alloc,new BuildException(&quot;Overdelegating loader&quot;, task.getLocation()))<SUB>682</SUB>> ]
"1125" [label = <(&lt;init&gt;,new BuildException(&quot;Overdelegating loader&quot;, task.getLocation()))<SUB>682</SUB>> ]
"1126" [label = <(IDENTIFIER,$obj11,new BuildException(&quot;Overdelegating loader&quot;, task.getLocation()))> ]
"1127" [label = <(LITERAL,&quot;Overdelegating loader&quot;,new BuildException(&quot;Overdelegating loader&quot;, task.getLocation()))<SUB>682</SUB>> ]
"1128" [label = <(getLocation,getLocation())<SUB>682</SUB>> ]
"1129" [label = <(IDENTIFIER,task,getLocation())<SUB>682</SUB>> ]
"1130" [label = <(IDENTIFIER,$obj11,&lt;empty&gt;)> ]
"1131" [label = <(LOCAL,Constructor cons: java.lang.reflect.Constructor)> ]
"1132" [label = <(&lt;operator&gt;.assignment,Constructor cons = c.getConstructor(new Class[] { JUnitTask.class }))<SUB>684</SUB>> ]
"1133" [label = <(IDENTIFIER,cons,Constructor cons = c.getConstructor(new Class[] { JUnitTask.class }))<SUB>684</SUB>> ]
"1134" [label = <(getConstructor,c.getConstructor(new Class[] { JUnitTask.class }))<SUB>684</SUB>> ]
"1135" [label = <(IDENTIFIER,c,c.getConstructor(new Class[] { JUnitTask.class }))<SUB>684</SUB>> ]
"1136" [label = <(&lt;operator&gt;.arrayInitializer,&lt;operator&gt;.arrayInitializer)<SUB>684</SUB>> ]
"1137" [label = <(&lt;operator&gt;.arrayInitializer,new Class[] { JUnitTask.class })<SUB>684</SUB>> ]
"1138" [label = <(&lt;operator&gt;.fieldAccess,JUnitTask.class)<SUB>684</SUB>> ]
"1139" [label = <(IDENTIFIER,JUnitTask,new Class[] { JUnitTask.class })<SUB>684</SUB>> ]
"1140" [label = <(FIELD_IDENTIFIER,class,class)<SUB>684</SUB>> ]
"1141" [label = <(RETURN,return (JUnitTaskMirror) cons.newInstance(new Object[] { task });,return (JUnitTaskMirror) cons.newInstance(new Object[] { task });)<SUB>685</SUB>> ]
"1142" [label = <(&lt;operator&gt;.cast,(JUnitTaskMirror) cons.newInstance(new Object[] { task }))<SUB>685</SUB>> ]
"1143" [label = <(TYPE_REF,JUnitTaskMirror,JUnitTaskMirror)<SUB>685</SUB>> ]
"1144" [label = <(newInstance,cons.newInstance(new Object[] { task }))<SUB>685</SUB>> ]
"1145" [label = <(IDENTIFIER,cons,cons.newInstance(new Object[] { task }))<SUB>685</SUB>> ]
"1146" [label = <(&lt;operator&gt;.arrayInitializer,&lt;operator&gt;.arrayInitializer)<SUB>685</SUB>> ]
"1147" [label = <(&lt;operator&gt;.arrayInitializer,new Object[] { task })<SUB>685</SUB>> ]
"1148" [label = <(IDENTIFIER,task,new Object[] { task })<SUB>685</SUB>> ]
"1149" [label = <(BLOCK,catch,catch)> ]
"1150" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>686</SUB>> ]
"1151" [label = <(&lt;operator&gt;.throw,throw new BuildException(e, task.getLocation());)<SUB>687</SUB>> ]
"1152" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>687</SUB>> ]
"1153" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"1154" [label = <(IDENTIFIER,$obj12,&lt;empty&gt;)> ]
"1155" [label = <(&lt;operator&gt;.alloc,new BuildException(e, task.getLocation()))<SUB>687</SUB>> ]
"1156" [label = <(&lt;init&gt;,new BuildException(e, task.getLocation()))<SUB>687</SUB>> ]
"1157" [label = <(IDENTIFIER,$obj12,new BuildException(e, task.getLocation()))> ]
"1158" [label = <(IDENTIFIER,e,new BuildException(e, task.getLocation()))<SUB>687</SUB>> ]
"1159" [label = <(getLocation,getLocation())<SUB>687</SUB>> ]
"1160" [label = <(IDENTIFIER,task,getLocation())<SUB>687</SUB>> ]
"1161" [label = <(IDENTIFIER,$obj12,&lt;empty&gt;)> ]
"1162" [label = <(MODIFIER,PRIVATE)> ]
"1163" [label = <(MODIFIER,STATIC)> ]
"1164" [label = <(METHOD_RETURN,ANY)<SUB>670</SUB>> ]
  "1076" -> "1077" 
  "1076" -> "1078" 
  "1076" -> "1079" 
  "1076" -> "1162" 
  "1076" -> "1163" 
  "1076" -> "1164" 
  "1079" -> "1080" 
  "1079" -> "1101" 
  "1080" -> "1081" 
  "1080" -> "1085" 
  "1081" -> "1082" 
  "1082" -> "1083" 
  "1082" -> "1084" 
  "1085" -> "1086" 
  "1086" -> "1087" 
  "1087" -> "1088" 
  "1088" -> "1089" 
  "1088" -> "1092" 
  "1088" -> "1100" 
  "1089" -> "1090" 
  "1089" -> "1091" 
  "1092" -> "1093" 
  "1092" -> "1094" 
  "1092" -> "1097" 
  "1092" -> "1098" 
  "1094" -> "1095" 
  "1094" -> "1096" 
  "1098" -> "1099" 
  "1101" -> "1102" 
  "1101" -> "1149" 
  "1102" -> "1103" 
  "1102" -> "1104" 
  "1102" -> "1114" 
  "1102" -> "1131" 
  "1102" -> "1132" 
  "1102" -> "1141" 
  "1104" -> "1105" 
  "1104" -> "1106" 
  "1106" -> "1107" 
  "1106" -> "1108" 
  "1108" -> "1109" 
  "1108" -> "1113" 
  "1109" -> "1110" 
  "1110" -> "1111" 
  "1110" -> "1112" 
  "1114" -> "1115" 
  "1114" -> "1119" 
  "1115" -> "1116" 
  "1115" -> "1118" 
  "1116" -> "1117" 
  "1119" -> "1120" 
  "1120" -> "1121" 
  "1121" -> "1122" 
  "1121" -> "1125" 
  "1121" -> "1130" 
  "1122" -> "1123" 
  "1122" -> "1124" 
  "1125" -> "1126" 
  "1125" -> "1127" 
  "1125" -> "1128" 
  "1128" -> "1129" 
  "1132" -> "1133" 
  "1132" -> "1134" 
  "1134" -> "1135" 
  "1134" -> "1136" 
  "1136" -> "1137" 
  "1137" -> "1138" 
  "1138" -> "1139" 
  "1138" -> "1140" 
  "1141" -> "1142" 
  "1142" -> "1143" 
  "1142" -> "1144" 
  "1144" -> "1145" 
  "1144" -> "1146" 
  "1146" -> "1147" 
  "1147" -> "1148" 
  "1149" -> "1150" 
  "1150" -> "1151" 
  "1151" -> "1152" 
  "1152" -> "1153" 
  "1152" -> "1156" 
  "1152" -> "1161" 
  "1153" -> "1154" 
  "1153" -> "1155" 
  "1156" -> "1157" 
  "1156" -> "1158" 
  "1156" -> "1159" 
  "1159" -> "1160" 
}

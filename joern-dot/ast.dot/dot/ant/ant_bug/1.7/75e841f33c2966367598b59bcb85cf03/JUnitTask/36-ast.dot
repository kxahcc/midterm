digraph "init" {  
"1046" [label = <(METHOD,init)<SUB>662</SUB>> ]
"65" [label = <(PARAM,this)<SUB>662</SUB>> ]
"1047" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>662</SUB>> ]
"1048" [label = <(&lt;operator&gt;.assignment,this.antRuntimeClasses = new Path(getProject()))<SUB>663</SUB>> ]
"1049" [label = <(&lt;operator&gt;.fieldAccess,this.antRuntimeClasses)<SUB>663</SUB>> ]
"1050" [label = <(IDENTIFIER,this,this.antRuntimeClasses = new Path(getProject()))<SUB>663</SUB>> ]
"1051" [label = <(FIELD_IDENTIFIER,antRuntimeClasses,antRuntimeClasses)<SUB>663</SUB>> ]
"1052" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>663</SUB>> ]
"1053" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"1054" [label = <(IDENTIFIER,$obj9,&lt;empty&gt;)> ]
"1055" [label = <(&lt;operator&gt;.alloc,new Path(getProject()))<SUB>663</SUB>> ]
"1056" [label = <(&lt;init&gt;,new Path(getProject()))<SUB>663</SUB>> ]
"1057" [label = <(IDENTIFIER,$obj9,new Path(getProject()))> ]
"1058" [label = <(getProject,getProject())<SUB>663</SUB>> ]
"64" [label = <(IDENTIFIER,this,getProject())<SUB>663</SUB>> ]
"1059" [label = <(IDENTIFIER,$obj9,&lt;empty&gt;)> ]
"1060" [label = <(&lt;operator&gt;.assignment,this.splitJunit = !addClasspathEntry(&quot;/junit/framework/TestCase.class&quot;))<SUB>664</SUB>> ]
"1061" [label = <(&lt;operator&gt;.fieldAccess,this.splitJunit)<SUB>664</SUB>> ]
"1062" [label = <(IDENTIFIER,this,this.splitJunit = !addClasspathEntry(&quot;/junit/framework/TestCase.class&quot;))<SUB>664</SUB>> ]
"1063" [label = <(FIELD_IDENTIFIER,splitJunit,splitJunit)<SUB>664</SUB>> ]
"1064" [label = <(&lt;operator&gt;.logicalNot,!addClasspathEntry(&quot;/junit/framework/TestCase.class&quot;))<SUB>664</SUB>> ]
"1065" [label = <(addClasspathEntry,this.addClasspathEntry(&quot;/junit/framework/TestCase.class&quot;))<SUB>664</SUB>> ]
"66" [label = <(IDENTIFIER,this,this.addClasspathEntry(&quot;/junit/framework/TestCase.class&quot;))<SUB>664</SUB>> ]
"1066" [label = <(LITERAL,&quot;/junit/framework/TestCase.class&quot;,this.addClasspathEntry(&quot;/junit/framework/TestCase.class&quot;))<SUB>664</SUB>> ]
"1067" [label = <(addClasspathEntry,this.addClasspathEntry(&quot;/org/apache/tools/ant/launch/AntMain.class&quot;))<SUB>665</SUB>> ]
"67" [label = <(IDENTIFIER,this,this.addClasspathEntry(&quot;/org/apache/tools/ant/launch/AntMain.class&quot;))<SUB>665</SUB>> ]
"1068" [label = <(LITERAL,&quot;/org/apache/tools/ant/launch/AntMain.class&quot;,this.addClasspathEntry(&quot;/org/apache/tools/ant/launch/AntMain.class&quot;))<SUB>665</SUB>> ]
"1069" [label = <(addClasspathEntry,this.addClasspathEntry(&quot;/org/apache/tools/ant/Task.class&quot;))<SUB>666</SUB>> ]
"68" [label = <(IDENTIFIER,this,this.addClasspathEntry(&quot;/org/apache/tools/ant/Task.class&quot;))<SUB>666</SUB>> ]
"1070" [label = <(LITERAL,&quot;/org/apache/tools/ant/Task.class&quot;,this.addClasspathEntry(&quot;/org/apache/tools/ant/Task.class&quot;))<SUB>666</SUB>> ]
"1071" [label = <(addClasspathEntry,this.addClasspathEntry(&quot;/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.class&quot;))<SUB>667</SUB>> ]
"69" [label = <(IDENTIFIER,this,this.addClasspathEntry(&quot;/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.class&quot;))<SUB>667</SUB>> ]
"1072" [label = <(LITERAL,&quot;/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.class&quot;,this.addClasspathEntry(&quot;/org/apache/tools/ant/taskdefs/optional/junit/JUnitTestRunner.class&quot;))<SUB>667</SUB>> ]
"1073" [label = <(MODIFIER,PUBLIC)> ]
"1074" [label = <(MODIFIER,VIRTUAL)> ]
"1075" [label = <(METHOD_RETURN,void)<SUB>662</SUB>> ]
  "1046" -> "65" 
  "1046" -> "1047" 
  "1046" -> "1073" 
  "1046" -> "1074" 
  "1046" -> "1075" 
  "1047" -> "1048" 
  "1047" -> "1060" 
  "1047" -> "1067" 
  "1047" -> "1069" 
  "1047" -> "1071" 
  "1048" -> "1049" 
  "1048" -> "1052" 
  "1049" -> "1050" 
  "1049" -> "1051" 
  "1052" -> "1053" 
  "1052" -> "1056" 
  "1052" -> "1059" 
  "1053" -> "1054" 
  "1053" -> "1055" 
  "1056" -> "1057" 
  "1056" -> "1058" 
  "1058" -> "64" 
  "1060" -> "1061" 
  "1060" -> "1064" 
  "1061" -> "1062" 
  "1061" -> "1063" 
  "1064" -> "1065" 
  "1065" -> "66" 
  "1065" -> "1066" 
  "1067" -> "67" 
  "1067" -> "1068" 
  "1069" -> "68" 
  "1069" -> "1070" 
  "1071" -> "69" 
  "1071" -> "1072" 
}

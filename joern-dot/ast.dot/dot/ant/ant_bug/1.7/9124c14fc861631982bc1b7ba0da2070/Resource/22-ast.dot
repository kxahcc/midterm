digraph "iterator" {  
"653" [label = <(METHOD,iterator)<SUB>344</SUB>> ]
"68" [label = <(PARAM,this)<SUB>344</SUB>> ]
"654" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>344</SUB>> ]
"655" [label = <(RETURN,return isReference() ? ((Resource) getCheckedRef()).iterator() : new Iterator() {\012\012    private boolean done = false;\012\012    public boolean hasNext() {\012        return !done;\012    }\012\012    public Object next() {\012        if (done) {\012            throw new NoSuchElementException();\012        }\012        done = true;\012        return Resource.this;\012    }\012\012    public void remove() {\012        throw new UnsupportedOperationException();\012    }\012};,return isReference() ? ((Resource) getCheckedRef()).iterator() : new Iterator() {\012\012    private boolean done = false;\012\012    public boolean hasNext() {\012        return !done;\012    }\012\012    public Object next() {\012        if (done) {\012            throw new NoSuchElementException();\012        }\012        done = true;\012        return Resource.this;\012    }\012\012    public void remove() {\012        throw new UnsupportedOperationException();\012    }\012};)<SUB>345</SUB>> ]
"656" [label = <(&lt;operator&gt;.conditional,isReference() ? ((Resource) getCheckedRef()).iterator() : new Iterator() {\012\012    private boolean done = false;\012\012    public boolean hasNext() {\012        return !done;\012    }\012\012    public Object next() {\012        if (done) {\012            throw new NoSuchElementException();\012        }\012        done = true;\012        return Resource.this;\012    }\012\012    public void remove() {\012        throw new UnsupportedOperationException();\012    }\012})<SUB>345</SUB>> ]
"657" [label = <(isReference,isReference())<SUB>345</SUB>> ]
"67" [label = <(IDENTIFIER,this,isReference())<SUB>345</SUB>> ]
"658" [label = <(iterator,this.iterator())<SUB>345</SUB>> ]
"659" [label = <(&lt;operator&gt;.cast,(Resource) getCheckedRef())<SUB>345</SUB>> ]
"660" [label = <(TYPE_REF,Resource,Resource)<SUB>345</SUB>> ]
"661" [label = <(getCheckedRef,getCheckedRef())<SUB>345</SUB>> ]
"69" [label = <(IDENTIFIER,this,getCheckedRef())<SUB>345</SUB>> ]
"662" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>346</SUB>> ]
"663" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"664" [label = <(IDENTIFIER,$obj7,&lt;empty&gt;)> ]
"665" [label = <(&lt;operator&gt;.alloc,new Iterator() {\012\012    private boolean done = false;\012\012    public boolean hasNext() {\012        return !done;\012    }\012\012    public Object next() {\012        if (done) {\012            throw new NoSuchElementException();\012        }\012        done = true;\012        return Resource.this;\012    }\012\012    public void remove() {\012        throw new UnsupportedOperationException();\012    }\012})<SUB>346</SUB>> ]
"666" [label = <(&lt;init&gt;,new Iterator() {\012\012    private boolean done = false;\012\012    public boolean hasNext() {\012        return !done;\012    }\012\012    public Object next() {\012        if (done) {\012            throw new NoSuchElementException();\012        }\012        done = true;\012        return Resource.this;\012    }\012\012    public void remove() {\012        throw new UnsupportedOperationException();\012    }\012})<SUB>346</SUB>> ]
"667" [label = <(IDENTIFIER,$obj7,new Iterator() {\012\012    private boolean done = false;\012\012    public boolean hasNext() {\012        return !done;\012    }\012\012    public Object next() {\012        if (done) {\012            throw new NoSuchElementException();\012        }\012        done = true;\012        return Resource.this;\012    }\012\012    public void remove() {\012        throw new UnsupportedOperationException();\012    }\012})> ]
"668" [label = <(IDENTIFIER,$obj7,&lt;empty&gt;)> ]
"669" [label = <(MODIFIER,PUBLIC)> ]
"670" [label = <(MODIFIER,VIRTUAL)> ]
"671" [label = <(METHOD_RETURN,java.util.Iterator)<SUB>344</SUB>> ]
  "653" -> "68" 
  "653" -> "654" 
  "653" -> "669" 
  "653" -> "670" 
  "653" -> "671" 
  "654" -> "655" 
  "655" -> "656" 
  "656" -> "657" 
  "656" -> "658" 
  "656" -> "662" 
  "657" -> "67" 
  "658" -> "659" 
  "659" -> "660" 
  "659" -> "661" 
  "661" -> "69" 
  "662" -> "663" 
  "662" -> "666" 
  "662" -> "668" 
  "663" -> "664" 
  "663" -> "665" 
  "666" -> "667" 
}

digraph "getNameAndTypeEntry" {  
"609" [label = <(METHOD,getNameAndTypeEntry)<SUB>320</SUB>> ]
"610" [label = <(PARAM,this)<SUB>320</SUB>> ]
"611" [label = <(PARAM,String name)<SUB>320</SUB>> ]
"612" [label = <(PARAM,String type)<SUB>320</SUB>> ]
"613" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>320</SUB>> ]
"614" [label = <(LOCAL,int index: int)> ]
"615" [label = <(&lt;operator&gt;.assignment,int index = -1)<SUB>321</SUB>> ]
"616" [label = <(IDENTIFIER,index,int index = -1)<SUB>321</SUB>> ]
"617" [label = <(&lt;operator&gt;.minus,-1)<SUB>321</SUB>> ]
"618" [label = <(LITERAL,1,-1)<SUB>321</SUB>> ]
"619" [label = <(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; entries.size() &amp;&amp; index == -1); ++i),for (int i = 0; Some(i &lt; entries.size() &amp;&amp; index == -1); ++i))<SUB>323</SUB>> ]
"620" [label = <(LOCAL,int i: int)> ]
"621" [label = <(&lt;operator&gt;.assignment,int i = 0)<SUB>323</SUB>> ]
"622" [label = <(IDENTIFIER,i,int i = 0)<SUB>323</SUB>> ]
"623" [label = <(LITERAL,0,int i = 0)<SUB>323</SUB>> ]
"624" [label = <(&lt;operator&gt;.logicalAnd,i &lt; entries.size() &amp;&amp; index == -1)<SUB>323</SUB>> ]
"625" [label = <(&lt;operator&gt;.lessThan,i &lt; entries.size())<SUB>323</SUB>> ]
"626" [label = <(IDENTIFIER,i,i &lt; entries.size())<SUB>323</SUB>> ]
"627" [label = <(size,entries.size())<SUB>323</SUB>> ]
"628" [label = <(&lt;operator&gt;.fieldAccess,this.entries)<SUB>323</SUB>> ]
"629" [label = <(IDENTIFIER,this,entries.size())<SUB>323</SUB>> ]
"630" [label = <(FIELD_IDENTIFIER,entries,entries)<SUB>323</SUB>> ]
"631" [label = <(&lt;operator&gt;.equals,index == -1)<SUB>323</SUB>> ]
"632" [label = <(IDENTIFIER,index,index == -1)<SUB>323</SUB>> ]
"633" [label = <(&lt;operator&gt;.minus,-1)<SUB>323</SUB>> ]
"634" [label = <(LITERAL,1,-1)<SUB>323</SUB>> ]
"635" [label = <(&lt;operator&gt;.preIncrement,++i)<SUB>323</SUB>> ]
"636" [label = <(IDENTIFIER,i,++i)<SUB>323</SUB>> ]
"637" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>323</SUB>> ]
"638" [label = <(LOCAL,Object element: java.lang.Object)> ]
"639" [label = <(&lt;operator&gt;.assignment,Object element = entries.elementAt(i))<SUB>324</SUB>> ]
"640" [label = <(IDENTIFIER,element,Object element = entries.elementAt(i))<SUB>324</SUB>> ]
"641" [label = <(elementAt,entries.elementAt(i))<SUB>324</SUB>> ]
"642" [label = <(&lt;operator&gt;.fieldAccess,this.entries)<SUB>324</SUB>> ]
"643" [label = <(IDENTIFIER,this,entries.elementAt(i))<SUB>324</SUB>> ]
"644" [label = <(FIELD_IDENTIFIER,entries,entries)<SUB>324</SUB>> ]
"645" [label = <(IDENTIFIER,i,entries.elementAt(i))<SUB>324</SUB>> ]
"646" [label = <(CONTROL_STRUCTURE,if (element instanceof NameAndTypeCPInfo),if (element instanceof NameAndTypeCPInfo))<SUB>326</SUB>> ]
"647" [label = <(&lt;operator&gt;.instanceOf,element instanceof NameAndTypeCPInfo)<SUB>326</SUB>> ]
"648" [label = <(IDENTIFIER,element,element instanceof NameAndTypeCPInfo)<SUB>326</SUB>> ]
"649" [label = <(TYPE_REF,NameAndTypeCPInfo,NameAndTypeCPInfo)<SUB>326</SUB>> ]
"650" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>326</SUB>> ]
"651" [label = <(LOCAL,NameAndTypeCPInfo nameAndTypeEntry: ANY)> ]
"652" [label = <(&lt;operator&gt;.assignment,ANY nameAndTypeEntry = (NameAndTypeCPInfo) element)<SUB>327</SUB>> ]
"653" [label = <(IDENTIFIER,nameAndTypeEntry,ANY nameAndTypeEntry = (NameAndTypeCPInfo) element)<SUB>327</SUB>> ]
"654" [label = <(&lt;operator&gt;.cast,(NameAndTypeCPInfo) element)<SUB>328</SUB>> ]
"655" [label = <(TYPE_REF,NameAndTypeCPInfo,NameAndTypeCPInfo)<SUB>328</SUB>> ]
"656" [label = <(IDENTIFIER,element,(NameAndTypeCPInfo) element)<SUB>328</SUB>> ]
"657" [label = <(CONTROL_STRUCTURE,if (nameAndTypeEntry.getName().equals(name) &amp;&amp; nameAndTypeEntry.getType().equals(type)),if (nameAndTypeEntry.getName().equals(name) &amp;&amp; nameAndTypeEntry.getType().equals(type)))<SUB>330</SUB>> ]
"658" [label = <(&lt;operator&gt;.logicalAnd,nameAndTypeEntry.getName().equals(name) &amp;&amp; nameAndTypeEntry.getType().equals(type))<SUB>330</SUB>> ]
"659" [label = <(equals,equals(name))<SUB>330</SUB>> ]
"660" [label = <(getName,getName())<SUB>330</SUB>> ]
"661" [label = <(IDENTIFIER,nameAndTypeEntry,getName())<SUB>330</SUB>> ]
"662" [label = <(IDENTIFIER,name,equals(name))<SUB>330</SUB>> ]
"663" [label = <(equals,equals(type))<SUB>331</SUB>> ]
"664" [label = <(getType,getType())<SUB>331</SUB>> ]
"665" [label = <(IDENTIFIER,nameAndTypeEntry,getType())<SUB>331</SUB>> ]
"666" [label = <(IDENTIFIER,type,equals(type))<SUB>331</SUB>> ]
"667" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>331</SUB>> ]
"668" [label = <(&lt;operator&gt;.assignment,index = i)<SUB>332</SUB>> ]
"669" [label = <(IDENTIFIER,index,index = i)<SUB>332</SUB>> ]
"670" [label = <(IDENTIFIER,i,index = i)<SUB>332</SUB>> ]
"671" [label = <(RETURN,return index;,return index;)<SUB>337</SUB>> ]
"672" [label = <(IDENTIFIER,index,return index;)<SUB>337</SUB>> ]
"673" [label = <(MODIFIER,PUBLIC)> ]
"674" [label = <(MODIFIER,VIRTUAL)> ]
"675" [label = <(METHOD_RETURN,int)<SUB>320</SUB>> ]
  "609" -> "610" 
  "609" -> "611" 
  "609" -> "612" 
  "609" -> "613" 
  "609" -> "673" 
  "609" -> "674" 
  "609" -> "675" 
  "613" -> "614" 
  "613" -> "615" 
  "613" -> "619" 
  "613" -> "671" 
  "615" -> "616" 
  "615" -> "617" 
  "617" -> "618" 
  "619" -> "620" 
  "619" -> "621" 
  "619" -> "624" 
  "619" -> "635" 
  "619" -> "637" 
  "621" -> "622" 
  "621" -> "623" 
  "624" -> "625" 
  "624" -> "631" 
  "625" -> "626" 
  "625" -> "627" 
  "627" -> "628" 
  "628" -> "629" 
  "628" -> "630" 
  "631" -> "632" 
  "631" -> "633" 
  "633" -> "634" 
  "635" -> "636" 
  "637" -> "638" 
  "637" -> "639" 
  "637" -> "646" 
  "639" -> "640" 
  "639" -> "641" 
  "641" -> "642" 
  "641" -> "645" 
  "642" -> "643" 
  "642" -> "644" 
  "646" -> "647" 
  "646" -> "650" 
  "647" -> "648" 
  "647" -> "649" 
  "650" -> "651" 
  "650" -> "652" 
  "650" -> "657" 
  "652" -> "653" 
  "652" -> "654" 
  "654" -> "655" 
  "654" -> "656" 
  "657" -> "658" 
  "657" -> "667" 
  "658" -> "659" 
  "658" -> "663" 
  "659" -> "660" 
  "659" -> "662" 
  "660" -> "661" 
  "663" -> "664" 
  "663" -> "666" 
  "664" -> "665" 
  "667" -> "668" 
  "668" -> "669" 
  "668" -> "670" 
  "671" -> "672" 
}

digraph "tokenizePath" {  
"1073" [label = <(METHOD,tokenizePath)<SUB>497</SUB>> ]
"1074" [label = <(PARAM,String path)<SUB>497</SUB>> ]
"1075" [label = <(PARAM,String separator)<SUB>497</SUB>> ]
"1076" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>497</SUB>> ]
"6" [label = <(LOCAL,Vector ret: java.util.Vector)> ]
"1077" [label = <(&lt;operator&gt;.assignment,Vector ret = new Vector())<SUB>498</SUB>> ]
"1078" [label = <(IDENTIFIER,ret,Vector ret = new Vector())<SUB>498</SUB>> ]
"1079" [label = <(&lt;operator&gt;.alloc,new Vector())<SUB>498</SUB>> ]
"1080" [label = <(&lt;init&gt;,new Vector())<SUB>498</SUB>> ]
"5" [label = <(IDENTIFIER,ret,new Vector())<SUB>498</SUB>> ]
"1081" [label = <(CONTROL_STRUCTURE,if (FileUtils.isAbsolutePath(path)),if (FileUtils.isAbsolutePath(path)))<SUB>499</SUB>> ]
"1082" [label = <(isAbsolutePath,isAbsolutePath(path))<SUB>499</SUB>> ]
"1083" [label = <(IDENTIFIER,FileUtils,isAbsolutePath(path))<SUB>499</SUB>> ]
"1084" [label = <(IDENTIFIER,path,isAbsolutePath(path))<SUB>499</SUB>> ]
"1085" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>499</SUB>> ]
"1086" [label = <(LOCAL,String[] s: java.lang.String[])> ]
"1087" [label = <(&lt;operator&gt;.assignment,String[] s = dissect(path))<SUB>500</SUB>> ]
"1088" [label = <(IDENTIFIER,s,String[] s = dissect(path))<SUB>500</SUB>> ]
"1089" [label = <(dissect,dissect(path))<SUB>500</SUB>> ]
"1090" [label = <(&lt;operator&gt;.fieldAccess,SelectorUtils.FILE_UTILS)<SUB>500</SUB>> ]
"1091" [label = <(IDENTIFIER,SelectorUtils,dissect(path))<SUB>500</SUB>> ]
"1092" [label = <(FIELD_IDENTIFIER,FILE_UTILS,FILE_UTILS)<SUB>500</SUB>> ]
"1093" [label = <(IDENTIFIER,path,dissect(path))<SUB>500</SUB>> ]
"1094" [label = <(add,ret.add(s[0]))<SUB>501</SUB>> ]
"1095" [label = <(IDENTIFIER,ret,ret.add(s[0]))<SUB>501</SUB>> ]
"1096" [label = <(&lt;operator&gt;.indexAccess,s[0])<SUB>501</SUB>> ]
"1097" [label = <(IDENTIFIER,s,ret.add(s[0]))<SUB>501</SUB>> ]
"1098" [label = <(LITERAL,0,ret.add(s[0]))<SUB>501</SUB>> ]
"1099" [label = <(&lt;operator&gt;.assignment,path = s[1])<SUB>502</SUB>> ]
"1100" [label = <(IDENTIFIER,path,path = s[1])<SUB>502</SUB>> ]
"1101" [label = <(&lt;operator&gt;.indexAccess,s[1])<SUB>502</SUB>> ]
"1102" [label = <(IDENTIFIER,s,path = s[1])<SUB>502</SUB>> ]
"1103" [label = <(LITERAL,1,path = s[1])<SUB>502</SUB>> ]
"8" [label = <(LOCAL,StringTokenizer st: java.util.StringTokenizer)> ]
"1104" [label = <(&lt;operator&gt;.assignment,StringTokenizer st = new StringTokenizer(path, separator))<SUB>504</SUB>> ]
"1105" [label = <(IDENTIFIER,st,StringTokenizer st = new StringTokenizer(path, separator))<SUB>504</SUB>> ]
"1106" [label = <(&lt;operator&gt;.alloc,new StringTokenizer(path, separator))<SUB>504</SUB>> ]
"1107" [label = <(&lt;init&gt;,new StringTokenizer(path, separator))<SUB>504</SUB>> ]
"7" [label = <(IDENTIFIER,st,new StringTokenizer(path, separator))<SUB>504</SUB>> ]
"1108" [label = <(IDENTIFIER,path,new StringTokenizer(path, separator))<SUB>504</SUB>> ]
"1109" [label = <(IDENTIFIER,separator,new StringTokenizer(path, separator))<SUB>504</SUB>> ]
"1110" [label = <(CONTROL_STRUCTURE,while (st.hasMoreTokens()),while (st.hasMoreTokens()))<SUB>505</SUB>> ]
"1111" [label = <(hasMoreTokens,st.hasMoreTokens())<SUB>505</SUB>> ]
"1112" [label = <(IDENTIFIER,st,st.hasMoreTokens())<SUB>505</SUB>> ]
"1113" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>505</SUB>> ]
"1114" [label = <(addElement,ret.addElement(st.nextToken()))<SUB>506</SUB>> ]
"1115" [label = <(IDENTIFIER,ret,ret.addElement(st.nextToken()))<SUB>506</SUB>> ]
"1116" [label = <(nextToken,st.nextToken())<SUB>506</SUB>> ]
"1117" [label = <(IDENTIFIER,st,st.nextToken())<SUB>506</SUB>> ]
"1118" [label = <(RETURN,return ret;,return ret;)<SUB>508</SUB>> ]
"1119" [label = <(IDENTIFIER,ret,return ret;)<SUB>508</SUB>> ]
"1120" [label = <(MODIFIER,PUBLIC)> ]
"1121" [label = <(MODIFIER,STATIC)> ]
"1122" [label = <(METHOD_RETURN,java.util.Vector)<SUB>497</SUB>> ]
  "1073" -> "1074" 
  "1073" -> "1075" 
  "1073" -> "1076" 
  "1073" -> "1120" 
  "1073" -> "1121" 
  "1073" -> "1122" 
  "1076" -> "6" 
  "1076" -> "1077" 
  "1076" -> "1080" 
  "1076" -> "1081" 
  "1076" -> "8" 
  "1076" -> "1104" 
  "1076" -> "1107" 
  "1076" -> "1110" 
  "1076" -> "1118" 
  "1077" -> "1078" 
  "1077" -> "1079" 
  "1080" -> "5" 
  "1081" -> "1082" 
  "1081" -> "1085" 
  "1082" -> "1083" 
  "1082" -> "1084" 
  "1085" -> "1086" 
  "1085" -> "1087" 
  "1085" -> "1094" 
  "1085" -> "1099" 
  "1087" -> "1088" 
  "1087" -> "1089" 
  "1089" -> "1090" 
  "1089" -> "1093" 
  "1090" -> "1091" 
  "1090" -> "1092" 
  "1094" -> "1095" 
  "1094" -> "1096" 
  "1096" -> "1097" 
  "1096" -> "1098" 
  "1099" -> "1100" 
  "1099" -> "1101" 
  "1101" -> "1102" 
  "1101" -> "1103" 
  "1104" -> "1105" 
  "1104" -> "1106" 
  "1107" -> "7" 
  "1107" -> "1108" 
  "1107" -> "1109" 
  "1110" -> "1111" 
  "1110" -> "1113" 
  "1111" -> "1112" 
  "1113" -> "1114" 
  "1114" -> "1115" 
  "1114" -> "1116" 
  "1116" -> "1117" 
  "1118" -> "1119" 
}

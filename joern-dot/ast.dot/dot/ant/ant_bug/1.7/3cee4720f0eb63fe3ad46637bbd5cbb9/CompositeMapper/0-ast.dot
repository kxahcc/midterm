digraph "mapFileName" {  
"11" [label = <(METHOD,mapFileName)<SUB>31</SUB>> ]
"6" [label = <(PARAM,this)<SUB>31</SUB>> ]
"12" [label = <(PARAM,String sourceFileName)<SUB>31</SUB>> ]
"13" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>> ]
"4" [label = <(LOCAL,HashSet results: java.util.HashSet)> ]
"14" [label = <(&lt;operator&gt;.assignment,HashSet results = new HashSet())<SUB>32</SUB>> ]
"15" [label = <(IDENTIFIER,results,HashSet results = new HashSet())<SUB>32</SUB>> ]
"16" [label = <(&lt;operator&gt;.alloc,new HashSet())<SUB>32</SUB>> ]
"17" [label = <(&lt;init&gt;,new HashSet())<SUB>32</SUB>> ]
"3" [label = <(IDENTIFIER,results,new HashSet())<SUB>32</SUB>> ]
"18" [label = <(LOCAL,FileNameMapper mapper: ANY)> ]
"19" [label = <(&lt;operator&gt;.assignment,ANY mapper = null)<SUB>34</SUB>> ]
"20" [label = <(IDENTIFIER,mapper,ANY mapper = null)<SUB>34</SUB>> ]
"21" [label = <(LITERAL,null,ANY mapper = null)<SUB>34</SUB>> ]
"22" [label = <(CONTROL_STRUCTURE,for (Iterator mIter = getMappers().iterator(); Some(mIter.hasNext()); ),for (Iterator mIter = getMappers().iterator(); Some(mIter.hasNext()); ))<SUB>35</SUB>> ]
"23" [label = <(LOCAL,Iterator mIter: java.util.Iterator)> ]
"24" [label = <(&lt;operator&gt;.assignment,Iterator mIter = iterator())<SUB>35</SUB>> ]
"25" [label = <(IDENTIFIER,mIter,Iterator mIter = iterator())<SUB>35</SUB>> ]
"26" [label = <(iterator,iterator())<SUB>35</SUB>> ]
"27" [label = <(getMappers,getMappers())<SUB>35</SUB>> ]
"5" [label = <(IDENTIFIER,this,getMappers())<SUB>35</SUB>> ]
"28" [label = <(hasNext,mIter.hasNext())<SUB>35</SUB>> ]
"29" [label = <(IDENTIFIER,mIter,mIter.hasNext())<SUB>35</SUB>> ]
"30" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>> ]
"31" [label = <(&lt;operator&gt;.assignment,mapper = (FileNameMapper) (mIter.next()))<SUB>36</SUB>> ]
"32" [label = <(IDENTIFIER,mapper,mapper = (FileNameMapper) (mIter.next()))<SUB>36</SUB>> ]
"33" [label = <(&lt;operator&gt;.cast,(FileNameMapper) (mIter.next()))<SUB>36</SUB>> ]
"34" [label = <(TYPE_REF,FileNameMapper,FileNameMapper)<SUB>36</SUB>> ]
"35" [label = <(next,mIter.next())<SUB>36</SUB>> ]
"36" [label = <(IDENTIFIER,mIter,mIter.next())<SUB>36</SUB>> ]
"37" [label = <(CONTROL_STRUCTURE,if (mapper != null),if (mapper != null))<SUB>37</SUB>> ]
"38" [label = <(&lt;operator&gt;.notEquals,mapper != null)<SUB>37</SUB>> ]
"39" [label = <(IDENTIFIER,mapper,mapper != null)<SUB>37</SUB>> ]
"40" [label = <(LITERAL,null,mapper != null)<SUB>37</SUB>> ]
"41" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>> ]
"42" [label = <(LOCAL,String[] mapped: java.lang.String[])> ]
"43" [label = <(&lt;operator&gt;.assignment,String[] mapped = mapFileName(sourceFileName))<SUB>38</SUB>> ]
"44" [label = <(IDENTIFIER,mapped,String[] mapped = mapFileName(sourceFileName))<SUB>38</SUB>> ]
"45" [label = <(mapFileName,mapFileName(sourceFileName))<SUB>38</SUB>> ]
"46" [label = <(IDENTIFIER,mapper,mapFileName(sourceFileName))<SUB>38</SUB>> ]
"47" [label = <(IDENTIFIER,sourceFileName,mapFileName(sourceFileName))<SUB>38</SUB>> ]
"48" [label = <(CONTROL_STRUCTURE,if (mapped != null),if (mapped != null))<SUB>39</SUB>> ]
"49" [label = <(&lt;operator&gt;.notEquals,mapped != null)<SUB>39</SUB>> ]
"50" [label = <(IDENTIFIER,mapped,mapped != null)<SUB>39</SUB>> ]
"51" [label = <(LITERAL,null,mapped != null)<SUB>39</SUB>> ]
"52" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>39</SUB>> ]
"53" [label = <(addAll,results.addAll(Arrays.asList(mapped)))<SUB>40</SUB>> ]
"54" [label = <(IDENTIFIER,results,results.addAll(Arrays.asList(mapped)))<SUB>40</SUB>> ]
"55" [label = <(asList,Arrays.asList(mapped))<SUB>40</SUB>> ]
"56" [label = <(IDENTIFIER,Arrays,Arrays.asList(mapped))<SUB>40</SUB>> ]
"57" [label = <(&lt;operator&gt;.arrayInitializer,&lt;operator&gt;.arrayInitializer)<SUB>40</SUB>> ]
"58" [label = <(IDENTIFIER,mapped,&lt;operator&gt;.arrayInitializer)<SUB>40</SUB>> ]
"59" [label = <(RETURN,return (results.size() == 0) ? null : (String[]) results.toArray(new String[results.size()]);,return (results.size() == 0) ? null : (String[]) results.toArray(new String[results.size()]);)<SUB>44</SUB>> ]
"60" [label = <(&lt;operator&gt;.conditional,(results.size() == 0) ? null : (String[]) results.toArray(new String[results.size()]))<SUB>44</SUB>> ]
"61" [label = <(&lt;operator&gt;.equals,results.size() == 0)<SUB>44</SUB>> ]
"62" [label = <(size,results.size())<SUB>44</SUB>> ]
"63" [label = <(IDENTIFIER,results,results.size())<SUB>44</SUB>> ]
"64" [label = <(LITERAL,0,results.size() == 0)<SUB>44</SUB>> ]
"65" [label = <(LITERAL,null,(results.size() == 0) ? null : (String[]) results.toArray(new String[results.size()]))<SUB>44</SUB>> ]
"66" [label = <(&lt;operator&gt;.cast,(String[]) results.toArray(new String[results.size()]))<SUB>45</SUB>> ]
"67" [label = <(TYPE_REF,String[],String[])<SUB>45</SUB>> ]
"68" [label = <(toArray,results.toArray(new String[results.size()]))<SUB>45</SUB>> ]
"69" [label = <(IDENTIFIER,results,results.toArray(new String[results.size()]))<SUB>45</SUB>> ]
"70" [label = <(&lt;operator&gt;.alloc,new String[results.size()])> ]
"71" [label = <(size,results.size())<SUB>45</SUB>> ]
"72" [label = <(IDENTIFIER,results,results.size())<SUB>45</SUB>> ]
"73" [label = <(MODIFIER,PUBLIC)> ]
"74" [label = <(MODIFIER,VIRTUAL)> ]
"75" [label = <(METHOD_RETURN,java.lang.String[])<SUB>31</SUB>> ]
  "11" -> "6" 
  "11" -> "12" 
  "11" -> "13" 
  "11" -> "73" 
  "11" -> "74" 
  "11" -> "75" 
  "13" -> "4" 
  "13" -> "14" 
  "13" -> "17" 
  "13" -> "18" 
  "13" -> "19" 
  "13" -> "22" 
  "13" -> "59" 
  "14" -> "15" 
  "14" -> "16" 
  "17" -> "3" 
  "19" -> "20" 
  "19" -> "21" 
  "22" -> "23" 
  "22" -> "24" 
  "22" -> "28" 
  "22" -> "30" 
  "24" -> "25" 
  "24" -> "26" 
  "26" -> "27" 
  "27" -> "5" 
  "28" -> "29" 
  "30" -> "31" 
  "30" -> "37" 
  "31" -> "32" 
  "31" -> "33" 
  "33" -> "34" 
  "33" -> "35" 
  "35" -> "36" 
  "37" -> "38" 
  "37" -> "41" 
  "38" -> "39" 
  "38" -> "40" 
  "41" -> "42" 
  "41" -> "43" 
  "41" -> "48" 
  "43" -> "44" 
  "43" -> "45" 
  "45" -> "46" 
  "45" -> "47" 
  "48" -> "49" 
  "48" -> "52" 
  "49" -> "50" 
  "49" -> "51" 
  "52" -> "53" 
  "53" -> "54" 
  "53" -> "55" 
  "55" -> "56" 
  "55" -> "57" 
  "57" -> "58" 
  "59" -> "60" 
  "60" -> "61" 
  "60" -> "65" 
  "60" -> "66" 
  "61" -> "62" 
  "61" -> "64" 
  "62" -> "63" 
  "66" -> "67" 
  "66" -> "68" 
  "68" -> "69" 
  "68" -> "70" 
  "70" -> "71" 
  "71" -> "72" 
}

digraph "transferFormatters" {  
"1852" [label = <(METHOD,transferFormatters)<SUB>778</SUB>> ]
"1853" [label = <(PARAM,JUnitTestRunner runner)<SUB>778</SUB>> ]
"1854" [label = <(PARAM,JUnitTest test)<SUB>779</SUB>> ]
"1855" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>779</SUB>> ]
"1856" [label = <(addFormatter,addFormatter(new JUnitResultFormatter() {\012\012    public void startTestSuite(JUnitTest suite) throws BuildException {\012    }\012\012    public void endTestSuite(JUnitTest suite) throws BuildException {\012    }\012\012    public void setOutput(OutputStream out) {\012    }\012\012    public void setSystemOutput(String out) {\012    }\012\012    public void setSystemError(String err) {\012    }\012\012    public void addError(Test arg0, Throwable arg1) {\012    }\012\012    public void addFailure(Test arg0, AssertionFailedError arg1) {\012    }\012\012    public void endTest(Test arg0) {\012    }\012\012    public void startTest(Test arg0) {\012        registerTestCase(JUnitVersionHelper.getTestCaseName(arg0));\012    }\012}))<SUB>780</SUB>> ]
"1857" [label = <(IDENTIFIER,runner,addFormatter(new JUnitResultFormatter() {\012\012    public void startTestSuite(JUnitTest suite) throws BuildException {\012    }\012\012    public void endTestSuite(JUnitTest suite) throws BuildException {\012    }\012\012    public void setOutput(OutputStream out) {\012    }\012\012    public void setSystemOutput(String out) {\012    }\012\012    public void setSystemError(String err) {\012    }\012\012    public void addError(Test arg0, Throwable arg1) {\012    }\012\012    public void addFailure(Test arg0, AssertionFailedError arg1) {\012    }\012\012    public void endTest(Test arg0) {\012    }\012\012    public void startTest(Test arg0) {\012        registerTestCase(JUnitVersionHelper.getTestCaseName(arg0));\012    }\012}))<SUB>780</SUB>> ]
"1858" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>780</SUB>> ]
"1859" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"1860" [label = <(IDENTIFIER,$obj26,&lt;empty&gt;)> ]
"1861" [label = <(&lt;operator&gt;.alloc,new JUnitResultFormatter() {\012\012    public void startTestSuite(JUnitTest suite) throws BuildException {\012    }\012\012    public void endTestSuite(JUnitTest suite) throws BuildException {\012    }\012\012    public void setOutput(OutputStream out) {\012    }\012\012    public void setSystemOutput(String out) {\012    }\012\012    public void setSystemError(String err) {\012    }\012\012    public void addError(Test arg0, Throwable arg1) {\012    }\012\012    public void addFailure(Test arg0, AssertionFailedError arg1) {\012    }\012\012    public void endTest(Test arg0) {\012    }\012\012    public void startTest(Test arg0) {\012        registerTestCase(JUnitVersionHelper.getTestCaseName(arg0));\012    }\012})<SUB>780</SUB>> ]
"1862" [label = <(&lt;init&gt;,new JUnitResultFormatter() {\012\012    public void startTestSuite(JUnitTest suite) throws BuildException {\012    }\012\012    public void endTestSuite(JUnitTest suite) throws BuildException {\012    }\012\012    public void setOutput(OutputStream out) {\012    }\012\012    public void setSystemOutput(String out) {\012    }\012\012    public void setSystemError(String err) {\012    }\012\012    public void addError(Test arg0, Throwable arg1) {\012    }\012\012    public void addFailure(Test arg0, AssertionFailedError arg1) {\012    }\012\012    public void endTest(Test arg0) {\012    }\012\012    public void startTest(Test arg0) {\012        registerTestCase(JUnitVersionHelper.getTestCaseName(arg0));\012    }\012})<SUB>780</SUB>> ]
"1863" [label = <(IDENTIFIER,$obj26,new JUnitResultFormatter() {\012\012    public void startTestSuite(JUnitTest suite) throws BuildException {\012    }\012\012    public void endTestSuite(JUnitTest suite) throws BuildException {\012    }\012\012    public void setOutput(OutputStream out) {\012    }\012\012    public void setSystemOutput(String out) {\012    }\012\012    public void setSystemError(String err) {\012    }\012\012    public void addError(Test arg0, Throwable arg1) {\012    }\012\012    public void addFailure(Test arg0, AssertionFailedError arg1) {\012    }\012\012    public void endTest(Test arg0) {\012    }\012\012    public void startTest(Test arg0) {\012        registerTestCase(JUnitVersionHelper.getTestCaseName(arg0));\012    }\012})> ]
"1864" [label = <(IDENTIFIER,$obj26,&lt;empty&gt;)> ]
"1865" [label = <(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; fromCmdLine.size()); i++),for (int i = 0; Some(i &lt; fromCmdLine.size()); i++))<SUB>810</SUB>> ]
"1866" [label = <(LOCAL,int i: int)> ]
"1867" [label = <(&lt;operator&gt;.assignment,int i = 0)<SUB>810</SUB>> ]
"1868" [label = <(IDENTIFIER,i,int i = 0)<SUB>810</SUB>> ]
"1869" [label = <(LITERAL,0,int i = 0)<SUB>810</SUB>> ]
"1870" [label = <(&lt;operator&gt;.lessThan,i &lt; fromCmdLine.size())<SUB>810</SUB>> ]
"1871" [label = <(IDENTIFIER,i,i &lt; fromCmdLine.size())<SUB>810</SUB>> ]
"1872" [label = <(size,fromCmdLine.size())<SUB>810</SUB>> ]
"1873" [label = <(&lt;operator&gt;.fieldAccess,JUnitTestRunner.fromCmdLine)<SUB>810</SUB>> ]
"1874" [label = <(IDENTIFIER,JUnitTestRunner,fromCmdLine.size())<SUB>810</SUB>> ]
"1875" [label = <(FIELD_IDENTIFIER,fromCmdLine,fromCmdLine)<SUB>810</SUB>> ]
"1876" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>810</SUB>> ]
"1877" [label = <(IDENTIFIER,i,i++)<SUB>810</SUB>> ]
"1878" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>810</SUB>> ]
"1879" [label = <(LOCAL,FormatterElement fe: ANY)> ]
"1880" [label = <(&lt;operator&gt;.assignment,ANY fe = (FormatterElement) fromCmdLine.elementAt(i))<SUB>811</SUB>> ]
"1881" [label = <(IDENTIFIER,fe,ANY fe = (FormatterElement) fromCmdLine.elementAt(i))<SUB>811</SUB>> ]
"1882" [label = <(&lt;operator&gt;.cast,(FormatterElement) fromCmdLine.elementAt(i))<SUB>811</SUB>> ]
"1883" [label = <(TYPE_REF,FormatterElement,FormatterElement)<SUB>811</SUB>> ]
"1884" [label = <(elementAt,fromCmdLine.elementAt(i))<SUB>811</SUB>> ]
"1885" [label = <(&lt;operator&gt;.fieldAccess,JUnitTestRunner.fromCmdLine)<SUB>811</SUB>> ]
"1886" [label = <(IDENTIFIER,JUnitTestRunner,fromCmdLine.elementAt(i))<SUB>811</SUB>> ]
"1887" [label = <(FIELD_IDENTIFIER,fromCmdLine,fromCmdLine)<SUB>811</SUB>> ]
"1888" [label = <(IDENTIFIER,i,fromCmdLine.elementAt(i))<SUB>811</SUB>> ]
"1889" [label = <(CONTROL_STRUCTURE,if (multipleTests &amp;&amp; fe.getUseFile()),if (multipleTests &amp;&amp; fe.getUseFile()))<SUB>812</SUB>> ]
"1890" [label = <(&lt;operator&gt;.logicalAnd,multipleTests &amp;&amp; fe.getUseFile())<SUB>812</SUB>> ]
"1891" [label = <(&lt;operator&gt;.fieldAccess,JUnitTestRunner.multipleTests)<SUB>812</SUB>> ]
"1892" [label = <(IDENTIFIER,JUnitTestRunner,multipleTests &amp;&amp; fe.getUseFile())<SUB>812</SUB>> ]
"1893" [label = <(FIELD_IDENTIFIER,multipleTests,multipleTests)<SUB>812</SUB>> ]
"1894" [label = <(getUseFile,getUseFile())<SUB>812</SUB>> ]
"1895" [label = <(IDENTIFIER,fe,getUseFile())<SUB>812</SUB>> ]
"1896" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>812</SUB>> ]
"58" [label = <(LOCAL,File destFile: java.io.File)> ]
"1897" [label = <(&lt;operator&gt;.assignment,File destFile = new File(test.getTodir(), test.getOutfile() + fe.getExtension()))<SUB>813</SUB>> ]
"1898" [label = <(IDENTIFIER,destFile,File destFile = new File(test.getTodir(), test.getOutfile() + fe.getExtension()))<SUB>813</SUB>> ]
"1899" [label = <(&lt;operator&gt;.alloc,new File(test.getTodir(), test.getOutfile() + fe.getExtension()))<SUB>814</SUB>> ]
"1900" [label = <(&lt;init&gt;,new File(test.getTodir(), test.getOutfile() + fe.getExtension()))<SUB>814</SUB>> ]
"57" [label = <(IDENTIFIER,destFile,new File(test.getTodir(), test.getOutfile() + fe.getExtension()))<SUB>813</SUB>> ]
"1901" [label = <(getTodir,getTodir())<SUB>814</SUB>> ]
"1902" [label = <(IDENTIFIER,test,getTodir())<SUB>814</SUB>> ]
"1903" [label = <(&lt;operator&gt;.addition,test.getOutfile() + fe.getExtension())<SUB>815</SUB>> ]
"1904" [label = <(getOutfile,getOutfile())<SUB>815</SUB>> ]
"1905" [label = <(IDENTIFIER,test,getOutfile())<SUB>815</SUB>> ]
"1906" [label = <(getExtension,getExtension())<SUB>815</SUB>> ]
"1907" [label = <(IDENTIFIER,fe,getExtension())<SUB>815</SUB>> ]
"1908" [label = <(setOutfile,setOutfile(destFile))<SUB>816</SUB>> ]
"1909" [label = <(IDENTIFIER,fe,setOutfile(destFile))<SUB>816</SUB>> ]
"1910" [label = <(IDENTIFIER,destFile,setOutfile(destFile))<SUB>816</SUB>> ]
"1911" [label = <(addFormatter,addFormatter((JUnitResultFormatter) fe.createFormatter()))<SUB>818</SUB>> ]
"1912" [label = <(IDENTIFIER,runner,addFormatter((JUnitResultFormatter) fe.createFormatter()))<SUB>818</SUB>> ]
"1913" [label = <(&lt;operator&gt;.cast,(JUnitResultFormatter) fe.createFormatter())<SUB>818</SUB>> ]
"1914" [label = <(TYPE_REF,JUnitResultFormatter,JUnitResultFormatter)<SUB>818</SUB>> ]
"1915" [label = <(createFormatter,createFormatter())<SUB>818</SUB>> ]
"1916" [label = <(IDENTIFIER,fe,createFormatter())<SUB>818</SUB>> ]
"1917" [label = <(MODIFIER,PRIVATE)> ]
"1918" [label = <(MODIFIER,STATIC)> ]
"1919" [label = <(METHOD_RETURN,void)<SUB>778</SUB>> ]
  "1852" -> "1853" 
  "1852" -> "1854" 
  "1852" -> "1855" 
  "1852" -> "1917" 
  "1852" -> "1918" 
  "1852" -> "1919" 
  "1855" -> "1856" 
  "1855" -> "1865" 
  "1856" -> "1857" 
  "1856" -> "1858" 
  "1858" -> "1859" 
  "1858" -> "1862" 
  "1858" -> "1864" 
  "1859" -> "1860" 
  "1859" -> "1861" 
  "1862" -> "1863" 
  "1865" -> "1866" 
  "1865" -> "1867" 
  "1865" -> "1870" 
  "1865" -> "1876" 
  "1865" -> "1878" 
  "1867" -> "1868" 
  "1867" -> "1869" 
  "1870" -> "1871" 
  "1870" -> "1872" 
  "1872" -> "1873" 
  "1873" -> "1874" 
  "1873" -> "1875" 
  "1876" -> "1877" 
  "1878" -> "1879" 
  "1878" -> "1880" 
  "1878" -> "1889" 
  "1878" -> "1911" 
  "1880" -> "1881" 
  "1880" -> "1882" 
  "1882" -> "1883" 
  "1882" -> "1884" 
  "1884" -> "1885" 
  "1884" -> "1888" 
  "1885" -> "1886" 
  "1885" -> "1887" 
  "1889" -> "1890" 
  "1889" -> "1896" 
  "1890" -> "1891" 
  "1890" -> "1894" 
  "1891" -> "1892" 
  "1891" -> "1893" 
  "1894" -> "1895" 
  "1896" -> "58" 
  "1896" -> "1897" 
  "1896" -> "1900" 
  "1896" -> "1908" 
  "1897" -> "1898" 
  "1897" -> "1899" 
  "1900" -> "57" 
  "1900" -> "1901" 
  "1900" -> "1903" 
  "1901" -> "1902" 
  "1903" -> "1904" 
  "1903" -> "1906" 
  "1904" -> "1905" 
  "1906" -> "1907" 
  "1908" -> "1909" 
  "1908" -> "1910" 
  "1911" -> "1912" 
  "1911" -> "1913" 
  "1913" -> "1914" 
  "1913" -> "1915" 
  "1915" -> "1916" 
}

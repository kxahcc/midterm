digraph "filterStack" {  
"2022" [label = <(METHOD,filterStack)<SUB>865</SUB>> ]
"2023" [label = <(PARAM,String stack)<SUB>865</SUB>> ]
"2024" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>865</SUB>> ]
"2025" [label = <(CONTROL_STRUCTURE,if (!filtertrace),if (!filtertrace))<SUB>866</SUB>> ]
"2026" [label = <(&lt;operator&gt;.logicalNot,!filtertrace)<SUB>866</SUB>> ]
"2027" [label = <(&lt;operator&gt;.fieldAccess,JUnitTestRunner.filtertrace)<SUB>866</SUB>> ]
"2028" [label = <(IDENTIFIER,JUnitTestRunner,!filtertrace)<SUB>866</SUB>> ]
"2029" [label = <(FIELD_IDENTIFIER,filtertrace,filtertrace)<SUB>866</SUB>> ]
"2030" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>866</SUB>> ]
"2031" [label = <(RETURN,return stack;,return stack;)<SUB>867</SUB>> ]
"2032" [label = <(IDENTIFIER,stack,return stack;)<SUB>867</SUB>> ]
"62" [label = <(LOCAL,StringWriter sw: java.io.StringWriter)> ]
"2033" [label = <(&lt;operator&gt;.assignment,StringWriter sw = new StringWriter())<SUB>869</SUB>> ]
"2034" [label = <(IDENTIFIER,sw,StringWriter sw = new StringWriter())<SUB>869</SUB>> ]
"2035" [label = <(&lt;operator&gt;.alloc,new StringWriter())<SUB>869</SUB>> ]
"2036" [label = <(&lt;init&gt;,new StringWriter())<SUB>869</SUB>> ]
"61" [label = <(IDENTIFIER,sw,new StringWriter())<SUB>869</SUB>> ]
"64" [label = <(LOCAL,PrintWriter pw: java.io.PrintWriter)> ]
"2037" [label = <(&lt;operator&gt;.assignment,PrintWriter pw = new PrintWriter(sw))<SUB>870</SUB>> ]
"2038" [label = <(IDENTIFIER,pw,PrintWriter pw = new PrintWriter(sw))<SUB>870</SUB>> ]
"2039" [label = <(&lt;operator&gt;.alloc,new PrintWriter(sw))<SUB>870</SUB>> ]
"2040" [label = <(&lt;init&gt;,new PrintWriter(sw))<SUB>870</SUB>> ]
"63" [label = <(IDENTIFIER,pw,new PrintWriter(sw))<SUB>870</SUB>> ]
"2041" [label = <(IDENTIFIER,sw,new PrintWriter(sw))<SUB>870</SUB>> ]
"66" [label = <(LOCAL,StringReader sr: java.io.StringReader)> ]
"2042" [label = <(&lt;operator&gt;.assignment,StringReader sr = new StringReader(stack))<SUB>871</SUB>> ]
"2043" [label = <(IDENTIFIER,sr,StringReader sr = new StringReader(stack))<SUB>871</SUB>> ]
"2044" [label = <(&lt;operator&gt;.alloc,new StringReader(stack))<SUB>871</SUB>> ]
"2045" [label = <(&lt;init&gt;,new StringReader(stack))<SUB>871</SUB>> ]
"65" [label = <(IDENTIFIER,sr,new StringReader(stack))<SUB>871</SUB>> ]
"2046" [label = <(IDENTIFIER,stack,new StringReader(stack))<SUB>871</SUB>> ]
"68" [label = <(LOCAL,BufferedReader br: java.io.BufferedReader)> ]
"2047" [label = <(&lt;operator&gt;.assignment,BufferedReader br = new BufferedReader(sr))<SUB>872</SUB>> ]
"2048" [label = <(IDENTIFIER,br,BufferedReader br = new BufferedReader(sr))<SUB>872</SUB>> ]
"2049" [label = <(&lt;operator&gt;.alloc,new BufferedReader(sr))<SUB>872</SUB>> ]
"2050" [label = <(&lt;init&gt;,new BufferedReader(sr))<SUB>872</SUB>> ]
"67" [label = <(IDENTIFIER,br,new BufferedReader(sr))<SUB>872</SUB>> ]
"2051" [label = <(IDENTIFIER,sr,new BufferedReader(sr))<SUB>872</SUB>> ]
"2052" [label = <(LOCAL,String line: java.lang.String)> ]
"2053" [label = <(CONTROL_STRUCTURE,try,try)<SUB>875</SUB>> ]
"2054" [label = <(BLOCK,try,try)<SUB>875</SUB>> ]
"2055" [label = <(CONTROL_STRUCTURE,while ((line = br.readLine()) != null),while ((line = br.readLine()) != null))<SUB>876</SUB>> ]
"2056" [label = <(&lt;operator&gt;.notEquals,(line = br.readLine()) != null)<SUB>876</SUB>> ]
"2057" [label = <(&lt;operator&gt;.assignment,line = br.readLine())<SUB>876</SUB>> ]
"2058" [label = <(IDENTIFIER,line,line = br.readLine())<SUB>876</SUB>> ]
"2059" [label = <(readLine,br.readLine())<SUB>876</SUB>> ]
"2060" [label = <(IDENTIFIER,br,br.readLine())<SUB>876</SUB>> ]
"2061" [label = <(LITERAL,null,(line = br.readLine()) != null)<SUB>876</SUB>> ]
"2062" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>876</SUB>> ]
"2063" [label = <(CONTROL_STRUCTURE,if (!filterLine(line)),if (!filterLine(line)))<SUB>877</SUB>> ]
"2064" [label = <(&lt;operator&gt;.logicalNot,!filterLine(line))<SUB>877</SUB>> ]
"2065" [label = <(filterLine,filterLine(line))<SUB>877</SUB>> ]
"2066" [label = <(IDENTIFIER,line,filterLine(line))<SUB>877</SUB>> ]
"2067" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>877</SUB>> ]
"2068" [label = <(println,pw.println(line))<SUB>878</SUB>> ]
"2069" [label = <(IDENTIFIER,pw,pw.println(line))<SUB>878</SUB>> ]
"2070" [label = <(IDENTIFIER,line,pw.println(line))<SUB>878</SUB>> ]
"2071" [label = <(BLOCK,catch,catch)> ]
"2072" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>881</SUB>> ]
"2073" [label = <(RETURN,return stack;,return stack;)<SUB>882</SUB>> ]
"2074" [label = <(IDENTIFIER,stack,return stack;)<SUB>882</SUB>> ]
"2075" [label = <(RETURN,return sw.toString();,return sw.toString();)<SUB>884</SUB>> ]
"2076" [label = <(toString,sw.toString())<SUB>884</SUB>> ]
"2077" [label = <(IDENTIFIER,sw,sw.toString())<SUB>884</SUB>> ]
"2078" [label = <(MODIFIER,PUBLIC)> ]
"2079" [label = <(MODIFIER,STATIC)> ]
"2080" [label = <(METHOD_RETURN,java.lang.String)<SUB>865</SUB>> ]
  "2022" -> "2023" 
  "2022" -> "2024" 
  "2022" -> "2078" 
  "2022" -> "2079" 
  "2022" -> "2080" 
  "2024" -> "2025" 
  "2024" -> "62" 
  "2024" -> "2033" 
  "2024" -> "2036" 
  "2024" -> "64" 
  "2024" -> "2037" 
  "2024" -> "2040" 
  "2024" -> "66" 
  "2024" -> "2042" 
  "2024" -> "2045" 
  "2024" -> "68" 
  "2024" -> "2047" 
  "2024" -> "2050" 
  "2024" -> "2052" 
  "2024" -> "2053" 
  "2024" -> "2075" 
  "2025" -> "2026" 
  "2025" -> "2030" 
  "2026" -> "2027" 
  "2027" -> "2028" 
  "2027" -> "2029" 
  "2030" -> "2031" 
  "2031" -> "2032" 
  "2033" -> "2034" 
  "2033" -> "2035" 
  "2036" -> "61" 
  "2037" -> "2038" 
  "2037" -> "2039" 
  "2040" -> "63" 
  "2040" -> "2041" 
  "2042" -> "2043" 
  "2042" -> "2044" 
  "2045" -> "65" 
  "2045" -> "2046" 
  "2047" -> "2048" 
  "2047" -> "2049" 
  "2050" -> "67" 
  "2050" -> "2051" 
  "2053" -> "2054" 
  "2053" -> "2071" 
  "2054" -> "2055" 
  "2055" -> "2056" 
  "2055" -> "2062" 
  "2056" -> "2057" 
  "2056" -> "2061" 
  "2057" -> "2058" 
  "2057" -> "2059" 
  "2059" -> "2060" 
  "2062" -> "2063" 
  "2063" -> "2064" 
  "2063" -> "2067" 
  "2064" -> "2065" 
  "2065" -> "2066" 
  "2067" -> "2068" 
  "2068" -> "2069" 
  "2068" -> "2070" 
  "2071" -> "2072" 
  "2072" -> "2073" 
  "2073" -> "2074" 
  "2075" -> "2076" 
  "2076" -> "2077" 
}

digraph "register" {  
"27" [label = <(METHOD,register)<SUB>53</SUB>> ]
"28" [label = <(PARAM,Class c)<SUB>53</SUB>> ]
"29" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>53</SUB>> ]
"30" [label = <(CONTROL_STRUCTURE,try,try)<SUB>54</SUB>> ]
"31" [label = <(BLOCK,try,try)<SUB>54</SUB>> ]
"32" [label = <(LOCAL,ZipExtraField ze: ANY)> ]
"33" [label = <(&lt;operator&gt;.assignment,ANY ze = (ZipExtraField) c.newInstance())<SUB>55</SUB>> ]
"34" [label = <(IDENTIFIER,ze,ANY ze = (ZipExtraField) c.newInstance())<SUB>55</SUB>> ]
"35" [label = <(&lt;operator&gt;.cast,(ZipExtraField) c.newInstance())<SUB>55</SUB>> ]
"36" [label = <(TYPE_REF,ZipExtraField,ZipExtraField)<SUB>55</SUB>> ]
"37" [label = <(newInstance,c.newInstance())<SUB>55</SUB>> ]
"38" [label = <(IDENTIFIER,c,c.newInstance())<SUB>55</SUB>> ]
"39" [label = <(put,put(ze.getHeaderId(), c))<SUB>56</SUB>> ]
"40" [label = <(&lt;operator&gt;.fieldAccess,ExtraFieldUtils.implementations)<SUB>56</SUB>> ]
"41" [label = <(IDENTIFIER,ExtraFieldUtils,put(ze.getHeaderId(), c))<SUB>56</SUB>> ]
"42" [label = <(FIELD_IDENTIFIER,implementations,implementations)<SUB>56</SUB>> ]
"43" [label = <(getHeaderId,getHeaderId())<SUB>56</SUB>> ]
"44" [label = <(IDENTIFIER,ze,getHeaderId())<SUB>56</SUB>> ]
"45" [label = <(IDENTIFIER,c,put(ze.getHeaderId(), c))<SUB>56</SUB>> ]
"46" [label = <(BLOCK,catch,catch)> ]
"47" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>57</SUB>> ]
"48" [label = <(&lt;operator&gt;.throw,throw new RuntimeException(c + &quot; doesn\'t implement ZipExtraField&quot;);)<SUB>58</SUB>> ]
"49" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>58</SUB>> ]
"50" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"51" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"52" [label = <(&lt;operator&gt;.alloc,new RuntimeException(c + &quot; doesn\'t implement ZipExtraField&quot;))<SUB>58</SUB>> ]
"53" [label = <(&lt;init&gt;,new RuntimeException(c + &quot; doesn\'t implement ZipExtraField&quot;))<SUB>58</SUB>> ]
"54" [label = <(IDENTIFIER,$obj1,new RuntimeException(c + &quot; doesn\'t implement ZipExtraField&quot;))> ]
"55" [label = <(&lt;operator&gt;.addition,c + &quot; doesn\'t implement ZipExtraField&quot;)<SUB>58</SUB>> ]
"56" [label = <(IDENTIFIER,c,c + &quot; doesn\'t implement ZipExtraField&quot;)<SUB>58</SUB>> ]
"57" [label = <(LITERAL,&quot; doesn\'t implement ZipExtraField&quot;,c + &quot; doesn\'t implement ZipExtraField&quot;)<SUB>58</SUB>> ]
"58" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"59" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>59</SUB>> ]
"60" [label = <(&lt;operator&gt;.throw,throw new RuntimeException(c + &quot; is not a concrete class&quot;);)<SUB>60</SUB>> ]
"61" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>60</SUB>> ]
"62" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"63" [label = <(IDENTIFIER,$obj2,&lt;empty&gt;)> ]
"64" [label = <(&lt;operator&gt;.alloc,new RuntimeException(c + &quot; is not a concrete class&quot;))<SUB>60</SUB>> ]
"65" [label = <(&lt;init&gt;,new RuntimeException(c + &quot; is not a concrete class&quot;))<SUB>60</SUB>> ]
"66" [label = <(IDENTIFIER,$obj2,new RuntimeException(c + &quot; is not a concrete class&quot;))> ]
"67" [label = <(&lt;operator&gt;.addition,c + &quot; is not a concrete class&quot;)<SUB>60</SUB>> ]
"68" [label = <(IDENTIFIER,c,c + &quot; is not a concrete class&quot;)<SUB>60</SUB>> ]
"69" [label = <(LITERAL,&quot; is not a concrete class&quot;,c + &quot; is not a concrete class&quot;)<SUB>60</SUB>> ]
"70" [label = <(IDENTIFIER,$obj2,&lt;empty&gt;)> ]
"71" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>61</SUB>> ]
"72" [label = <(&lt;operator&gt;.throw,throw new RuntimeException(c + &quot;\'s no-arg constructor is not public&quot;);)<SUB>62</SUB>> ]
"73" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>62</SUB>> ]
"74" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"75" [label = <(IDENTIFIER,$obj3,&lt;empty&gt;)> ]
"76" [label = <(&lt;operator&gt;.alloc,new RuntimeException(c + &quot;\'s no-arg constructor is not public&quot;))<SUB>62</SUB>> ]
"77" [label = <(&lt;init&gt;,new RuntimeException(c + &quot;\'s no-arg constructor is not public&quot;))<SUB>62</SUB>> ]
"78" [label = <(IDENTIFIER,$obj3,new RuntimeException(c + &quot;\'s no-arg constructor is not public&quot;))> ]
"79" [label = <(&lt;operator&gt;.addition,c + &quot;\'s no-arg constructor is not public&quot;)<SUB>62</SUB>> ]
"80" [label = <(IDENTIFIER,c,c + &quot;\'s no-arg constructor is not public&quot;)<SUB>62</SUB>> ]
"81" [label = <(LITERAL,&quot;\'s no-arg constructor is not public&quot;,c + &quot;\'s no-arg constructor is not public&quot;)<SUB>62</SUB>> ]
"82" [label = <(IDENTIFIER,$obj3,&lt;empty&gt;)> ]
"83" [label = <(MODIFIER,PUBLIC)> ]
"84" [label = <(MODIFIER,STATIC)> ]
"85" [label = <(METHOD_RETURN,void)<SUB>53</SUB>> ]
  "27" -> "28" 
  "27" -> "29" 
  "27" -> "83" 
  "27" -> "84" 
  "27" -> "85" 
  "29" -> "30" 
  "30" -> "31" 
  "30" -> "46" 
  "31" -> "32" 
  "31" -> "33" 
  "31" -> "39" 
  "33" -> "34" 
  "33" -> "35" 
  "35" -> "36" 
  "35" -> "37" 
  "37" -> "38" 
  "39" -> "40" 
  "39" -> "43" 
  "39" -> "45" 
  "40" -> "41" 
  "40" -> "42" 
  "43" -> "44" 
  "46" -> "47" 
  "46" -> "59" 
  "46" -> "71" 
  "47" -> "48" 
  "48" -> "49" 
  "49" -> "50" 
  "49" -> "53" 
  "49" -> "58" 
  "50" -> "51" 
  "50" -> "52" 
  "53" -> "54" 
  "53" -> "55" 
  "55" -> "56" 
  "55" -> "57" 
  "59" -> "60" 
  "60" -> "61" 
  "61" -> "62" 
  "61" -> "65" 
  "61" -> "70" 
  "62" -> "63" 
  "62" -> "64" 
  "65" -> "66" 
  "65" -> "67" 
  "67" -> "68" 
  "67" -> "69" 
  "71" -> "72" 
  "72" -> "73" 
  "73" -> "74" 
  "73" -> "77" 
  "73" -> "82" 
  "74" -> "75" 
  "74" -> "76" 
  "77" -> "78" 
  "77" -> "79" 
  "79" -> "80" 
  "79" -> "81" 
}

digraph "quoteArgument" {  
"623" [label = <(METHOD,quoteArgument)<SUB>345</SUB>> ]
"624" [label = <(PARAM,String argument)<SUB>345</SUB>> ]
"625" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>345</SUB>> ]
"626" [label = <(CONTROL_STRUCTURE,if (argument.indexOf(&quot;\&quot;&quot;) &gt; -1),if (argument.indexOf(&quot;\&quot;&quot;) &gt; -1))<SUB>346</SUB>> ]
"627" [label = <(&lt;operator&gt;.greaterThan,argument.indexOf(&quot;\&quot;&quot;) &gt; -1)<SUB>346</SUB>> ]
"628" [label = <(indexOf,argument.indexOf(&quot;\&quot;&quot;))<SUB>346</SUB>> ]
"629" [label = <(IDENTIFIER,argument,argument.indexOf(&quot;\&quot;&quot;))<SUB>346</SUB>> ]
"630" [label = <(LITERAL,&quot;\&quot;&quot;,argument.indexOf(&quot;\&quot;&quot;))<SUB>346</SUB>> ]
"631" [label = <(&lt;operator&gt;.minus,-1)<SUB>346</SUB>> ]
"632" [label = <(LITERAL,1,-1)<SUB>346</SUB>> ]
"633" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>346</SUB>> ]
"634" [label = <(CONTROL_STRUCTURE,if (argument.indexOf(&quot;\'&quot;) &gt; -1),if (argument.indexOf(&quot;\'&quot;) &gt; -1))<SUB>347</SUB>> ]
"635" [label = <(&lt;operator&gt;.greaterThan,argument.indexOf(&quot;\'&quot;) &gt; -1)<SUB>347</SUB>> ]
"636" [label = <(indexOf,argument.indexOf(&quot;\'&quot;))<SUB>347</SUB>> ]
"637" [label = <(IDENTIFIER,argument,argument.indexOf(&quot;\'&quot;))<SUB>347</SUB>> ]
"638" [label = <(LITERAL,&quot;\'&quot;,argument.indexOf(&quot;\'&quot;))<SUB>347</SUB>> ]
"639" [label = <(&lt;operator&gt;.minus,-1)<SUB>347</SUB>> ]
"640" [label = <(LITERAL,1,-1)<SUB>347</SUB>> ]
"641" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>347</SUB>> ]
"642" [label = <(&lt;operator&gt;.throw,throw new BuildException(&quot;Can\'t handle single and double&quot; + &quot; quotes in same argument&quot;);)<SUB>348</SUB>> ]
"643" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>348</SUB>> ]
"644" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"645" [label = <(IDENTIFIER,$obj5,&lt;empty&gt;)> ]
"646" [label = <(&lt;operator&gt;.alloc,new BuildException(&quot;Can\'t handle single and double&quot; + &quot; quotes in same argument&quot;))<SUB>348</SUB>> ]
"647" [label = <(&lt;init&gt;,new BuildException(&quot;Can\'t handle single and double&quot; + &quot; quotes in same argument&quot;))<SUB>348</SUB>> ]
"648" [label = <(IDENTIFIER,$obj5,new BuildException(&quot;Can\'t handle single and double&quot; + &quot; quotes in same argument&quot;))> ]
"649" [label = <(&lt;operator&gt;.addition,&quot;Can\'t handle single and double&quot; + &quot; quotes in same argument&quot;)<SUB>348</SUB>> ]
"650" [label = <(LITERAL,&quot;Can\'t handle single and double&quot;,&quot;Can\'t handle single and double&quot; + &quot; quotes in same argument&quot;)<SUB>348</SUB>> ]
"651" [label = <(LITERAL,&quot; quotes in same argument&quot;,&quot;Can\'t handle single and double&quot; + &quot; quotes in same argument&quot;)<SUB>349</SUB>> ]
"652" [label = <(IDENTIFIER,$obj5,&lt;empty&gt;)> ]
"653" [label = <(CONTROL_STRUCTURE,else,else)<SUB>350</SUB>> ]
"654" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>350</SUB>> ]
"655" [label = <(RETURN,return '\'' + argument + '\'';,return '\'' + argument + '\'';)<SUB>351</SUB>> ]
"656" [label = <(&lt;operator&gt;.addition,'\'' + argument + '\'')<SUB>351</SUB>> ]
"657" [label = <(&lt;operator&gt;.addition,'\'' + argument)<SUB>351</SUB>> ]
"658" [label = <(LITERAL,'\'','\'' + argument)<SUB>351</SUB>> ]
"659" [label = <(IDENTIFIER,argument,'\'' + argument)<SUB>351</SUB>> ]
"660" [label = <(LITERAL,'\'','\'' + argument + '\'')<SUB>351</SUB>> ]
"661" [label = <(CONTROL_STRUCTURE,else,else)<SUB>353</SUB>> ]
"662" [label = <(CONTROL_STRUCTURE,if (argument.indexOf(&quot;\'&quot;) &gt; -1 || argument.indexOf(&quot; &quot;) &gt; -1 || (IS_WIN_9X &amp;&amp; argument.indexOf(';') != -1)),if (argument.indexOf(&quot;\'&quot;) &gt; -1 || argument.indexOf(&quot; &quot;) &gt; -1 || (IS_WIN_9X &amp;&amp; argument.indexOf(';') != -1)))<SUB>353</SUB>> ]
"663" [label = <(&lt;operator&gt;.logicalOr,argument.indexOf(&quot;\'&quot;) &gt; -1 || argument.indexOf(&quot; &quot;) &gt; -1 || (IS_WIN_9X &amp;&amp; argument.indexOf(';') != -1))<SUB>353</SUB>> ]
"664" [label = <(&lt;operator&gt;.logicalOr,argument.indexOf(&quot;\'&quot;) &gt; -1 || argument.indexOf(&quot; &quot;) &gt; -1)<SUB>353</SUB>> ]
"665" [label = <(&lt;operator&gt;.greaterThan,argument.indexOf(&quot;\'&quot;) &gt; -1)<SUB>353</SUB>> ]
"666" [label = <(indexOf,argument.indexOf(&quot;\'&quot;))<SUB>353</SUB>> ]
"667" [label = <(IDENTIFIER,argument,argument.indexOf(&quot;\'&quot;))<SUB>353</SUB>> ]
"668" [label = <(LITERAL,&quot;\'&quot;,argument.indexOf(&quot;\'&quot;))<SUB>353</SUB>> ]
"669" [label = <(&lt;operator&gt;.minus,-1)<SUB>353</SUB>> ]
"670" [label = <(LITERAL,1,-1)<SUB>353</SUB>> ]
"671" [label = <(&lt;operator&gt;.greaterThan,argument.indexOf(&quot; &quot;) &gt; -1)<SUB>354</SUB>> ]
"672" [label = <(indexOf,argument.indexOf(&quot; &quot;))<SUB>354</SUB>> ]
"673" [label = <(IDENTIFIER,argument,argument.indexOf(&quot; &quot;))<SUB>354</SUB>> ]
"674" [label = <(LITERAL,&quot; &quot;,argument.indexOf(&quot; &quot;))<SUB>354</SUB>> ]
"675" [label = <(&lt;operator&gt;.minus,-1)<SUB>354</SUB>> ]
"676" [label = <(LITERAL,1,-1)<SUB>354</SUB>> ]
"677" [label = <(&lt;operator&gt;.logicalAnd,IS_WIN_9X &amp;&amp; argument.indexOf(';') != -1)<SUB>356</SUB>> ]
"678" [label = <(&lt;operator&gt;.fieldAccess,Commandline.IS_WIN_9X)<SUB>356</SUB>> ]
"679" [label = <(IDENTIFIER,Commandline,IS_WIN_9X &amp;&amp; argument.indexOf(';') != -1)<SUB>356</SUB>> ]
"680" [label = <(FIELD_IDENTIFIER,IS_WIN_9X,IS_WIN_9X)<SUB>356</SUB>> ]
"681" [label = <(&lt;operator&gt;.notEquals,argument.indexOf(';') != -1)<SUB>356</SUB>> ]
"682" [label = <(indexOf,argument.indexOf(';'))<SUB>356</SUB>> ]
"683" [label = <(IDENTIFIER,argument,argument.indexOf(';'))<SUB>356</SUB>> ]
"684" [label = <(LITERAL,';',argument.indexOf(';'))<SUB>356</SUB>> ]
"685" [label = <(&lt;operator&gt;.minus,-1)<SUB>356</SUB>> ]
"686" [label = <(LITERAL,1,-1)<SUB>356</SUB>> ]
"687" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>356</SUB>> ]
"688" [label = <(RETURN,return '\&quot;' + argument + '\&quot;';,return '\&quot;' + argument + '\&quot;';)<SUB>357</SUB>> ]
"689" [label = <(&lt;operator&gt;.addition,'\&quot;' + argument + '\&quot;')<SUB>357</SUB>> ]
"690" [label = <(&lt;operator&gt;.addition,'\&quot;' + argument)<SUB>357</SUB>> ]
"691" [label = <(LITERAL,'\&quot;','\&quot;' + argument)<SUB>357</SUB>> ]
"692" [label = <(IDENTIFIER,argument,'\&quot;' + argument)<SUB>357</SUB>> ]
"693" [label = <(LITERAL,'\&quot;','\&quot;' + argument + '\&quot;')<SUB>357</SUB>> ]
"694" [label = <(CONTROL_STRUCTURE,else,else)<SUB>358</SUB>> ]
"695" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>358</SUB>> ]
"696" [label = <(RETURN,return argument;,return argument;)<SUB>359</SUB>> ]
"697" [label = <(IDENTIFIER,argument,return argument;)<SUB>359</SUB>> ]
"698" [label = <(MODIFIER,PUBLIC)> ]
"699" [label = <(MODIFIER,STATIC)> ]
"700" [label = <(METHOD_RETURN,java.lang.String)<SUB>345</SUB>> ]
  "623" -> "624" 
  "623" -> "625" 
  "623" -> "698" 
  "623" -> "699" 
  "623" -> "700" 
  "625" -> "626" 
  "626" -> "627" 
  "626" -> "633" 
  "626" -> "661" 
  "627" -> "628" 
  "627" -> "631" 
  "628" -> "629" 
  "628" -> "630" 
  "631" -> "632" 
  "633" -> "634" 
  "634" -> "635" 
  "634" -> "641" 
  "634" -> "653" 
  "635" -> "636" 
  "635" -> "639" 
  "636" -> "637" 
  "636" -> "638" 
  "639" -> "640" 
  "641" -> "642" 
  "642" -> "643" 
  "643" -> "644" 
  "643" -> "647" 
  "643" -> "652" 
  "644" -> "645" 
  "644" -> "646" 
  "647" -> "648" 
  "647" -> "649" 
  "649" -> "650" 
  "649" -> "651" 
  "653" -> "654" 
  "654" -> "655" 
  "655" -> "656" 
  "656" -> "657" 
  "656" -> "660" 
  "657" -> "658" 
  "657" -> "659" 
  "661" -> "662" 
  "662" -> "663" 
  "662" -> "687" 
  "662" -> "694" 
  "663" -> "664" 
  "663" -> "677" 
  "664" -> "665" 
  "664" -> "671" 
  "665" -> "666" 
  "665" -> "669" 
  "666" -> "667" 
  "666" -> "668" 
  "669" -> "670" 
  "671" -> "672" 
  "671" -> "675" 
  "672" -> "673" 
  "672" -> "674" 
  "675" -> "676" 
  "677" -> "678" 
  "677" -> "681" 
  "678" -> "679" 
  "678" -> "680" 
  "681" -> "682" 
  "681" -> "685" 
  "682" -> "683" 
  "682" -> "684" 
  "685" -> "686" 
  "687" -> "688" 
  "688" -> "689" 
  "689" -> "690" 
  "689" -> "693" 
  "690" -> "691" 
  "690" -> "692" 
  "694" -> "695" 
  "695" -> "696" 
  "696" -> "697" 
}

digraph "decodeHex" {  
"1481" [label = <(METHOD,decodeHex)<SUB>596</SUB>> ]
"1482" [label = <(PARAM,char[] data)<SUB>596</SUB>> ]
"1483" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>596</SUB>> ]
"1484" [label = <(LOCAL,int l: int)> ]
"1485" [label = <(&lt;operator&gt;.assignment,int l = data.length)<SUB>597</SUB>> ]
"1486" [label = <(IDENTIFIER,l,int l = data.length)<SUB>597</SUB>> ]
"1487" [label = <(&lt;operator&gt;.fieldAccess,data.length)<SUB>597</SUB>> ]
"1488" [label = <(IDENTIFIER,data,int l = data.length)<SUB>597</SUB>> ]
"1489" [label = <(FIELD_IDENTIFIER,length,length)<SUB>597</SUB>> ]
"1490" [label = <(CONTROL_STRUCTURE,if ((l &amp; 0x01) != 0),if ((l &amp; 0x01) != 0))<SUB>599</SUB>> ]
"1491" [label = <(&lt;operator&gt;.notEquals,(l &amp; 0x01) != 0)<SUB>599</SUB>> ]
"1492" [label = <(&lt;operator&gt;.and,l &amp; 0x01)<SUB>599</SUB>> ]
"1493" [label = <(IDENTIFIER,l,l &amp; 0x01)<SUB>599</SUB>> ]
"1494" [label = <(LITERAL,0x01,l &amp; 0x01)<SUB>599</SUB>> ]
"1495" [label = <(LITERAL,0,(l &amp; 0x01) != 0)<SUB>599</SUB>> ]
"1496" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>599</SUB>> ]
"1497" [label = <(&lt;operator&gt;.throw,throw new BuildException(&quot;odd number of characters.&quot;);)<SUB>600</SUB>> ]
"1498" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>600</SUB>> ]
"1499" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"1500" [label = <(IDENTIFIER,$obj29,&lt;empty&gt;)> ]
"1501" [label = <(&lt;operator&gt;.alloc,new BuildException(&quot;odd number of characters.&quot;))<SUB>600</SUB>> ]
"1502" [label = <(&lt;init&gt;,new BuildException(&quot;odd number of characters.&quot;))<SUB>600</SUB>> ]
"1503" [label = <(IDENTIFIER,$obj29,new BuildException(&quot;odd number of characters.&quot;))> ]
"1504" [label = <(LITERAL,&quot;odd number of characters.&quot;,new BuildException(&quot;odd number of characters.&quot;))<SUB>600</SUB>> ]
"1505" [label = <(IDENTIFIER,$obj29,&lt;empty&gt;)> ]
"1506" [label = <(LOCAL,byte[] out: byte[])> ]
"1507" [label = <(&lt;operator&gt;.assignment,byte[] out = new byte[l &gt;&gt; 1])<SUB>603</SUB>> ]
"1508" [label = <(IDENTIFIER,out,byte[] out = new byte[l &gt;&gt; 1])<SUB>603</SUB>> ]
"1509" [label = <(&lt;operator&gt;.alloc,new byte[l &gt;&gt; 1])> ]
"1510" [label = <(&lt;operator&gt;.logicalShiftRight,l &gt;&gt; 1)<SUB>603</SUB>> ]
"1511" [label = <(IDENTIFIER,l,l &gt;&gt; 1)<SUB>603</SUB>> ]
"1512" [label = <(LITERAL,1,l &gt;&gt; 1)<SUB>603</SUB>> ]
"1513" [label = <(CONTROL_STRUCTURE,for (int i = 0, j = 0; Some(j &lt; l); i++),for (int i = 0, j = 0; Some(j &lt; l); i++))<SUB>606</SUB>> ]
"1514" [label = <(LOCAL,int i: int)> ]
"1515" [label = <(LOCAL,int j: int)> ]
"1516" [label = <(&lt;operator&gt;.assignment,int i = 0)<SUB>606</SUB>> ]
"1517" [label = <(IDENTIFIER,i,int i = 0)<SUB>606</SUB>> ]
"1518" [label = <(LITERAL,0,int i = 0)<SUB>606</SUB>> ]
"1519" [label = <(&lt;operator&gt;.assignment,int j = 0)<SUB>606</SUB>> ]
"1520" [label = <(IDENTIFIER,j,int j = 0)<SUB>606</SUB>> ]
"1521" [label = <(LITERAL,0,int j = 0)<SUB>606</SUB>> ]
"1522" [label = <(&lt;operator&gt;.lessThan,j &lt; l)<SUB>606</SUB>> ]
"1523" [label = <(IDENTIFIER,j,j &lt; l)<SUB>606</SUB>> ]
"1524" [label = <(IDENTIFIER,l,j &lt; l)<SUB>606</SUB>> ]
"1525" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>606</SUB>> ]
"1526" [label = <(IDENTIFIER,i,i++)<SUB>606</SUB>> ]
"1527" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>606</SUB>> ]
"1528" [label = <(LOCAL,int f: int)> ]
"1529" [label = <(&lt;operator&gt;.assignment,int f = Character.digit(data[j++], 16) &lt;&lt; 4)<SUB>607</SUB>> ]
"1530" [label = <(IDENTIFIER,f,int f = Character.digit(data[j++], 16) &lt;&lt; 4)<SUB>607</SUB>> ]
"1531" [label = <(&lt;operator&gt;.shiftLeft,Character.digit(data[j++], 16) &lt;&lt; 4)<SUB>607</SUB>> ]
"1532" [label = <(digit,Character.digit(data[j++], 16))<SUB>607</SUB>> ]
"1533" [label = <(IDENTIFIER,Character,Character.digit(data[j++], 16))<SUB>607</SUB>> ]
"1534" [label = <(&lt;operator&gt;.indexAccess,data[j++])<SUB>607</SUB>> ]
"1535" [label = <(IDENTIFIER,data,Character.digit(data[j++], 16))<SUB>607</SUB>> ]
"1536" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>607</SUB>> ]
"1537" [label = <(IDENTIFIER,j,j++)<SUB>607</SUB>> ]
"1538" [label = <(LITERAL,16,Character.digit(data[j++], 16))<SUB>607</SUB>> ]
"1539" [label = <(LITERAL,4,Character.digit(data[j++], 16) &lt;&lt; 4)<SUB>607</SUB>> ]
"1540" [label = <(&lt;operator&gt;.assignment,f = f | Character.digit(data[j++], 16))<SUB>608</SUB>> ]
"1541" [label = <(IDENTIFIER,f,f = f | Character.digit(data[j++], 16))<SUB>608</SUB>> ]
"1542" [label = <(&lt;operator&gt;.or,f | Character.digit(data[j++], 16))<SUB>608</SUB>> ]
"1543" [label = <(IDENTIFIER,f,f | Character.digit(data[j++], 16))<SUB>608</SUB>> ]
"1544" [label = <(digit,Character.digit(data[j++], 16))<SUB>608</SUB>> ]
"1545" [label = <(IDENTIFIER,Character,Character.digit(data[j++], 16))<SUB>608</SUB>> ]
"1546" [label = <(&lt;operator&gt;.indexAccess,data[j++])<SUB>608</SUB>> ]
"1547" [label = <(IDENTIFIER,data,Character.digit(data[j++], 16))<SUB>608</SUB>> ]
"1548" [label = <(&lt;operator&gt;.postIncrement,j++)<SUB>608</SUB>> ]
"1549" [label = <(IDENTIFIER,j,j++)<SUB>608</SUB>> ]
"1550" [label = <(LITERAL,16,Character.digit(data[j++], 16))<SUB>608</SUB>> ]
"1551" [label = <(&lt;operator&gt;.assignment,out[i] = (byte) (f &amp; 0xFF))<SUB>609</SUB>> ]
"1552" [label = <(&lt;operator&gt;.indexAccess,out[i])<SUB>609</SUB>> ]
"1553" [label = <(IDENTIFIER,out,out[i] = (byte) (f &amp; 0xFF))<SUB>609</SUB>> ]
"1554" [label = <(IDENTIFIER,i,out[i] = (byte) (f &amp; 0xFF))<SUB>609</SUB>> ]
"1555" [label = <(&lt;operator&gt;.cast,(byte) (f &amp; 0xFF))<SUB>609</SUB>> ]
"1556" [label = <(TYPE_REF,byte,byte)<SUB>609</SUB>> ]
"1557" [label = <(&lt;operator&gt;.and,f &amp; 0xFF)<SUB>609</SUB>> ]
"1558" [label = <(IDENTIFIER,f,f &amp; 0xFF)<SUB>609</SUB>> ]
"1559" [label = <(LITERAL,0xFF,f &amp; 0xFF)<SUB>609</SUB>> ]
"1560" [label = <(RETURN,return out;,return out;)<SUB>612</SUB>> ]
"1561" [label = <(IDENTIFIER,out,return out;)<SUB>612</SUB>> ]
"1562" [label = <(MODIFIER,PUBLIC)> ]
"1563" [label = <(MODIFIER,STATIC)> ]
"1564" [label = <(METHOD_RETURN,byte[])<SUB>596</SUB>> ]
  "1481" -> "1482" 
  "1481" -> "1483" 
  "1481" -> "1562" 
  "1481" -> "1563" 
  "1481" -> "1564" 
  "1483" -> "1484" 
  "1483" -> "1485" 
  "1483" -> "1490" 
  "1483" -> "1506" 
  "1483" -> "1507" 
  "1483" -> "1513" 
  "1483" -> "1560" 
  "1485" -> "1486" 
  "1485" -> "1487" 
  "1487" -> "1488" 
  "1487" -> "1489" 
  "1490" -> "1491" 
  "1490" -> "1496" 
  "1491" -> "1492" 
  "1491" -> "1495" 
  "1492" -> "1493" 
  "1492" -> "1494" 
  "1496" -> "1497" 
  "1497" -> "1498" 
  "1498" -> "1499" 
  "1498" -> "1502" 
  "1498" -> "1505" 
  "1499" -> "1500" 
  "1499" -> "1501" 
  "1502" -> "1503" 
  "1502" -> "1504" 
  "1507" -> "1508" 
  "1507" -> "1509" 
  "1509" -> "1510" 
  "1510" -> "1511" 
  "1510" -> "1512" 
  "1513" -> "1514" 
  "1513" -> "1515" 
  "1513" -> "1516" 
  "1513" -> "1519" 
  "1513" -> "1522" 
  "1513" -> "1525" 
  "1513" -> "1527" 
  "1516" -> "1517" 
  "1516" -> "1518" 
  "1519" -> "1520" 
  "1519" -> "1521" 
  "1522" -> "1523" 
  "1522" -> "1524" 
  "1525" -> "1526" 
  "1527" -> "1528" 
  "1527" -> "1529" 
  "1527" -> "1540" 
  "1527" -> "1551" 
  "1529" -> "1530" 
  "1529" -> "1531" 
  "1531" -> "1532" 
  "1531" -> "1539" 
  "1532" -> "1533" 
  "1532" -> "1534" 
  "1532" -> "1538" 
  "1534" -> "1535" 
  "1534" -> "1536" 
  "1536" -> "1537" 
  "1540" -> "1541" 
  "1540" -> "1542" 
  "1542" -> "1543" 
  "1542" -> "1544" 
  "1544" -> "1545" 
  "1544" -> "1546" 
  "1544" -> "1550" 
  "1546" -> "1547" 
  "1546" -> "1548" 
  "1548" -> "1549" 
  "1551" -> "1552" 
  "1551" -> "1555" 
  "1552" -> "1553" 
  "1552" -> "1554" 
  "1555" -> "1556" 
  "1555" -> "1557" 
  "1557" -> "1558" 
  "1557" -> "1559" 
  "1560" -> "1561" 
}

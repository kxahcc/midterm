digraph "eval" {  
"48" [label = <(METHOD,eval)<SUB>72</SUB>> ]
"49" [label = <(PARAM,this)<SUB>72</SUB>> ]
"50" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>72</SUB>> ]
"51" [label = <(CONTROL_STRUCTURE,if (arg1 == null || arg2 == null),if (arg1 == null || arg2 == null))<SUB>73</SUB>> ]
"52" [label = <(&lt;operator&gt;.logicalOr,arg1 == null || arg2 == null)<SUB>73</SUB>> ]
"53" [label = <(&lt;operator&gt;.equals,arg1 == null)<SUB>73</SUB>> ]
"54" [label = <(&lt;operator&gt;.fieldAccess,this.arg1)<SUB>73</SUB>> ]
"55" [label = <(IDENTIFIER,this,arg1 == null)<SUB>73</SUB>> ]
"56" [label = <(FIELD_IDENTIFIER,arg1,arg1)<SUB>73</SUB>> ]
"57" [label = <(LITERAL,null,arg1 == null)<SUB>73</SUB>> ]
"58" [label = <(&lt;operator&gt;.equals,arg2 == null)<SUB>73</SUB>> ]
"59" [label = <(&lt;operator&gt;.fieldAccess,this.arg2)<SUB>73</SUB>> ]
"60" [label = <(IDENTIFIER,this,arg2 == null)<SUB>73</SUB>> ]
"61" [label = <(FIELD_IDENTIFIER,arg2,arg2)<SUB>73</SUB>> ]
"62" [label = <(LITERAL,null,arg2 == null)<SUB>73</SUB>> ]
"63" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>73</SUB>> ]
"64" [label = <(&lt;operator&gt;.throw,throw new BuildException(&quot;both arg1 and arg2 are required in equals&quot;);)<SUB>74</SUB>> ]
"65" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>74</SUB>> ]
"66" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"67" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"68" [label = <(&lt;operator&gt;.alloc,new BuildException(&quot;both arg1 and arg2 are required in equals&quot;))<SUB>74</SUB>> ]
"69" [label = <(&lt;init&gt;,new BuildException(&quot;both arg1 and arg2 are required in equals&quot;))<SUB>74</SUB>> ]
"70" [label = <(IDENTIFIER,$obj0,new BuildException(&quot;both arg1 and arg2 are required in equals&quot;))> ]
"71" [label = <(LITERAL,&quot;both arg1 and arg2 are required in equals&quot;,new BuildException(&quot;both arg1 and arg2 are required in equals&quot;))<SUB>74</SUB>> ]
"72" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"73" [label = <(RETURN,return arg1.equals(arg2);,return arg1.equals(arg2);)<SUB>76</SUB>> ]
"74" [label = <(equals,arg1.equals(arg2))<SUB>76</SUB>> ]
"75" [label = <(&lt;operator&gt;.fieldAccess,this.arg1)<SUB>76</SUB>> ]
"76" [label = <(IDENTIFIER,this,arg1.equals(arg2))<SUB>76</SUB>> ]
"77" [label = <(FIELD_IDENTIFIER,arg1,arg1)<SUB>76</SUB>> ]
"78" [label = <(&lt;operator&gt;.fieldAccess,this.arg2)<SUB>76</SUB>> ]
"79" [label = <(IDENTIFIER,this,arg1.equals(arg2))<SUB>76</SUB>> ]
"80" [label = <(FIELD_IDENTIFIER,arg2,arg2)<SUB>76</SUB>> ]
"81" [label = <(MODIFIER,PUBLIC)> ]
"82" [label = <(MODIFIER,VIRTUAL)> ]
"83" [label = <(METHOD_RETURN,boolean)<SUB>72</SUB>> ]
  "48" -> "49" 
  "48" -> "50" 
  "48" -> "81" 
  "48" -> "82" 
  "48" -> "83" 
  "50" -> "51" 
  "50" -> "73" 
  "51" -> "52" 
  "51" -> "63" 
  "52" -> "53" 
  "52" -> "58" 
  "53" -> "54" 
  "53" -> "57" 
  "54" -> "55" 
  "54" -> "56" 
  "58" -> "59" 
  "58" -> "62" 
  "59" -> "60" 
  "59" -> "61" 
  "63" -> "64" 
  "64" -> "65" 
  "65" -> "66" 
  "65" -> "69" 
  "65" -> "72" 
  "66" -> "67" 
  "66" -> "68" 
  "69" -> "70" 
  "69" -> "71" 
  "73" -> "74" 
  "74" -> "75" 
  "74" -> "78" 
  "75" -> "76" 
  "75" -> "77" 
  "78" -> "79" 
  "78" -> "80" 
}

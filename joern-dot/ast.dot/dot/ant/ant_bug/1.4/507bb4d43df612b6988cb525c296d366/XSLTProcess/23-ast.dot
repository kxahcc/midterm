digraph "getExpression" {  
"1087" [label = <(METHOD,getExpression)<SUB>442</SUB>> ]
"1088" [label = <(PARAM,this)<SUB>442</SUB>> ]
"1089" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>442</SUB>> ]
"1090" [label = <(CONTROL_STRUCTURE,if (expression == null),if (expression == null))<SUB>443</SUB>> ]
"1091" [label = <(&lt;operator&gt;.equals,expression == null)<SUB>443</SUB>> ]
"1092" [label = <(&lt;operator&gt;.fieldAccess,this.expression)<SUB>443</SUB>> ]
"1093" [label = <(IDENTIFIER,this,expression == null)<SUB>443</SUB>> ]
"1094" [label = <(FIELD_IDENTIFIER,expression,expression)<SUB>443</SUB>> ]
"1095" [label = <(LITERAL,null,expression == null)<SUB>443</SUB>> ]
"1096" [label = <(&lt;operator&gt;.throw,throw new BuildException(&quot;Expression attribute is missing.&quot;);)<SUB>443</SUB>> ]
"1097" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>443</SUB>> ]
"1098" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"1099" [label = <(IDENTIFIER,$obj17,&lt;empty&gt;)> ]
"1100" [label = <(&lt;operator&gt;.alloc,new BuildException(&quot;Expression attribute is missing.&quot;))<SUB>443</SUB>> ]
"1101" [label = <(&lt;init&gt;,new BuildException(&quot;Expression attribute is missing.&quot;))<SUB>443</SUB>> ]
"1102" [label = <(IDENTIFIER,$obj17,new BuildException(&quot;Expression attribute is missing.&quot;))> ]
"1103" [label = <(LITERAL,&quot;Expression attribute is missing.&quot;,new BuildException(&quot;Expression attribute is missing.&quot;))<SUB>443</SUB>> ]
"1104" [label = <(IDENTIFIER,$obj17,&lt;empty&gt;)> ]
"1105" [label = <(RETURN,return expression;,return expression;)<SUB>444</SUB>> ]
"1106" [label = <(&lt;operator&gt;.fieldAccess,this.expression)<SUB>444</SUB>> ]
"1107" [label = <(IDENTIFIER,this,return expression;)<SUB>444</SUB>> ]
"1108" [label = <(FIELD_IDENTIFIER,expression,expression)<SUB>444</SUB>> ]
"1109" [label = <(MODIFIER,PUBLIC)> ]
"1110" [label = <(MODIFIER,VIRTUAL)> ]
"1111" [label = <(METHOD_RETURN,java.lang.String)<SUB>442</SUB>> ]
  "1087" -> "1088" 
  "1087" -> "1089" 
  "1087" -> "1109" 
  "1087" -> "1110" 
  "1087" -> "1111" 
  "1089" -> "1090" 
  "1089" -> "1105" 
  "1090" -> "1091" 
  "1090" -> "1096" 
  "1091" -> "1092" 
  "1091" -> "1095" 
  "1092" -> "1093" 
  "1092" -> "1094" 
  "1096" -> "1097" 
  "1097" -> "1098" 
  "1097" -> "1101" 
  "1097" -> "1104" 
  "1098" -> "1099" 
  "1098" -> "1100" 
  "1101" -> "1102" 
  "1101" -> "1103" 
  "1105" -> "1106" 
  "1106" -> "1107" 
  "1106" -> "1108" 
}

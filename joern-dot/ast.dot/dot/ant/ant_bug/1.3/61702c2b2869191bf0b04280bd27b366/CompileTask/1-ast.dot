digraph "init" {  
"33" [label = <(METHOD,init)<SUB>88</SUB>> ]
"6" [label = <(PARAM,this)<SUB>88</SUB>> ]
"34" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>88</SUB>> ]
"35" [label = <(log,log(&quot;!! CompileTask is deprecated. !!&quot;))<SUB>89</SUB>> ]
"5" [label = <(IDENTIFIER,this,log(&quot;!! CompileTask is deprecated. !!&quot;))<SUB>89</SUB>> ]
"36" [label = <(LITERAL,&quot;!! CompileTask is deprecated. !!&quot;,log(&quot;!! CompileTask is deprecated. !!&quot;))<SUB>89</SUB>> ]
"37" [label = <(log,log(&quot;Use &lt;taskdef&gt; elements nested into &lt;target&gt;s instead&quot;))<SUB>90</SUB>> ]
"7" [label = <(IDENTIFIER,this,log(&quot;Use &lt;taskdef&gt; elements nested into &lt;target&gt;s instead&quot;))<SUB>90</SUB>> ]
"38" [label = <(LITERAL,&quot;Use &lt;taskdef&gt; elements nested into &lt;target&gt;s instead&quot;,log(&quot;Use &lt;taskdef&gt; elements nested into &lt;target&gt;s instead&quot;))<SUB>90</SUB>> ]
"39" [label = <(CONTROL_STRUCTURE,for (Enumeration e = taskList.elements(); Some(e.hasMoreElements()); ),for (Enumeration e = taskList.elements(); Some(e.hasMoreElements()); ))<SUB>93</SUB>> ]
"40" [label = <(LOCAL,Enumeration e: java.util.Enumeration)> ]
"41" [label = <(&lt;operator&gt;.assignment,Enumeration e = taskList.elements())<SUB>93</SUB>> ]
"42" [label = <(IDENTIFIER,e,Enumeration e = taskList.elements())<SUB>93</SUB>> ]
"43" [label = <(elements,taskList.elements())<SUB>93</SUB>> ]
"44" [label = <(&lt;operator&gt;.fieldAccess,this.taskList)<SUB>93</SUB>> ]
"45" [label = <(IDENTIFIER,this,taskList.elements())<SUB>93</SUB>> ]
"46" [label = <(FIELD_IDENTIFIER,taskList,taskList)<SUB>93</SUB>> ]
"47" [label = <(hasMoreElements,e.hasMoreElements())<SUB>93</SUB>> ]
"48" [label = <(IDENTIFIER,e,e.hasMoreElements())<SUB>93</SUB>> ]
"49" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>93</SUB>> ]
"50" [label = <(LOCAL,Taskdef task: ANY)> ]
"51" [label = <(&lt;operator&gt;.assignment,ANY task = (Taskdef) e.nextElement())<SUB>94</SUB>> ]
"52" [label = <(IDENTIFIER,task,ANY task = (Taskdef) e.nextElement())<SUB>94</SUB>> ]
"53" [label = <(&lt;operator&gt;.cast,(Taskdef) e.nextElement())<SUB>94</SUB>> ]
"54" [label = <(TYPE_REF,Taskdef,Taskdef)<SUB>94</SUB>> ]
"55" [label = <(nextElement,e.nextElement())<SUB>94</SUB>> ]
"56" [label = <(IDENTIFIER,e,e.nextElement())<SUB>94</SUB>> ]
"57" [label = <(LOCAL,String source: java.lang.String)> ]
"58" [label = <(&lt;operator&gt;.assignment,String source = task.getClassname().replace('.', '/') + &quot;.java&quot;)<SUB>95</SUB>> ]
"59" [label = <(IDENTIFIER,source,String source = task.getClassname().replace('.', '/') + &quot;.java&quot;)<SUB>95</SUB>> ]
"60" [label = <(&lt;operator&gt;.addition,task.getClassname().replace('.', '/') + &quot;.java&quot;)<SUB>95</SUB>> ]
"61" [label = <(replace,replace('.', '/'))<SUB>95</SUB>> ]
"62" [label = <(getClassname,getClassname())<SUB>95</SUB>> ]
"63" [label = <(IDENTIFIER,task,getClassname())<SUB>95</SUB>> ]
"64" [label = <(LITERAL,'.',replace('.', '/'))<SUB>95</SUB>> ]
"65" [label = <(LITERAL,'/',replace('.', '/'))<SUB>95</SUB>> ]
"66" [label = <(LITERAL,&quot;.java&quot;,task.getClassname().replace('.', '/') + &quot;.java&quot;)<SUB>95</SUB>> ]
"67" [label = <(LOCAL,PatternSet.NameEntry include: ANY)> ]
"68" [label = <(&lt;operator&gt;.assignment,ANY include = createInclude())<SUB>96</SUB>> ]
"69" [label = <(IDENTIFIER,include,ANY include = createInclude())<SUB>96</SUB>> ]
"70" [label = <(createInclude,createInclude())<SUB>96</SUB>> ]
"71" [label = <(IDENTIFIER,super,createInclude())<SUB>96</SUB>> ]
"72" [label = <(setName,setName(&quot;**/&quot; + source))<SUB>97</SUB>> ]
"73" [label = <(IDENTIFIER,include,setName(&quot;**/&quot; + source))<SUB>97</SUB>> ]
"74" [label = <(&lt;operator&gt;.addition,&quot;**/&quot; + source)<SUB>97</SUB>> ]
"75" [label = <(LITERAL,&quot;**/&quot;,&quot;**/&quot; + source)<SUB>97</SUB>> ]
"76" [label = <(IDENTIFIER,source,&quot;**/&quot; + source)<SUB>97</SUB>> ]
"77" [label = <(init,init())<SUB>101</SUB>> ]
"78" [label = <(IDENTIFIER,super,init())<SUB>101</SUB>> ]
"79" [label = <(execute,execute())<SUB>102</SUB>> ]
"80" [label = <(IDENTIFIER,super,execute())<SUB>102</SUB>> ]
"81" [label = <(CONTROL_STRUCTURE,for (Enumeration e = taskList.elements(); Some(e.hasMoreElements()); ),for (Enumeration e = taskList.elements(); Some(e.hasMoreElements()); ))<SUB>105</SUB>> ]
"82" [label = <(LOCAL,Enumeration e: java.util.Enumeration)> ]
"83" [label = <(&lt;operator&gt;.assignment,Enumeration e = taskList.elements())<SUB>105</SUB>> ]
"84" [label = <(IDENTIFIER,e,Enumeration e = taskList.elements())<SUB>105</SUB>> ]
"85" [label = <(elements,taskList.elements())<SUB>105</SUB>> ]
"86" [label = <(&lt;operator&gt;.fieldAccess,this.taskList)<SUB>105</SUB>> ]
"87" [label = <(IDENTIFIER,this,taskList.elements())<SUB>105</SUB>> ]
"88" [label = <(FIELD_IDENTIFIER,taskList,taskList)<SUB>105</SUB>> ]
"89" [label = <(hasMoreElements,e.hasMoreElements())<SUB>105</SUB>> ]
"90" [label = <(IDENTIFIER,e,e.hasMoreElements())<SUB>105</SUB>> ]
"91" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>105</SUB>> ]
"92" [label = <(LOCAL,Taskdef task: ANY)> ]
"93" [label = <(&lt;operator&gt;.assignment,ANY task = (Taskdef) e.nextElement())<SUB>106</SUB>> ]
"94" [label = <(IDENTIFIER,task,ANY task = (Taskdef) e.nextElement())<SUB>106</SUB>> ]
"95" [label = <(&lt;operator&gt;.cast,(Taskdef) e.nextElement())<SUB>106</SUB>> ]
"96" [label = <(TYPE_REF,Taskdef,Taskdef)<SUB>106</SUB>> ]
"97" [label = <(nextElement,e.nextElement())<SUB>106</SUB>> ]
"98" [label = <(IDENTIFIER,e,e.nextElement())<SUB>106</SUB>> ]
"99" [label = <(init,init())<SUB>107</SUB>> ]
"100" [label = <(IDENTIFIER,task,init())<SUB>107</SUB>> ]
"101" [label = <(MODIFIER,PUBLIC)> ]
"102" [label = <(MODIFIER,VIRTUAL)> ]
"103" [label = <(METHOD_RETURN,void)<SUB>88</SUB>> ]
  "33" -> "6" 
  "33" -> "34" 
  "33" -> "101" 
  "33" -> "102" 
  "33" -> "103" 
  "34" -> "35" 
  "34" -> "37" 
  "34" -> "39" 
  "34" -> "77" 
  "34" -> "79" 
  "34" -> "81" 
  "35" -> "5" 
  "35" -> "36" 
  "37" -> "7" 
  "37" -> "38" 
  "39" -> "40" 
  "39" -> "41" 
  "39" -> "47" 
  "39" -> "49" 
  "41" -> "42" 
  "41" -> "43" 
  "43" -> "44" 
  "44" -> "45" 
  "44" -> "46" 
  "47" -> "48" 
  "49" -> "50" 
  "49" -> "51" 
  "49" -> "57" 
  "49" -> "58" 
  "49" -> "67" 
  "49" -> "68" 
  "49" -> "72" 
  "51" -> "52" 
  "51" -> "53" 
  "53" -> "54" 
  "53" -> "55" 
  "55" -> "56" 
  "58" -> "59" 
  "58" -> "60" 
  "60" -> "61" 
  "60" -> "66" 
  "61" -> "62" 
  "61" -> "64" 
  "61" -> "65" 
  "62" -> "63" 
  "68" -> "69" 
  "68" -> "70" 
  "70" -> "71" 
  "72" -> "73" 
  "72" -> "74" 
  "74" -> "75" 
  "74" -> "76" 
  "77" -> "78" 
  "79" -> "80" 
  "81" -> "82" 
  "81" -> "83" 
  "81" -> "89" 
  "81" -> "91" 
  "83" -> "84" 
  "83" -> "85" 
  "85" -> "86" 
  "86" -> "87" 
  "86" -> "88" 
  "89" -> "90" 
  "91" -> "92" 
  "91" -> "93" 
  "91" -> "99" 
  "93" -> "94" 
  "93" -> "95" 
  "95" -> "96" 
  "95" -> "97" 
  "97" -> "98" 
  "99" -> "100" 
}

digraph "maybeConfigure" {  
"51" [label = <(METHOD,maybeConfigure)<SUB>82</SUB>> ]
"6" [label = <(PARAM,this)<SUB>82</SUB>> ]
"52" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>82</SUB>> ]
"53" [label = <(&lt;operator&gt;.assignment,this.realTask = createTask(elementName))<SUB>83</SUB>> ]
"54" [label = <(&lt;operator&gt;.fieldAccess,this.realTask)<SUB>83</SUB>> ]
"55" [label = <(IDENTIFIER,this,this.realTask = createTask(elementName))<SUB>83</SUB>> ]
"56" [label = <(FIELD_IDENTIFIER,realTask,realTask)<SUB>83</SUB>> ]
"57" [label = <(createTask,createTask(elementName))<SUB>83</SUB>> ]
"58" [label = <(IDENTIFIER,project,createTask(elementName))<SUB>83</SUB>> ]
"59" [label = <(&lt;operator&gt;.fieldAccess,this.elementName)<SUB>83</SUB>> ]
"60" [label = <(IDENTIFIER,this,createTask(elementName))<SUB>83</SUB>> ]
"61" [label = <(FIELD_IDENTIFIER,elementName,elementName)<SUB>83</SUB>> ]
"62" [label = <(CONTROL_STRUCTURE,if (realTask == null),if (realTask == null))<SUB>84</SUB>> ]
"63" [label = <(&lt;operator&gt;.equals,realTask == null)<SUB>84</SUB>> ]
"64" [label = <(&lt;operator&gt;.fieldAccess,this.realTask)<SUB>84</SUB>> ]
"65" [label = <(IDENTIFIER,this,realTask == null)<SUB>84</SUB>> ]
"66" [label = <(FIELD_IDENTIFIER,realTask,realTask)<SUB>84</SUB>> ]
"67" [label = <(LITERAL,null,realTask == null)<SUB>84</SUB>> ]
"68" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>84</SUB>> ]
"69" [label = <(log,log(&quot;Could not create task of type: &quot; + elementName + &quot; Common solutions&quot; + &quot; are adding the task to defaults.properties and executing bin/bootstrap&quot;, Project.MSG_DEBUG))<SUB>85</SUB>> ]
"5" [label = <(IDENTIFIER,this,log(&quot;Could not create task of type: &quot; + elementName + &quot; Common solutions&quot; + &quot; are adding the task to defaults.properties and executing bin/bootstrap&quot;, Project.MSG_DEBUG))<SUB>85</SUB>> ]
"70" [label = <(&lt;operator&gt;.addition,&quot;Could not create task of type: &quot; + elementName + &quot; Common solutions&quot; + &quot; are adding the task to defaults.properties and executing bin/bootstrap&quot;)<SUB>85</SUB>> ]
"71" [label = <(&lt;operator&gt;.addition,&quot;Could not create task of type: &quot; + elementName + &quot; Common solutions&quot;)<SUB>85</SUB>> ]
"72" [label = <(&lt;operator&gt;.addition,&quot;Could not create task of type: &quot; + elementName)<SUB>85</SUB>> ]
"73" [label = <(LITERAL,&quot;Could not create task of type: &quot;,&quot;Could not create task of type: &quot; + elementName)<SUB>85</SUB>> ]
"74" [label = <(&lt;operator&gt;.fieldAccess,this.elementName)<SUB>85</SUB>> ]
"75" [label = <(IDENTIFIER,this,&quot;Could not create task of type: &quot; + elementName)<SUB>85</SUB>> ]
"76" [label = <(FIELD_IDENTIFIER,elementName,elementName)<SUB>85</SUB>> ]
"77" [label = <(LITERAL,&quot; Common solutions&quot;,&quot;Could not create task of type: &quot; + elementName + &quot; Common solutions&quot;)<SUB>85</SUB>> ]
"78" [label = <(LITERAL,&quot; are adding the task to defaults.properties and executing bin/bootstrap&quot;,&quot;Could not create task of type: &quot; + elementName + &quot; Common solutions&quot; + &quot; are adding the task to defaults.properties and executing bin/bootstrap&quot;)<SUB>86</SUB>> ]
"79" [label = <(&lt;operator&gt;.fieldAccess,Project.MSG_DEBUG)<SUB>87</SUB>> ]
"80" [label = <(IDENTIFIER,Project,log(&quot;Could not create task of type: &quot; + elementName + &quot; Common solutions&quot; + &quot; are adding the task to defaults.properties and executing bin/bootstrap&quot;, Project.MSG_DEBUG))<SUB>87</SUB>> ]
"81" [label = <(FIELD_IDENTIFIER,MSG_DEBUG,MSG_DEBUG)<SUB>87</SUB>> ]
"82" [label = <(&lt;operator&gt;.throw,throw new BuildException(&quot;Could not create task of type: &quot; + elementName + &quot;. Common solutions are to use taskdef to declare&quot; + &quot; your task, or, if this is an optional task,&quot; + &quot; to put the optional.jar in the lib directory of&quot; + &quot; your ant installation (ANT_HOME).&quot;, location);)<SUB>88</SUB>> ]
"83" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>88</SUB>> ]
"84" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"85" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"86" [label = <(&lt;operator&gt;.alloc,new BuildException(&quot;Could not create task of type: &quot; + elementName + &quot;. Common solutions are to use taskdef to declare&quot; + &quot; your task, or, if this is an optional task,&quot; + &quot; to put the optional.jar in the lib directory of&quot; + &quot; your ant installation (ANT_HOME).&quot;, location))<SUB>88</SUB>> ]
"87" [label = <(&lt;init&gt;,new BuildException(&quot;Could not create task of type: &quot; + elementName + &quot;. Common solutions are to use taskdef to declare&quot; + &quot; your task, or, if this is an optional task,&quot; + &quot; to put the optional.jar in the lib directory of&quot; + &quot; your ant installation (ANT_HOME).&quot;, location))<SUB>88</SUB>> ]
"88" [label = <(IDENTIFIER,$obj1,new BuildException(&quot;Could not create task of type: &quot; + elementName + &quot;. Common solutions are to use taskdef to declare&quot; + &quot; your task, or, if this is an optional task,&quot; + &quot; to put the optional.jar in the lib directory of&quot; + &quot; your ant installation (ANT_HOME).&quot;, location))> ]
"89" [label = <(&lt;operator&gt;.addition,&quot;Could not create task of type: &quot; + elementName + &quot;. Common solutions are to use taskdef to declare&quot; + &quot; your task, or, if this is an optional task,&quot; + &quot; to put the optional.jar in the lib directory of&quot; + &quot; your ant installation (ANT_HOME).&quot;)<SUB>88</SUB>> ]
"90" [label = <(&lt;operator&gt;.addition,&quot;Could not create task of type: &quot; + elementName + &quot;. Common solutions are to use taskdef to declare&quot; + &quot; your task, or, if this is an optional task,&quot; + &quot; to put the optional.jar in the lib directory of&quot;)<SUB>88</SUB>> ]
"91" [label = <(&lt;operator&gt;.addition,&quot;Could not create task of type: &quot; + elementName + &quot;. Common solutions are to use taskdef to declare&quot; + &quot; your task, or, if this is an optional task,&quot;)<SUB>88</SUB>> ]
"92" [label = <(&lt;operator&gt;.addition,&quot;Could not create task of type: &quot; + elementName + &quot;. Common solutions are to use taskdef to declare&quot;)<SUB>88</SUB>> ]
"93" [label = <(&lt;operator&gt;.addition,&quot;Could not create task of type: &quot; + elementName)<SUB>88</SUB>> ]
"94" [label = <(LITERAL,&quot;Could not create task of type: &quot;,&quot;Could not create task of type: &quot; + elementName)<SUB>88</SUB>> ]
"95" [label = <(&lt;operator&gt;.fieldAccess,this.elementName)<SUB>88</SUB>> ]
"96" [label = <(IDENTIFIER,this,&quot;Could not create task of type: &quot; + elementName)<SUB>88</SUB>> ]
"97" [label = <(FIELD_IDENTIFIER,elementName,elementName)<SUB>88</SUB>> ]
"98" [label = <(LITERAL,&quot;. Common solutions are to use taskdef to declare&quot;,&quot;Could not create task of type: &quot; + elementName + &quot;. Common solutions are to use taskdef to declare&quot;)<SUB>89</SUB>> ]
"99" [label = <(LITERAL,&quot; your task, or, if this is an optional task,&quot;,&quot;Could not create task of type: &quot; + elementName + &quot;. Common solutions are to use taskdef to declare&quot; + &quot; your task, or, if this is an optional task,&quot;)<SUB>90</SUB>> ]
"100" [label = <(LITERAL,&quot; to put the optional.jar in the lib directory of&quot;,&quot;Could not create task of type: &quot; + elementName + &quot;. Common solutions are to use taskdef to declare&quot; + &quot; your task, or, if this is an optional task,&quot; + &quot; to put the optional.jar in the lib directory of&quot;)<SUB>91</SUB>> ]
"101" [label = <(LITERAL,&quot; your ant installation (ANT_HOME).&quot;,&quot;Could not create task of type: &quot; + elementName + &quot;. Common solutions are to use taskdef to declare&quot; + &quot; your task, or, if this is an optional task,&quot; + &quot; to put the optional.jar in the lib directory of&quot; + &quot; your ant installation (ANT_HOME).&quot;)<SUB>92</SUB>> ]
"102" [label = <(IDENTIFIER,location,new BuildException(&quot;Could not create task of type: &quot; + elementName + &quot;. Common solutions are to use taskdef to declare&quot; + &quot; your task, or, if this is an optional task,&quot; + &quot; to put the optional.jar in the lib directory of&quot; + &quot; your ant installation (ANT_HOME).&quot;, location))<SUB>92</SUB>> ]
"103" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"104" [label = <(setLocation,setLocation(location))<SUB>95</SUB>> ]
"105" [label = <(&lt;operator&gt;.fieldAccess,this.realTask)<SUB>95</SUB>> ]
"106" [label = <(IDENTIFIER,this,setLocation(location))<SUB>95</SUB>> ]
"107" [label = <(FIELD_IDENTIFIER,realTask,realTask)<SUB>95</SUB>> ]
"108" [label = <(IDENTIFIER,location,setLocation(location))<SUB>95</SUB>> ]
"109" [label = <(LOCAL,String id: java.lang.String)> ]
"110" [label = <(&lt;operator&gt;.assignment,String id = getValue(&quot;id&quot;))<SUB>96</SUB>> ]
"111" [label = <(IDENTIFIER,id,String id = getValue(&quot;id&quot;))<SUB>96</SUB>> ]
"112" [label = <(getValue,getValue(&quot;id&quot;))<SUB>96</SUB>> ]
"113" [label = <(getAttributes,getAttributes())<SUB>96</SUB>> ]
"114" [label = <(IDENTIFIER,wrapper,getAttributes())<SUB>96</SUB>> ]
"115" [label = <(LITERAL,&quot;id&quot;,getValue(&quot;id&quot;))<SUB>96</SUB>> ]
"116" [label = <(CONTROL_STRUCTURE,if (id != null),if (id != null))<SUB>97</SUB>> ]
"117" [label = <(&lt;operator&gt;.notEquals,id != null)<SUB>97</SUB>> ]
"118" [label = <(IDENTIFIER,id,id != null)<SUB>97</SUB>> ]
"119" [label = <(LITERAL,null,id != null)<SUB>97</SUB>> ]
"120" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>97</SUB>> ]
"121" [label = <(addReference,addReference(id, realTask))<SUB>98</SUB>> ]
"122" [label = <(IDENTIFIER,project,addReference(id, realTask))<SUB>98</SUB>> ]
"123" [label = <(IDENTIFIER,id,addReference(id, realTask))<SUB>98</SUB>> ]
"124" [label = <(&lt;operator&gt;.fieldAccess,this.realTask)<SUB>98</SUB>> ]
"125" [label = <(IDENTIFIER,this,addReference(id, realTask))<SUB>98</SUB>> ]
"126" [label = <(FIELD_IDENTIFIER,realTask,realTask)<SUB>98</SUB>> ]
"127" [label = <(init,init())<SUB>100</SUB>> ]
"128" [label = <(&lt;operator&gt;.fieldAccess,this.realTask)<SUB>100</SUB>> ]
"129" [label = <(IDENTIFIER,this,init())<SUB>100</SUB>> ]
"130" [label = <(FIELD_IDENTIFIER,realTask,realTask)<SUB>100</SUB>> ]
"131" [label = <(setOwningTarget,setOwningTarget(target))<SUB>103</SUB>> ]
"132" [label = <(&lt;operator&gt;.fieldAccess,this.realTask)<SUB>103</SUB>> ]
"133" [label = <(IDENTIFIER,this,setOwningTarget(target))<SUB>103</SUB>> ]
"134" [label = <(FIELD_IDENTIFIER,realTask,realTask)<SUB>103</SUB>> ]
"135" [label = <(IDENTIFIER,target,setOwningTarget(target))<SUB>103</SUB>> ]
"136" [label = <(setProxy,setProxy(realTask))<SUB>105</SUB>> ]
"137" [label = <(IDENTIFIER,wrapper,setProxy(realTask))<SUB>105</SUB>> ]
"138" [label = <(&lt;operator&gt;.fieldAccess,this.realTask)<SUB>105</SUB>> ]
"139" [label = <(IDENTIFIER,this,setProxy(realTask))<SUB>105</SUB>> ]
"140" [label = <(FIELD_IDENTIFIER,realTask,realTask)<SUB>105</SUB>> ]
"141" [label = <(setRuntimeConfigurableWrapper,setRuntimeConfigurableWrapper(wrapper))<SUB>106</SUB>> ]
"142" [label = <(&lt;operator&gt;.fieldAccess,this.realTask)<SUB>106</SUB>> ]
"143" [label = <(IDENTIFIER,this,setRuntimeConfigurableWrapper(wrapper))<SUB>106</SUB>> ]
"144" [label = <(FIELD_IDENTIFIER,realTask,realTask)<SUB>106</SUB>> ]
"145" [label = <(IDENTIFIER,wrapper,setRuntimeConfigurableWrapper(wrapper))<SUB>106</SUB>> ]
"146" [label = <(handleChildren,handleChildren(realTask, wrapper))<SUB>108</SUB>> ]
"7" [label = <(IDENTIFIER,this,handleChildren(realTask, wrapper))<SUB>108</SUB>> ]
"147" [label = <(&lt;operator&gt;.fieldAccess,this.realTask)<SUB>108</SUB>> ]
"148" [label = <(IDENTIFIER,this,handleChildren(realTask, wrapper))<SUB>108</SUB>> ]
"149" [label = <(FIELD_IDENTIFIER,realTask,realTask)<SUB>108</SUB>> ]
"150" [label = <(IDENTIFIER,wrapper,handleChildren(realTask, wrapper))<SUB>108</SUB>> ]
"151" [label = <(maybeConfigure,maybeConfigure())<SUB>110</SUB>> ]
"152" [label = <(&lt;operator&gt;.fieldAccess,this.realTask)<SUB>110</SUB>> ]
"153" [label = <(IDENTIFIER,this,maybeConfigure())<SUB>110</SUB>> ]
"154" [label = <(FIELD_IDENTIFIER,realTask,realTask)<SUB>110</SUB>> ]
"155" [label = <(replaceTask,replaceTask(this, realTask))<SUB>111</SUB>> ]
"156" [label = <(IDENTIFIER,target,replaceTask(this, realTask))<SUB>111</SUB>> ]
"8" [label = <(IDENTIFIER,this,replaceTask(this, realTask))<SUB>111</SUB>> ]
"157" [label = <(&lt;operator&gt;.fieldAccess,this.realTask)<SUB>111</SUB>> ]
"158" [label = <(IDENTIFIER,this,replaceTask(this, realTask))<SUB>111</SUB>> ]
"159" [label = <(FIELD_IDENTIFIER,realTask,realTask)<SUB>111</SUB>> ]
"160" [label = <(MODIFIER,PUBLIC)> ]
"161" [label = <(MODIFIER,VIRTUAL)> ]
"162" [label = <(METHOD_RETURN,void)<SUB>82</SUB>> ]
  "51" -> "6" 
  "51" -> "52" 
  "51" -> "160" 
  "51" -> "161" 
  "51" -> "162" 
  "52" -> "53" 
  "52" -> "62" 
  "52" -> "104" 
  "52" -> "109" 
  "52" -> "110" 
  "52" -> "116" 
  "52" -> "127" 
  "52" -> "131" 
  "52" -> "136" 
  "52" -> "141" 
  "52" -> "146" 
  "52" -> "151" 
  "52" -> "155" 
  "53" -> "54" 
  "53" -> "57" 
  "54" -> "55" 
  "54" -> "56" 
  "57" -> "58" 
  "57" -> "59" 
  "59" -> "60" 
  "59" -> "61" 
  "62" -> "63" 
  "62" -> "68" 
  "63" -> "64" 
  "63" -> "67" 
  "64" -> "65" 
  "64" -> "66" 
  "68" -> "69" 
  "68" -> "82" 
  "69" -> "5" 
  "69" -> "70" 
  "69" -> "79" 
  "70" -> "71" 
  "70" -> "78" 
  "71" -> "72" 
  "71" -> "77" 
  "72" -> "73" 
  "72" -> "74" 
  "74" -> "75" 
  "74" -> "76" 
  "79" -> "80" 
  "79" -> "81" 
  "82" -> "83" 
  "83" -> "84" 
  "83" -> "87" 
  "83" -> "103" 
  "84" -> "85" 
  "84" -> "86" 
  "87" -> "88" 
  "87" -> "89" 
  "87" -> "102" 
  "89" -> "90" 
  "89" -> "101" 
  "90" -> "91" 
  "90" -> "100" 
  "91" -> "92" 
  "91" -> "99" 
  "92" -> "93" 
  "92" -> "98" 
  "93" -> "94" 
  "93" -> "95" 
  "95" -> "96" 
  "95" -> "97" 
  "104" -> "105" 
  "104" -> "108" 
  "105" -> "106" 
  "105" -> "107" 
  "110" -> "111" 
  "110" -> "112" 
  "112" -> "113" 
  "112" -> "115" 
  "113" -> "114" 
  "116" -> "117" 
  "116" -> "120" 
  "117" -> "118" 
  "117" -> "119" 
  "120" -> "121" 
  "121" -> "122" 
  "121" -> "123" 
  "121" -> "124" 
  "124" -> "125" 
  "124" -> "126" 
  "127" -> "128" 
  "128" -> "129" 
  "128" -> "130" 
  "131" -> "132" 
  "131" -> "135" 
  "132" -> "133" 
  "132" -> "134" 
  "136" -> "137" 
  "136" -> "138" 
  "138" -> "139" 
  "138" -> "140" 
  "141" -> "142" 
  "141" -> "145" 
  "142" -> "143" 
  "142" -> "144" 
  "146" -> "7" 
  "146" -> "147" 
  "146" -> "150" 
  "147" -> "148" 
  "147" -> "149" 
  "151" -> "152" 
  "152" -> "153" 
  "152" -> "154" 
  "155" -> "156" 
  "155" -> "8" 
  "155" -> "157" 
  "157" -> "158" 
  "157" -> "159" 
}

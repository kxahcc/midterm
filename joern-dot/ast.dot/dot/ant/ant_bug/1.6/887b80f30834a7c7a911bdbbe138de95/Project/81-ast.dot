digraph "makeCircularException" {  
"2612" [label = <(METHOD,makeCircularException)<SUB>1721</SUB>> ]
"2613" [label = <(PARAM,String end)<SUB>1721</SUB>> ]
"2614" [label = <(PARAM,Stack stk)<SUB>1721</SUB>> ]
"2615" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1721</SUB>> ]
"160" [label = <(LOCAL,StringBuffer sb: java.lang.StringBuffer)> ]
"2616" [label = <(&lt;operator&gt;.assignment,StringBuffer sb = new StringBuffer(&quot;Circular dependency: &quot;))<SUB>1722</SUB>> ]
"2617" [label = <(IDENTIFIER,sb,StringBuffer sb = new StringBuffer(&quot;Circular dependency: &quot;))<SUB>1722</SUB>> ]
"2618" [label = <(&lt;operator&gt;.alloc,new StringBuffer(&quot;Circular dependency: &quot;))<SUB>1722</SUB>> ]
"2619" [label = <(&lt;init&gt;,new StringBuffer(&quot;Circular dependency: &quot;))<SUB>1722</SUB>> ]
"159" [label = <(IDENTIFIER,sb,new StringBuffer(&quot;Circular dependency: &quot;))<SUB>1722</SUB>> ]
"2620" [label = <(LITERAL,&quot;Circular dependency: &quot;,new StringBuffer(&quot;Circular dependency: &quot;))<SUB>1722</SUB>> ]
"2621" [label = <(append,sb.append(end))<SUB>1723</SUB>> ]
"2622" [label = <(IDENTIFIER,sb,sb.append(end))<SUB>1723</SUB>> ]
"2623" [label = <(IDENTIFIER,end,sb.append(end))<SUB>1723</SUB>> ]
"2624" [label = <(LOCAL,String c: java.lang.String)> ]
"2625" [label = <(CONTROL_STRUCTURE,do {...} while (!c.equals(end)),do {...} while (!c.equals(end)))<SUB>1725</SUB>> ]
"2626" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1725</SUB>> ]
"2627" [label = <(&lt;operator&gt;.assignment,c = (String) stk.pop())<SUB>1726</SUB>> ]
"2628" [label = <(IDENTIFIER,c,c = (String) stk.pop())<SUB>1726</SUB>> ]
"2629" [label = <(&lt;operator&gt;.cast,(String) stk.pop())<SUB>1726</SUB>> ]
"2630" [label = <(TYPE_REF,String,String)<SUB>1726</SUB>> ]
"2631" [label = <(pop,stk.pop())<SUB>1726</SUB>> ]
"2632" [label = <(IDENTIFIER,stk,stk.pop())<SUB>1726</SUB>> ]
"2633" [label = <(append,sb.append(&quot; &lt;- &quot;))<SUB>1727</SUB>> ]
"2634" [label = <(IDENTIFIER,sb,sb.append(&quot; &lt;- &quot;))<SUB>1727</SUB>> ]
"2635" [label = <(LITERAL,&quot; &lt;- &quot;,sb.append(&quot; &lt;- &quot;))<SUB>1727</SUB>> ]
"2636" [label = <(append,sb.append(c))<SUB>1728</SUB>> ]
"2637" [label = <(IDENTIFIER,sb,sb.append(c))<SUB>1728</SUB>> ]
"2638" [label = <(IDENTIFIER,c,sb.append(c))<SUB>1728</SUB>> ]
"2639" [label = <(&lt;operator&gt;.logicalNot,!c.equals(end))<SUB>1729</SUB>> ]
"2640" [label = <(equals,c.equals(end))<SUB>1729</SUB>> ]
"2641" [label = <(IDENTIFIER,c,c.equals(end))<SUB>1729</SUB>> ]
"2642" [label = <(IDENTIFIER,end,c.equals(end))<SUB>1729</SUB>> ]
"2643" [label = <(RETURN,return new BuildException(new String(sb));,return new BuildException(new String(sb));)<SUB>1730</SUB>> ]
"2644" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1730</SUB>> ]
"2645" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"2646" [label = <(IDENTIFIER,$obj36,&lt;empty&gt;)> ]
"2647" [label = <(&lt;operator&gt;.alloc,new BuildException(new String(sb)))<SUB>1730</SUB>> ]
"2648" [label = <(&lt;init&gt;,new BuildException(new String(sb)))<SUB>1730</SUB>> ]
"2649" [label = <(IDENTIFIER,$obj36,new BuildException(new String(sb)))> ]
"2650" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1730</SUB>> ]
"2651" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"2652" [label = <(IDENTIFIER,$obj35,&lt;empty&gt;)> ]
"2653" [label = <(&lt;operator&gt;.alloc,new String(sb))<SUB>1730</SUB>> ]
"2654" [label = <(&lt;init&gt;,new String(sb))<SUB>1730</SUB>> ]
"2655" [label = <(IDENTIFIER,$obj35,new String(sb))> ]
"2656" [label = <(IDENTIFIER,sb,new String(sb))<SUB>1730</SUB>> ]
"2657" [label = <(IDENTIFIER,$obj35,&lt;empty&gt;)> ]
"2658" [label = <(IDENTIFIER,$obj36,&lt;empty&gt;)> ]
"2659" [label = <(MODIFIER,PRIVATE)> ]
"2660" [label = <(MODIFIER,STATIC)> ]
"2661" [label = <(METHOD_RETURN,ANY)<SUB>1721</SUB>> ]
  "2612" -> "2613" 
  "2612" -> "2614" 
  "2612" -> "2615" 
  "2612" -> "2659" 
  "2612" -> "2660" 
  "2612" -> "2661" 
  "2615" -> "160" 
  "2615" -> "2616" 
  "2615" -> "2619" 
  "2615" -> "2621" 
  "2615" -> "2624" 
  "2615" -> "2625" 
  "2615" -> "2643" 
  "2616" -> "2617" 
  "2616" -> "2618" 
  "2619" -> "159" 
  "2619" -> "2620" 
  "2621" -> "2622" 
  "2621" -> "2623" 
  "2625" -> "2626" 
  "2625" -> "2639" 
  "2626" -> "2627" 
  "2626" -> "2633" 
  "2626" -> "2636" 
  "2627" -> "2628" 
  "2627" -> "2629" 
  "2629" -> "2630" 
  "2629" -> "2631" 
  "2631" -> "2632" 
  "2633" -> "2634" 
  "2633" -> "2635" 
  "2636" -> "2637" 
  "2636" -> "2638" 
  "2639" -> "2640" 
  "2640" -> "2641" 
  "2640" -> "2642" 
  "2643" -> "2644" 
  "2644" -> "2645" 
  "2644" -> "2648" 
  "2644" -> "2658" 
  "2645" -> "2646" 
  "2645" -> "2647" 
  "2648" -> "2649" 
  "2648" -> "2650" 
  "2650" -> "2651" 
  "2650" -> "2654" 
  "2650" -> "2657" 
  "2651" -> "2652" 
  "2651" -> "2653" 
  "2654" -> "2655" 
  "2654" -> "2656" 
}

digraph "toString" {  
"649" [label = <(METHOD,toString)<SUB>328</SUB>> ]
"650" [label = <(PARAM,String[] line)<SUB>328</SUB>> ]
"651" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>328</SUB>> ]
"652" [label = <(CONTROL_STRUCTURE,if (line == null || line.length == 0),if (line == null || line.length == 0))<SUB>330</SUB>> ]
"653" [label = <(&lt;operator&gt;.logicalOr,line == null || line.length == 0)<SUB>330</SUB>> ]
"654" [label = <(&lt;operator&gt;.equals,line == null)<SUB>330</SUB>> ]
"655" [label = <(IDENTIFIER,line,line == null)<SUB>330</SUB>> ]
"656" [label = <(LITERAL,null,line == null)<SUB>330</SUB>> ]
"657" [label = <(&lt;operator&gt;.equals,line.length == 0)<SUB>330</SUB>> ]
"658" [label = <(&lt;operator&gt;.fieldAccess,line.length)<SUB>330</SUB>> ]
"659" [label = <(IDENTIFIER,line,line.length == 0)<SUB>330</SUB>> ]
"660" [label = <(FIELD_IDENTIFIER,length,length)<SUB>330</SUB>> ]
"661" [label = <(LITERAL,0,line.length == 0)<SUB>330</SUB>> ]
"662" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>330</SUB>> ]
"663" [label = <(RETURN,return &quot;&quot;;,return &quot;&quot;;)<SUB>331</SUB>> ]
"664" [label = <(LITERAL,&quot;&quot;,return &quot;&quot;;)<SUB>331</SUB>> ]
"57" [label = <(LOCAL,StringBuffer result: java.lang.StringBuffer)> ]
"665" [label = <(&lt;operator&gt;.assignment,StringBuffer result = new StringBuffer())<SUB>335</SUB>> ]
"666" [label = <(IDENTIFIER,result,StringBuffer result = new StringBuffer())<SUB>335</SUB>> ]
"667" [label = <(&lt;operator&gt;.alloc,new StringBuffer())<SUB>335</SUB>> ]
"668" [label = <(&lt;init&gt;,new StringBuffer())<SUB>335</SUB>> ]
"56" [label = <(IDENTIFIER,result,new StringBuffer())<SUB>335</SUB>> ]
"669" [label = <(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; line.length); i++),for (int i = 0; Some(i &lt; line.length); i++))<SUB>336</SUB>> ]
"670" [label = <(LOCAL,int i: int)> ]
"671" [label = <(&lt;operator&gt;.assignment,int i = 0)<SUB>336</SUB>> ]
"672" [label = <(IDENTIFIER,i,int i = 0)<SUB>336</SUB>> ]
"673" [label = <(LITERAL,0,int i = 0)<SUB>336</SUB>> ]
"674" [label = <(&lt;operator&gt;.lessThan,i &lt; line.length)<SUB>336</SUB>> ]
"675" [label = <(IDENTIFIER,i,i &lt; line.length)<SUB>336</SUB>> ]
"676" [label = <(&lt;operator&gt;.fieldAccess,line.length)<SUB>336</SUB>> ]
"677" [label = <(IDENTIFIER,line,i &lt; line.length)<SUB>336</SUB>> ]
"678" [label = <(FIELD_IDENTIFIER,length,length)<SUB>336</SUB>> ]
"679" [label = <(&lt;operator&gt;.postIncrement,i++)<SUB>336</SUB>> ]
"680" [label = <(IDENTIFIER,i,i++)<SUB>336</SUB>> ]
"681" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>336</SUB>> ]
"682" [label = <(CONTROL_STRUCTURE,if (i &gt; 0),if (i &gt; 0))<SUB>337</SUB>> ]
"683" [label = <(&lt;operator&gt;.greaterThan,i &gt; 0)<SUB>337</SUB>> ]
"684" [label = <(IDENTIFIER,i,i &gt; 0)<SUB>337</SUB>> ]
"685" [label = <(LITERAL,0,i &gt; 0)<SUB>337</SUB>> ]
"686" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>337</SUB>> ]
"687" [label = <(append,result.append(' '))<SUB>338</SUB>> ]
"688" [label = <(IDENTIFIER,result,result.append(' '))<SUB>338</SUB>> ]
"689" [label = <(LITERAL,' ',result.append(' '))<SUB>338</SUB>> ]
"690" [label = <(append,result.append(quoteArgument(line[i])))<SUB>340</SUB>> ]
"691" [label = <(IDENTIFIER,result,result.append(quoteArgument(line[i])))<SUB>340</SUB>> ]
"692" [label = <(quoteArgument,quoteArgument(line[i]))<SUB>340</SUB>> ]
"693" [label = <(&lt;operator&gt;.indexAccess,line[i])<SUB>340</SUB>> ]
"694" [label = <(IDENTIFIER,line,quoteArgument(line[i]))<SUB>340</SUB>> ]
"695" [label = <(IDENTIFIER,i,quoteArgument(line[i]))<SUB>340</SUB>> ]
"696" [label = <(RETURN,return result.toString();,return result.toString();)<SUB>342</SUB>> ]
"697" [label = <(toString,result.toString())<SUB>342</SUB>> ]
"698" [label = <(IDENTIFIER,result,result.toString())<SUB>342</SUB>> ]
"699" [label = <(MODIFIER,PUBLIC)> ]
"700" [label = <(MODIFIER,STATIC)> ]
"701" [label = <(METHOD_RETURN,java.lang.String)<SUB>328</SUB>> ]
  "649" -> "650" 
  "649" -> "651" 
  "649" -> "699" 
  "649" -> "700" 
  "649" -> "701" 
  "651" -> "652" 
  "651" -> "57" 
  "651" -> "665" 
  "651" -> "668" 
  "651" -> "669" 
  "651" -> "696" 
  "652" -> "653" 
  "652" -> "662" 
  "653" -> "654" 
  "653" -> "657" 
  "654" -> "655" 
  "654" -> "656" 
  "657" -> "658" 
  "657" -> "661" 
  "658" -> "659" 
  "658" -> "660" 
  "662" -> "663" 
  "663" -> "664" 
  "665" -> "666" 
  "665" -> "667" 
  "668" -> "56" 
  "669" -> "670" 
  "669" -> "671" 
  "669" -> "674" 
  "669" -> "679" 
  "669" -> "681" 
  "671" -> "672" 
  "671" -> "673" 
  "674" -> "675" 
  "674" -> "676" 
  "676" -> "677" 
  "676" -> "678" 
  "679" -> "680" 
  "681" -> "682" 
  "681" -> "690" 
  "682" -> "683" 
  "682" -> "686" 
  "683" -> "684" 
  "683" -> "685" 
  "686" -> "687" 
  "687" -> "688" 
  "687" -> "689" 
  "690" -> "691" 
  "690" -> "692" 
  "692" -> "693" 
  "693" -> "694" 
  "693" -> "695" 
  "696" -> "697" 
  "697" -> "698" 
}

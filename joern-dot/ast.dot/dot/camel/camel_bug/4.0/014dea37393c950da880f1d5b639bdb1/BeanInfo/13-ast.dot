digraph "createParameterUnmarshalExpressionForAnnotation" {  
"946" [label = <(METHOD,createParameterUnmarshalExpressionForAnnotation)<SUB>331</SUB>> ]
"947" [label = <(PARAM,this)<SUB>331</SUB>> ]
"948" [label = <(PARAM,Class clazz)<SUB>331</SUB>> ]
"949" [label = <(PARAM,Method method)<SUB>331</SUB>> ]
"950" [label = <(PARAM,Class parameterType)<SUB>332</SUB>> ]
"951" [label = <(PARAM,Annotation annotation)<SUB>333</SUB>> ]
"952" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>333</SUB>> ]
"953" [label = <(CONTROL_STRUCTURE,if (annotation instanceof Property),if (annotation instanceof Property))<SUB>334</SUB>> ]
"954" [label = <(&lt;operator&gt;.instanceOf,annotation instanceof Property)<SUB>334</SUB>> ]
"955" [label = <(IDENTIFIER,annotation,annotation instanceof Property)<SUB>334</SUB>> ]
"956" [label = <(TYPE_REF,Property,Property)<SUB>334</SUB>> ]
"957" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>334</SUB>> ]
"958" [label = <(LOCAL,Property propertyAnnotation: org.apache.camel.Property)> ]
"959" [label = <(&lt;operator&gt;.assignment,Property propertyAnnotation = (Property) annotation)<SUB>335</SUB>> ]
"960" [label = <(IDENTIFIER,propertyAnnotation,Property propertyAnnotation = (Property) annotation)<SUB>335</SUB>> ]
"961" [label = <(&lt;operator&gt;.cast,(Property) annotation)<SUB>335</SUB>> ]
"962" [label = <(TYPE_REF,Property,Property)<SUB>335</SUB>> ]
"963" [label = <(IDENTIFIER,annotation,(Property) annotation)<SUB>335</SUB>> ]
"964" [label = <(RETURN,return ExpressionBuilder.propertyExpression(propertyAnnotation.name());,return ExpressionBuilder.propertyExpression(propertyAnnotation.name());)<SUB>336</SUB>> ]
"965" [label = <(propertyExpression,propertyExpression(propertyAnnotation.name()))<SUB>336</SUB>> ]
"966" [label = <(IDENTIFIER,ExpressionBuilder,propertyExpression(propertyAnnotation.name()))<SUB>336</SUB>> ]
"967" [label = <(name,name())<SUB>336</SUB>> ]
"968" [label = <(IDENTIFIER,propertyAnnotation,name())<SUB>336</SUB>> ]
"969" [label = <(CONTROL_STRUCTURE,else,else)<SUB>337</SUB>> ]
"970" [label = <(CONTROL_STRUCTURE,if (annotation instanceof Properties),if (annotation instanceof Properties))<SUB>337</SUB>> ]
"971" [label = <(&lt;operator&gt;.instanceOf,annotation instanceof Properties)<SUB>337</SUB>> ]
"972" [label = <(IDENTIFIER,annotation,annotation instanceof Properties)<SUB>337</SUB>> ]
"973" [label = <(TYPE_REF,Properties,Properties)<SUB>337</SUB>> ]
"974" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>337</SUB>> ]
"975" [label = <(RETURN,return ExpressionBuilder.propertiesExpression();,return ExpressionBuilder.propertiesExpression();)<SUB>338</SUB>> ]
"976" [label = <(propertiesExpression,propertiesExpression())<SUB>338</SUB>> ]
"977" [label = <(IDENTIFIER,ExpressionBuilder,propertiesExpression())<SUB>338</SUB>> ]
"978" [label = <(CONTROL_STRUCTURE,else,else)<SUB>339</SUB>> ]
"979" [label = <(CONTROL_STRUCTURE,if (annotation instanceof Header),if (annotation instanceof Header))<SUB>339</SUB>> ]
"980" [label = <(&lt;operator&gt;.instanceOf,annotation instanceof Header)<SUB>339</SUB>> ]
"981" [label = <(IDENTIFIER,annotation,annotation instanceof Header)<SUB>339</SUB>> ]
"982" [label = <(TYPE_REF,Header,Header)<SUB>339</SUB>> ]
"983" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>339</SUB>> ]
"984" [label = <(LOCAL,Header headerAnnotation: org.apache.camel.Header)> ]
"985" [label = <(&lt;operator&gt;.assignment,Header headerAnnotation = (Header) annotation)<SUB>340</SUB>> ]
"986" [label = <(IDENTIFIER,headerAnnotation,Header headerAnnotation = (Header) annotation)<SUB>340</SUB>> ]
"987" [label = <(&lt;operator&gt;.cast,(Header) annotation)<SUB>340</SUB>> ]
"988" [label = <(TYPE_REF,Header,Header)<SUB>340</SUB>> ]
"989" [label = <(IDENTIFIER,annotation,(Header) annotation)<SUB>340</SUB>> ]
"990" [label = <(RETURN,return ExpressionBuilder.headerExpression(headerAnnotation.name());,return ExpressionBuilder.headerExpression(headerAnnotation.name());)<SUB>341</SUB>> ]
"991" [label = <(headerExpression,headerExpression(headerAnnotation.name()))<SUB>341</SUB>> ]
"992" [label = <(IDENTIFIER,ExpressionBuilder,headerExpression(headerAnnotation.name()))<SUB>341</SUB>> ]
"993" [label = <(name,name())<SUB>341</SUB>> ]
"994" [label = <(IDENTIFIER,headerAnnotation,name())<SUB>341</SUB>> ]
"995" [label = <(CONTROL_STRUCTURE,else,else)<SUB>342</SUB>> ]
"996" [label = <(CONTROL_STRUCTURE,if (annotation instanceof Headers),if (annotation instanceof Headers))<SUB>342</SUB>> ]
"997" [label = <(&lt;operator&gt;.instanceOf,annotation instanceof Headers)<SUB>342</SUB>> ]
"998" [label = <(IDENTIFIER,annotation,annotation instanceof Headers)<SUB>342</SUB>> ]
"999" [label = <(TYPE_REF,Headers,Headers)<SUB>342</SUB>> ]
"1000" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>342</SUB>> ]
"1001" [label = <(RETURN,return ExpressionBuilder.headersExpression();,return ExpressionBuilder.headersExpression();)<SUB>343</SUB>> ]
"1002" [label = <(headersExpression,headersExpression())<SUB>343</SUB>> ]
"1003" [label = <(IDENTIFIER,ExpressionBuilder,headersExpression())<SUB>343</SUB>> ]
"1004" [label = <(CONTROL_STRUCTURE,else,else)<SUB>344</SUB>> ]
"1005" [label = <(CONTROL_STRUCTURE,if (annotation instanceof OutHeaders),if (annotation instanceof OutHeaders))<SUB>344</SUB>> ]
"1006" [label = <(&lt;operator&gt;.instanceOf,annotation instanceof OutHeaders)<SUB>344</SUB>> ]
"1007" [label = <(IDENTIFIER,annotation,annotation instanceof OutHeaders)<SUB>344</SUB>> ]
"1008" [label = <(TYPE_REF,OutHeaders,OutHeaders)<SUB>344</SUB>> ]
"1009" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>344</SUB>> ]
"1010" [label = <(RETURN,return ExpressionBuilder.outHeadersExpression();,return ExpressionBuilder.outHeadersExpression();)<SUB>345</SUB>> ]
"1011" [label = <(outHeadersExpression,outHeadersExpression())<SUB>345</SUB>> ]
"1012" [label = <(IDENTIFIER,ExpressionBuilder,outHeadersExpression())<SUB>345</SUB>> ]
"1013" [label = <(CONTROL_STRUCTURE,else,else)<SUB>346</SUB>> ]
"1014" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>346</SUB>> ]
"1015" [label = <(LOCAL,LanguageAnnotation languageAnnotation: org.apache.camel.language.LanguageAnnotation)> ]
"1016" [label = <(&lt;operator&gt;.assignment,LanguageAnnotation languageAnnotation = getAnnotation(LanguageAnnotation.class))<SUB>347</SUB>> ]
"1017" [label = <(IDENTIFIER,languageAnnotation,LanguageAnnotation languageAnnotation = getAnnotation(LanguageAnnotation.class))<SUB>347</SUB>> ]
"1018" [label = <(getAnnotation,getAnnotation(LanguageAnnotation.class))<SUB>347</SUB>> ]
"1019" [label = <(annotationType,annotation.annotationType())<SUB>347</SUB>> ]
"1020" [label = <(IDENTIFIER,annotation,annotation.annotationType())<SUB>347</SUB>> ]
"1021" [label = <(&lt;operator&gt;.fieldAccess,LanguageAnnotation.class)<SUB>347</SUB>> ]
"1022" [label = <(IDENTIFIER,LanguageAnnotation,getAnnotation(LanguageAnnotation.class))<SUB>347</SUB>> ]
"1023" [label = <(FIELD_IDENTIFIER,class,class)<SUB>347</SUB>> ]
"1024" [label = <(CONTROL_STRUCTURE,if (languageAnnotation != null),if (languageAnnotation != null))<SUB>348</SUB>> ]
"1025" [label = <(&lt;operator&gt;.notEquals,languageAnnotation != null)<SUB>348</SUB>> ]
"1026" [label = <(IDENTIFIER,languageAnnotation,languageAnnotation != null)<SUB>348</SUB>> ]
"1027" [label = <(LITERAL,null,languageAnnotation != null)<SUB>348</SUB>> ]
"1028" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>348</SUB>> ]
"1029" [label = <(LOCAL,Class&lt;?&gt; type: java.lang.Class)> ]
"1030" [label = <(&lt;operator&gt;.assignment,Class type = factory())<SUB>349</SUB>> ]
"1031" [label = <(IDENTIFIER,type,Class type = factory())<SUB>349</SUB>> ]
"1032" [label = <(factory,factory())<SUB>349</SUB>> ]
"1033" [label = <(IDENTIFIER,languageAnnotation,factory())<SUB>349</SUB>> ]
"1034" [label = <(LOCAL,Object object: java.lang.Object)> ]
"1035" [label = <(&lt;operator&gt;.assignment,Object object = newInstance(type))<SUB>350</SUB>> ]
"1036" [label = <(IDENTIFIER,object,Object object = newInstance(type))<SUB>350</SUB>> ]
"1037" [label = <(newInstance,newInstance(type))<SUB>350</SUB>> ]
"1038" [label = <(getInjector,getInjector())<SUB>350</SUB>> ]
"1039" [label = <(&lt;operator&gt;.fieldAccess,this.camelContext)<SUB>350</SUB>> ]
"1040" [label = <(IDENTIFIER,this,getInjector())<SUB>350</SUB>> ]
"1041" [label = <(FIELD_IDENTIFIER,camelContext,camelContext)<SUB>350</SUB>> ]
"1042" [label = <(IDENTIFIER,type,newInstance(type))<SUB>350</SUB>> ]
"1043" [label = <(CONTROL_STRUCTURE,if (object instanceof AnnotationExpressionFactory),if (object instanceof AnnotationExpressionFactory))<SUB>351</SUB>> ]
"1044" [label = <(&lt;operator&gt;.instanceOf,object instanceof AnnotationExpressionFactory)<SUB>351</SUB>> ]
"1045" [label = <(IDENTIFIER,object,object instanceof AnnotationExpressionFactory)<SUB>351</SUB>> ]
"1046" [label = <(TYPE_REF,AnnotationExpressionFactory,AnnotationExpressionFactory)<SUB>351</SUB>> ]
"1047" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>351</SUB>> ]
"1048" [label = <(LOCAL,AnnotationExpressionFactory expressionFactory: ANY)> ]
"1049" [label = <(&lt;operator&gt;.assignment,ANY expressionFactory = (AnnotationExpressionFactory) object)<SUB>352</SUB>> ]
"1050" [label = <(IDENTIFIER,expressionFactory,ANY expressionFactory = (AnnotationExpressionFactory) object)<SUB>352</SUB>> ]
"1051" [label = <(&lt;operator&gt;.cast,(AnnotationExpressionFactory) object)<SUB>352</SUB>> ]
"1052" [label = <(TYPE_REF,AnnotationExpressionFactory,AnnotationExpressionFactory)<SUB>352</SUB>> ]
"1053" [label = <(IDENTIFIER,object,(AnnotationExpressionFactory) object)<SUB>352</SUB>> ]
"1054" [label = <(RETURN,return expressionFactory.createExpression(camelContext, annotation, languageAnnotation, parameterType);,return expressionFactory.createExpression(camelContext, annotation, languageAnnotation, parameterType);)<SUB>353</SUB>> ]
"1055" [label = <(createExpression,createExpression(camelContext, annotation, languageAnnotation, parameterType))<SUB>353</SUB>> ]
"1056" [label = <(IDENTIFIER,expressionFactory,createExpression(camelContext, annotation, languageAnnotation, parameterType))<SUB>353</SUB>> ]
"1057" [label = <(&lt;operator&gt;.fieldAccess,this.camelContext)<SUB>353</SUB>> ]
"1058" [label = <(IDENTIFIER,this,createExpression(camelContext, annotation, languageAnnotation, parameterType))<SUB>353</SUB>> ]
"1059" [label = <(FIELD_IDENTIFIER,camelContext,camelContext)<SUB>353</SUB>> ]
"1060" [label = <(IDENTIFIER,annotation,createExpression(camelContext, annotation, languageAnnotation, parameterType))<SUB>353</SUB>> ]
"1061" [label = <(IDENTIFIER,languageAnnotation,createExpression(camelContext, annotation, languageAnnotation, parameterType))<SUB>353</SUB>> ]
"1062" [label = <(IDENTIFIER,parameterType,createExpression(camelContext, annotation, languageAnnotation, parameterType))<SUB>353</SUB>> ]
"1063" [label = <(CONTROL_STRUCTURE,else,else)<SUB>354</SUB>> ]
"1064" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>354</SUB>> ]
"1065" [label = <(error,error(&quot;Ignoring bad annotation: &quot; + languageAnnotation + &quot;on method: &quot; + method + &quot; which declares a factory: &quot; + type.getName() + &quot; which does not implement &quot; + AnnotationExpressionFactory.class.getName()))<SUB>355</SUB>> ]
"1066" [label = <(&lt;operator&gt;.fieldAccess,BeanInfo.LOG)<SUB>355</SUB>> ]
"1067" [label = <(IDENTIFIER,BeanInfo,error(&quot;Ignoring bad annotation: &quot; + languageAnnotation + &quot;on method: &quot; + method + &quot; which declares a factory: &quot; + type.getName() + &quot; which does not implement &quot; + AnnotationExpressionFactory.class.getName()))<SUB>355</SUB>> ]
"1068" [label = <(FIELD_IDENTIFIER,LOG,LOG)<SUB>355</SUB>> ]
"1069" [label = <(&lt;operator&gt;.addition,&quot;Ignoring bad annotation: &quot; + languageAnnotation + &quot;on method: &quot; + method + &quot; which declares a factory: &quot; + type.getName() + &quot; which does not implement &quot; + AnnotationExpressionFactory.class.getName())<SUB>355</SUB>> ]
"1070" [label = <(&lt;operator&gt;.addition,&quot;Ignoring bad annotation: &quot; + languageAnnotation + &quot;on method: &quot; + method + &quot; which declares a factory: &quot; + type.getName() + &quot; which does not implement &quot;)<SUB>355</SUB>> ]
"1071" [label = <(&lt;operator&gt;.addition,&quot;Ignoring bad annotation: &quot; + languageAnnotation + &quot;on method: &quot; + method + &quot; which declares a factory: &quot; + type.getName())<SUB>355</SUB>> ]
"1072" [label = <(&lt;operator&gt;.addition,&quot;Ignoring bad annotation: &quot; + languageAnnotation + &quot;on method: &quot; + method + &quot; which declares a factory: &quot;)<SUB>355</SUB>> ]
"1073" [label = <(&lt;operator&gt;.addition,&quot;Ignoring bad annotation: &quot; + languageAnnotation + &quot;on method: &quot; + method)<SUB>355</SUB>> ]
"1074" [label = <(&lt;operator&gt;.addition,&quot;Ignoring bad annotation: &quot; + languageAnnotation + &quot;on method: &quot;)<SUB>355</SUB>> ]
"1075" [label = <(&lt;operator&gt;.addition,&quot;Ignoring bad annotation: &quot; + languageAnnotation)<SUB>355</SUB>> ]
"1076" [label = <(LITERAL,&quot;Ignoring bad annotation: &quot;,&quot;Ignoring bad annotation: &quot; + languageAnnotation)<SUB>355</SUB>> ]
"1077" [label = <(IDENTIFIER,languageAnnotation,&quot;Ignoring bad annotation: &quot; + languageAnnotation)<SUB>355</SUB>> ]
"1078" [label = <(LITERAL,&quot;on method: &quot;,&quot;Ignoring bad annotation: &quot; + languageAnnotation + &quot;on method: &quot;)<SUB>355</SUB>> ]
"1079" [label = <(IDENTIFIER,method,&quot;Ignoring bad annotation: &quot; + languageAnnotation + &quot;on method: &quot; + method)<SUB>355</SUB>> ]
"1080" [label = <(LITERAL,&quot; which declares a factory: &quot;,&quot;Ignoring bad annotation: &quot; + languageAnnotation + &quot;on method: &quot; + method + &quot; which declares a factory: &quot;)<SUB>356</SUB>> ]
"1081" [label = <(getName,type.getName())<SUB>356</SUB>> ]
"1082" [label = <(IDENTIFIER,type,type.getName())<SUB>356</SUB>> ]
"1083" [label = <(LITERAL,&quot; which does not implement &quot;,&quot;Ignoring bad annotation: &quot; + languageAnnotation + &quot;on method: &quot; + method + &quot; which declares a factory: &quot; + type.getName() + &quot; which does not implement &quot;)<SUB>357</SUB>> ]
"1084" [label = <(getName,getName())<SUB>357</SUB>> ]
"1085" [label = <(&lt;operator&gt;.fieldAccess,AnnotationExpressionFactory.class)<SUB>357</SUB>> ]
"1086" [label = <(IDENTIFIER,AnnotationExpressionFactory,getName())<SUB>357</SUB>> ]
"1087" [label = <(FIELD_IDENTIFIER,class,class)<SUB>357</SUB>> ]
"1088" [label = <(RETURN,return null;,return null;)<SUB>362</SUB>> ]
"1089" [label = <(LITERAL,null,return null;)<SUB>362</SUB>> ]
"1090" [label = <(MODIFIER,PROTECTED)> ]
"1091" [label = <(MODIFIER,VIRTUAL)> ]
"1092" [label = <(METHOD_RETURN,org.apache.camel.Expression)<SUB>331</SUB>> ]
  "946" -> "947" 
  "946" -> "948" 
  "946" -> "949" 
  "946" -> "950" 
  "946" -> "951" 
  "946" -> "952" 
  "946" -> "1090" 
  "946" -> "1091" 
  "946" -> "1092" 
  "952" -> "953" 
  "952" -> "1088" 
  "953" -> "954" 
  "953" -> "957" 
  "953" -> "969" 
  "954" -> "955" 
  "954" -> "956" 
  "957" -> "958" 
  "957" -> "959" 
  "957" -> "964" 
  "959" -> "960" 
  "959" -> "961" 
  "961" -> "962" 
  "961" -> "963" 
  "964" -> "965" 
  "965" -> "966" 
  "965" -> "967" 
  "967" -> "968" 
  "969" -> "970" 
  "970" -> "971" 
  "970" -> "974" 
  "970" -> "978" 
  "971" -> "972" 
  "971" -> "973" 
  "974" -> "975" 
  "975" -> "976" 
  "976" -> "977" 
  "978" -> "979" 
  "979" -> "980" 
  "979" -> "983" 
  "979" -> "995" 
  "980" -> "981" 
  "980" -> "982" 
  "983" -> "984" 
  "983" -> "985" 
  "983" -> "990" 
  "985" -> "986" 
  "985" -> "987" 
  "987" -> "988" 
  "987" -> "989" 
  "990" -> "991" 
  "991" -> "992" 
  "991" -> "993" 
  "993" -> "994" 
  "995" -> "996" 
  "996" -> "997" 
  "996" -> "1000" 
  "996" -> "1004" 
  "997" -> "998" 
  "997" -> "999" 
  "1000" -> "1001" 
  "1001" -> "1002" 
  "1002" -> "1003" 
  "1004" -> "1005" 
  "1005" -> "1006" 
  "1005" -> "1009" 
  "1005" -> "1013" 
  "1006" -> "1007" 
  "1006" -> "1008" 
  "1009" -> "1010" 
  "1010" -> "1011" 
  "1011" -> "1012" 
  "1013" -> "1014" 
  "1014" -> "1015" 
  "1014" -> "1016" 
  "1014" -> "1024" 
  "1016" -> "1017" 
  "1016" -> "1018" 
  "1018" -> "1019" 
  "1018" -> "1021" 
  "1019" -> "1020" 
  "1021" -> "1022" 
  "1021" -> "1023" 
  "1024" -> "1025" 
  "1024" -> "1028" 
  "1025" -> "1026" 
  "1025" -> "1027" 
  "1028" -> "1029" 
  "1028" -> "1030" 
  "1028" -> "1034" 
  "1028" -> "1035" 
  "1028" -> "1043" 
  "1030" -> "1031" 
  "1030" -> "1032" 
  "1032" -> "1033" 
  "1035" -> "1036" 
  "1035" -> "1037" 
  "1037" -> "1038" 
  "1037" -> "1042" 
  "1038" -> "1039" 
  "1039" -> "1040" 
  "1039" -> "1041" 
  "1043" -> "1044" 
  "1043" -> "1047" 
  "1043" -> "1063" 
  "1044" -> "1045" 
  "1044" -> "1046" 
  "1047" -> "1048" 
  "1047" -> "1049" 
  "1047" -> "1054" 
  "1049" -> "1050" 
  "1049" -> "1051" 
  "1051" -> "1052" 
  "1051" -> "1053" 
  "1054" -> "1055" 
  "1055" -> "1056" 
  "1055" -> "1057" 
  "1055" -> "1060" 
  "1055" -> "1061" 
  "1055" -> "1062" 
  "1057" -> "1058" 
  "1057" -> "1059" 
  "1063" -> "1064" 
  "1064" -> "1065" 
  "1065" -> "1066" 
  "1065" -> "1069" 
  "1066" -> "1067" 
  "1066" -> "1068" 
  "1069" -> "1070" 
  "1069" -> "1084" 
  "1070" -> "1071" 
  "1070" -> "1083" 
  "1071" -> "1072" 
  "1071" -> "1081" 
  "1072" -> "1073" 
  "1072" -> "1080" 
  "1073" -> "1074" 
  "1073" -> "1079" 
  "1074" -> "1075" 
  "1074" -> "1078" 
  "1075" -> "1076" 
  "1075" -> "1077" 
  "1081" -> "1082" 
  "1084" -> "1085" 
  "1085" -> "1086" 
  "1085" -> "1087" 
  "1088" -> "1089" 
}

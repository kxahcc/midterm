digraph "concatExpression" {  
"430" [label = <(METHOD,concatExpression)<SUB>564</SUB>> ]
"431" [label = <(PARAM,final Collection&lt;Expression&gt; expressions)<SUB>564</SUB>> ]
"432" [label = <(PARAM,final String expression)<SUB>564</SUB>> ]
"433" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>564</SUB>> ]
"434" [label = <(RETURN,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        StringBuffer buffer = new StringBuffer();\012        for (Expression&lt;E&gt; expression : expressions) {\012            String text = evaluateStringExpression(expression, exchange);\012            if (text != null) {\012                buffer.append(text);\012            }\012        }\012        return buffer.toString();\012    }\012\012    @Override\012    public String toString() {\012        if (expression != null) {\012            return expression;\012        } else {\012            return &quot;concat&quot; + expressions;\012        }\012    }\012};,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        StringBuffer buffer = new StringBuffer();\012        for (Expression&lt;E&gt; expression : expressions) {\012            String text = evaluateStringExpression(expression, exchange);\012            if (text != null) {\012                buffer.append(text);\012            }\012        }\012        return buffer.toString();\012    }\012\012    @Override\012    public String toString() {\012        if (expression != null) {\012            return expression;\012        } else {\012            return &quot;concat&quot; + expressions;\012        }\012    }\012};)<SUB>565</SUB>> ]
"435" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>565</SUB>> ]
"436" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"437" [label = <(IDENTIFIER,$obj24,&lt;empty&gt;)> ]
"438" [label = <(&lt;operator&gt;.alloc,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        StringBuffer buffer = new StringBuffer();\012        for (Expression&lt;E&gt; expression : expressions) {\012            String text = evaluateStringExpression(expression, exchange);\012            if (text != null) {\012                buffer.append(text);\012            }\012        }\012        return buffer.toString();\012    }\012\012    @Override\012    public String toString() {\012        if (expression != null) {\012            return expression;\012        } else {\012            return &quot;concat&quot; + expressions;\012        }\012    }\012})<SUB>565</SUB>> ]
"439" [label = <(&lt;init&gt;,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        StringBuffer buffer = new StringBuffer();\012        for (Expression&lt;E&gt; expression : expressions) {\012            String text = evaluateStringExpression(expression, exchange);\012            if (text != null) {\012                buffer.append(text);\012            }\012        }\012        return buffer.toString();\012    }\012\012    @Override\012    public String toString() {\012        if (expression != null) {\012            return expression;\012        } else {\012            return &quot;concat&quot; + expressions;\012        }\012    }\012})<SUB>565</SUB>> ]
"440" [label = <(IDENTIFIER,$obj24,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        StringBuffer buffer = new StringBuffer();\012        for (Expression&lt;E&gt; expression : expressions) {\012            String text = evaluateStringExpression(expression, exchange);\012            if (text != null) {\012                buffer.append(text);\012            }\012        }\012        return buffer.toString();\012    }\012\012    @Override\012    public String toString() {\012        if (expression != null) {\012            return expression;\012        } else {\012            return &quot;concat&quot; + expressions;\012        }\012    }\012})> ]
"441" [label = <(IDENTIFIER,$obj24,&lt;empty&gt;)> ]
"442" [label = <(MODIFIER,PUBLIC)> ]
"443" [label = <(MODIFIER,STATIC)> ]
"444" [label = <(METHOD_RETURN,ANY)<SUB>564</SUB>> ]
  "430" -> "431" 
  "430" -> "432" 
  "430" -> "433" 
  "430" -> "442" 
  "430" -> "443" 
  "430" -> "444" 
  "433" -> "434" 
  "434" -> "435" 
  "435" -> "436" 
  "435" -> "439" 
  "435" -> "441" 
  "436" -> "437" 
  "436" -> "438" 
  "439" -> "440" 
}

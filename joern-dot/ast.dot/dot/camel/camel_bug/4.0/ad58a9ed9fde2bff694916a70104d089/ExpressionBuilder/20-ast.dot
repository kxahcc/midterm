digraph "tokenizeExpression" {  
"277" [label = <(METHOD,tokenizeExpression)<SUB>401</SUB>> ]
"278" [label = <(PARAM,final Expression&lt;E&gt; expression)<SUB>401</SUB>> ]
"279" [label = <(PARAM,final String token)<SUB>402</SUB>> ]
"280" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>402</SUB>> ]
"281" [label = <(RETURN,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String text = evaluateStringExpression(expression, exchange);\012        if (text == null) {\012            return null;\012        }\012        StringTokenizer iter = new StringTokenizer(text, token);\012        List&lt;String&gt; answer = new ArrayList&lt;String&gt;();\012        while (iter.hasMoreTokens()) {\012            answer.add(iter.nextToken());\012        }\012        return answer;\012    }\012\012    @Override\012    public String toString() {\012        return &quot;tokenize(&quot; + expression + &quot;, &quot; + token + &quot;)&quot;;\012    }\012};,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String text = evaluateStringExpression(expression, exchange);\012        if (text == null) {\012            return null;\012        }\012        StringTokenizer iter = new StringTokenizer(text, token);\012        List&lt;String&gt; answer = new ArrayList&lt;String&gt;();\012        while (iter.hasMoreTokens()) {\012            answer.add(iter.nextToken());\012        }\012        return answer;\012    }\012\012    @Override\012    public String toString() {\012        return &quot;tokenize(&quot; + expression + &quot;, &quot; + token + &quot;)&quot;;\012    }\012};)<SUB>403</SUB>> ]
"282" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>403</SUB>> ]
"283" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"284" [label = <(IDENTIFIER,$obj18,&lt;empty&gt;)> ]
"285" [label = <(&lt;operator&gt;.alloc,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String text = evaluateStringExpression(expression, exchange);\012        if (text == null) {\012            return null;\012        }\012        StringTokenizer iter = new StringTokenizer(text, token);\012        List&lt;String&gt; answer = new ArrayList&lt;String&gt;();\012        while (iter.hasMoreTokens()) {\012            answer.add(iter.nextToken());\012        }\012        return answer;\012    }\012\012    @Override\012    public String toString() {\012        return &quot;tokenize(&quot; + expression + &quot;, &quot; + token + &quot;)&quot;;\012    }\012})<SUB>403</SUB>> ]
"286" [label = <(&lt;init&gt;,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String text = evaluateStringExpression(expression, exchange);\012        if (text == null) {\012            return null;\012        }\012        StringTokenizer iter = new StringTokenizer(text, token);\012        List&lt;String&gt; answer = new ArrayList&lt;String&gt;();\012        while (iter.hasMoreTokens()) {\012            answer.add(iter.nextToken());\012        }\012        return answer;\012    }\012\012    @Override\012    public String toString() {\012        return &quot;tokenize(&quot; + expression + &quot;, &quot; + token + &quot;)&quot;;\012    }\012})<SUB>403</SUB>> ]
"287" [label = <(IDENTIFIER,$obj18,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String text = evaluateStringExpression(expression, exchange);\012        if (text == null) {\012            return null;\012        }\012        StringTokenizer iter = new StringTokenizer(text, token);\012        List&lt;String&gt; answer = new ArrayList&lt;String&gt;();\012        while (iter.hasMoreTokens()) {\012            answer.add(iter.nextToken());\012        }\012        return answer;\012    }\012\012    @Override\012    public String toString() {\012        return &quot;tokenize(&quot; + expression + &quot;, &quot; + token + &quot;)&quot;;\012    }\012})> ]
"288" [label = <(IDENTIFIER,$obj18,&lt;empty&gt;)> ]
"289" [label = <(MODIFIER,PUBLIC)> ]
"290" [label = <(MODIFIER,STATIC)> ]
"291" [label = <(METHOD_RETURN,ANY)<SUB>401</SUB>> ]
  "277" -> "278" 
  "277" -> "279" 
  "277" -> "280" 
  "277" -> "289" 
  "277" -> "290" 
  "277" -> "291" 
  "280" -> "281" 
  "281" -> "282" 
  "282" -> "283" 
  "282" -> "286" 
  "282" -> "288" 
  "283" -> "284" 
  "283" -> "285" 
  "286" -> "287" 
}

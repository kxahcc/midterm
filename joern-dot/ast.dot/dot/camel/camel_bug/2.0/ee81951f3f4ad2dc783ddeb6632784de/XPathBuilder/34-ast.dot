digraph "getOutHeaderFunction" {  
"720" [label = <(METHOD,getOutHeaderFunction)<SUB>335</SUB>> ]
"721" [label = <(PARAM,this)<SUB>335</SUB>> ]
"722" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>335</SUB>> ]
"723" [label = <(CONTROL_STRUCTURE,if (outHeaderFunction == null),if (outHeaderFunction == null))<SUB>336</SUB>> ]
"724" [label = <(&lt;operator&gt;.equals,outHeaderFunction == null)<SUB>336</SUB>> ]
"725" [label = <(&lt;operator&gt;.fieldAccess,this.outHeaderFunction)<SUB>336</SUB>> ]
"726" [label = <(IDENTIFIER,this,outHeaderFunction == null)<SUB>336</SUB>> ]
"727" [label = <(FIELD_IDENTIFIER,outHeaderFunction,outHeaderFunction)<SUB>336</SUB>> ]
"728" [label = <(LITERAL,null,outHeaderFunction == null)<SUB>336</SUB>> ]
"729" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>336</SUB>> ]
"730" [label = <(&lt;operator&gt;.assignment,this.outHeaderFunction = new XPathFunction() {\012\012    public Object evaluate(List list) throws XPathFunctionException {\012        if (exchange != null &amp;&amp; !list.isEmpty()) {\012            Object value = list.get(0);\012            if (value != null) {\012                return exchange.getOut().getHeader(value.toString());\012            }\012        }\012        return null;\012    }\012})<SUB>337</SUB>> ]
"731" [label = <(&lt;operator&gt;.fieldAccess,this.outHeaderFunction)<SUB>337</SUB>> ]
"732" [label = <(IDENTIFIER,this,this.outHeaderFunction = new XPathFunction() {\012\012    public Object evaluate(List list) throws XPathFunctionException {\012        if (exchange != null &amp;&amp; !list.isEmpty()) {\012            Object value = list.get(0);\012            if (value != null) {\012                return exchange.getOut().getHeader(value.toString());\012            }\012        }\012        return null;\012    }\012})<SUB>337</SUB>> ]
"733" [label = <(FIELD_IDENTIFIER,outHeaderFunction,outHeaderFunction)<SUB>337</SUB>> ]
"734" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>337</SUB>> ]
"735" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"736" [label = <(IDENTIFIER,$obj8,&lt;empty&gt;)> ]
"737" [label = <(&lt;operator&gt;.alloc,new XPathFunction() {\012\012    public Object evaluate(List list) throws XPathFunctionException {\012        if (exchange != null &amp;&amp; !list.isEmpty()) {\012            Object value = list.get(0);\012            if (value != null) {\012                return exchange.getOut().getHeader(value.toString());\012            }\012        }\012        return null;\012    }\012})<SUB>337</SUB>> ]
"738" [label = <(&lt;init&gt;,new XPathFunction() {\012\012    public Object evaluate(List list) throws XPathFunctionException {\012        if (exchange != null &amp;&amp; !list.isEmpty()) {\012            Object value = list.get(0);\012            if (value != null) {\012                return exchange.getOut().getHeader(value.toString());\012            }\012        }\012        return null;\012    }\012})<SUB>337</SUB>> ]
"739" [label = <(IDENTIFIER,$obj8,new XPathFunction() {\012\012    public Object evaluate(List list) throws XPathFunctionException {\012        if (exchange != null &amp;&amp; !list.isEmpty()) {\012            Object value = list.get(0);\012            if (value != null) {\012                return exchange.getOut().getHeader(value.toString());\012            }\012        }\012        return null;\012    }\012})> ]
"740" [label = <(IDENTIFIER,$obj8,&lt;empty&gt;)> ]
"741" [label = <(RETURN,return outHeaderFunction;,return outHeaderFunction;)<SUB>349</SUB>> ]
"742" [label = <(&lt;operator&gt;.fieldAccess,this.outHeaderFunction)<SUB>349</SUB>> ]
"743" [label = <(IDENTIFIER,this,return outHeaderFunction;)<SUB>349</SUB>> ]
"744" [label = <(FIELD_IDENTIFIER,outHeaderFunction,outHeaderFunction)<SUB>349</SUB>> ]
"745" [label = <(MODIFIER,PUBLIC)> ]
"746" [label = <(MODIFIER,VIRTUAL)> ]
"747" [label = <(METHOD_RETURN,javax.xml.xpath.XPathFunction)<SUB>335</SUB>> ]
  "720" -> "721" 
  "720" -> "722" 
  "720" -> "745" 
  "720" -> "746" 
  "720" -> "747" 
  "722" -> "723" 
  "722" -> "741" 
  "723" -> "724" 
  "723" -> "729" 
  "724" -> "725" 
  "724" -> "728" 
  "725" -> "726" 
  "725" -> "727" 
  "729" -> "730" 
  "730" -> "731" 
  "730" -> "734" 
  "731" -> "732" 
  "731" -> "733" 
  "734" -> "735" 
  "734" -> "738" 
  "734" -> "740" 
  "735" -> "736" 
  "735" -> "737" 
  "738" -> "739" 
  "741" -> "742" 
  "742" -> "743" 
  "742" -> "744" 
}

digraph "createConsumer" {  
"221" [label = <(METHOD,createConsumer)<SUB>100</SUB>> ]
"17" [label = <(PARAM,this)<SUB>100</SUB>> ]
"222" [label = <(PARAM,Processor processor)<SUB>100</SUB>> ]
"223" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>100</SUB>> ]
"224" [label = <(RETURN,return new DefaultConsumer&lt;E&gt;(this, processor) {\012\012    @Override\012    public void start() throws Exception {\012        if (!allowMultipleConsumers &amp;&amp; !consumers.isEmpty()) {\012            throw new IllegalStateException(&quot;Endpoint &quot; + getEndpointUri() + &quot; only allows 1 active consumer but you attempted to start a 2nd consumer.&quot;);\012        }\012        consumers.add(this);\012        super.start();\012    }\012\012    @Override\012    public void stop() throws Exception {\012        super.stop();\012        consumers.remove(this);\012    }\012};,return new DefaultConsumer&lt;E&gt;(this, processor) {\012\012    @Override\012    public void start() throws Exception {\012        if (!allowMultipleConsumers &amp;&amp; !consumers.isEmpty()) {\012            throw new IllegalStateException(&quot;Endpoint &quot; + getEndpointUri() + &quot; only allows 1 active consumer but you attempted to start a 2nd consumer.&quot;);\012        }\012        consumers.add(this);\012        super.start();\012    }\012\012    @Override\012    public void stop() throws Exception {\012        super.stop();\012        consumers.remove(this);\012    }\012};)<SUB>101</SUB>> ]
"225" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>101</SUB>> ]
"226" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"227" [label = <(IDENTIFIER,$obj2,&lt;empty&gt;)> ]
"228" [label = <(&lt;operator&gt;.alloc,new DefaultConsumer&lt;E&gt;(this, processor) {\012\012    @Override\012    public void start() throws Exception {\012        if (!allowMultipleConsumers &amp;&amp; !consumers.isEmpty()) {\012            throw new IllegalStateException(&quot;Endpoint &quot; + getEndpointUri() + &quot; only allows 1 active consumer but you attempted to start a 2nd consumer.&quot;);\012        }\012        consumers.add(this);\012        super.start();\012    }\012\012    @Override\012    public void stop() throws Exception {\012        super.stop();\012        consumers.remove(this);\012    }\012})<SUB>101</SUB>> ]
"229" [label = <(&lt;init&gt;,new DefaultConsumer&lt;E&gt;(this, processor) {\012\012    @Override\012    public void start() throws Exception {\012        if (!allowMultipleConsumers &amp;&amp; !consumers.isEmpty()) {\012            throw new IllegalStateException(&quot;Endpoint &quot; + getEndpointUri() + &quot; only allows 1 active consumer but you attempted to start a 2nd consumer.&quot;);\012        }\012        consumers.add(this);\012        super.start();\012    }\012\012    @Override\012    public void stop() throws Exception {\012        super.stop();\012        consumers.remove(this);\012    }\012})<SUB>101</SUB>> ]
"230" [label = <(IDENTIFIER,$obj2,new DefaultConsumer&lt;E&gt;(this, processor) {\012\012    @Override\012    public void start() throws Exception {\012        if (!allowMultipleConsumers &amp;&amp; !consumers.isEmpty()) {\012            throw new IllegalStateException(&quot;Endpoint &quot; + getEndpointUri() + &quot; only allows 1 active consumer but you attempted to start a 2nd consumer.&quot;);\012        }\012        consumers.add(this);\012        super.start();\012    }\012\012    @Override\012    public void stop() throws Exception {\012        super.stop();\012        consumers.remove(this);\012    }\012})> ]
"16" [label = <(IDENTIFIER,this,new DefaultConsumer&lt;E&gt;(this, processor) {\012\012    @Override\012    public void start() throws Exception {\012        if (!allowMultipleConsumers &amp;&amp; !consumers.isEmpty()) {\012            throw new IllegalStateException(&quot;Endpoint &quot; + getEndpointUri() + &quot; only allows 1 active consumer but you attempted to start a 2nd consumer.&quot;);\012        }\012        consumers.add(this);\012        super.start();\012    }\012\012    @Override\012    public void stop() throws Exception {\012        super.stop();\012        consumers.remove(this);\012    }\012})<SUB>101</SUB>> ]
"231" [label = <(IDENTIFIER,processor,new DefaultConsumer&lt;E&gt;(this, processor) {\012\012    @Override\012    public void start() throws Exception {\012        if (!allowMultipleConsumers &amp;&amp; !consumers.isEmpty()) {\012            throw new IllegalStateException(&quot;Endpoint &quot; + getEndpointUri() + &quot; only allows 1 active consumer but you attempted to start a 2nd consumer.&quot;);\012        }\012        consumers.add(this);\012        super.start();\012    }\012\012    @Override\012    public void stop() throws Exception {\012        super.stop();\012        consumers.remove(this);\012    }\012})<SUB>101</SUB>> ]
"232" [label = <(IDENTIFIER,$obj2,&lt;empty&gt;)> ]
"233" [label = <(MODIFIER,PUBLIC)> ]
"234" [label = <(MODIFIER,VIRTUAL)> ]
"235" [label = <(METHOD_RETURN,ANY)<SUB>100</SUB>> ]
  "221" -> "17" 
  "221" -> "222" 
  "221" -> "223" 
  "221" -> "233" 
  "221" -> "234" 
  "221" -> "235" 
  "223" -> "224" 
  "224" -> "225" 
  "225" -> "226" 
  "225" -> "229" 
  "225" -> "232" 
  "226" -> "227" 
  "226" -> "228" 
  "229" -> "230" 
  "229" -> "16" 
  "229" -> "231" 
}

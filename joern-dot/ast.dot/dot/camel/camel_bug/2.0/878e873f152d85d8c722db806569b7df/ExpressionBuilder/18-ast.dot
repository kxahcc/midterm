digraph "tokenizeExpression" {  
"251" [label = <(METHOD,tokenizeExpression)<SUB>353</SUB>> ]
"252" [label = <(PARAM,final Expression&lt;E&gt; expression)<SUB>353</SUB>> ]
"253" [label = <(PARAM,final String token)<SUB>354</SUB>> ]
"254" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>354</SUB>> ]
"255" [label = <(RETURN,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String text = evaluateStringExpression(expression, exchange);\012        if (text == null) {\012            return null;\012        }\012        StringTokenizer iter = new StringTokenizer(text, token);\012        List&lt;String&gt; answer = new ArrayList&lt;String&gt;();\012        while (iter.hasMoreTokens()) {\012            answer.add(iter.nextToken());\012        }\012        return answer;\012    }\012\012    @Override\012    public String toString() {\012        return &quot;tokenize(&quot; + expression + &quot;, &quot; + token + &quot;)&quot;;\012    }\012};,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String text = evaluateStringExpression(expression, exchange);\012        if (text == null) {\012            return null;\012        }\012        StringTokenizer iter = new StringTokenizer(text, token);\012        List&lt;String&gt; answer = new ArrayList&lt;String&gt;();\012        while (iter.hasMoreTokens()) {\012            answer.add(iter.nextToken());\012        }\012        return answer;\012    }\012\012    @Override\012    public String toString() {\012        return &quot;tokenize(&quot; + expression + &quot;, &quot; + token + &quot;)&quot;;\012    }\012};)<SUB>355</SUB>> ]
"256" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>355</SUB>> ]
"257" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"258" [label = <(IDENTIFIER,$obj16,&lt;empty&gt;)> ]
"259" [label = <(&lt;operator&gt;.alloc,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String text = evaluateStringExpression(expression, exchange);\012        if (text == null) {\012            return null;\012        }\012        StringTokenizer iter = new StringTokenizer(text, token);\012        List&lt;String&gt; answer = new ArrayList&lt;String&gt;();\012        while (iter.hasMoreTokens()) {\012            answer.add(iter.nextToken());\012        }\012        return answer;\012    }\012\012    @Override\012    public String toString() {\012        return &quot;tokenize(&quot; + expression + &quot;, &quot; + token + &quot;)&quot;;\012    }\012})<SUB>355</SUB>> ]
"260" [label = <(&lt;init&gt;,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String text = evaluateStringExpression(expression, exchange);\012        if (text == null) {\012            return null;\012        }\012        StringTokenizer iter = new StringTokenizer(text, token);\012        List&lt;String&gt; answer = new ArrayList&lt;String&gt;();\012        while (iter.hasMoreTokens()) {\012            answer.add(iter.nextToken());\012        }\012        return answer;\012    }\012\012    @Override\012    public String toString() {\012        return &quot;tokenize(&quot; + expression + &quot;, &quot; + token + &quot;)&quot;;\012    }\012})<SUB>355</SUB>> ]
"261" [label = <(IDENTIFIER,$obj16,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String text = evaluateStringExpression(expression, exchange);\012        if (text == null) {\012            return null;\012        }\012        StringTokenizer iter = new StringTokenizer(text, token);\012        List&lt;String&gt; answer = new ArrayList&lt;String&gt;();\012        while (iter.hasMoreTokens()) {\012            answer.add(iter.nextToken());\012        }\012        return answer;\012    }\012\012    @Override\012    public String toString() {\012        return &quot;tokenize(&quot; + expression + &quot;, &quot; + token + &quot;)&quot;;\012    }\012})> ]
"262" [label = <(IDENTIFIER,$obj16,&lt;empty&gt;)> ]
"263" [label = <(MODIFIER,PUBLIC)> ]
"264" [label = <(MODIFIER,STATIC)> ]
"265" [label = <(METHOD_RETURN,ANY)<SUB>353</SUB>> ]
  "251" -> "252" 
  "251" -> "253" 
  "251" -> "254" 
  "251" -> "263" 
  "251" -> "264" 
  "251" -> "265" 
  "254" -> "255" 
  "255" -> "256" 
  "256" -> "257" 
  "256" -> "260" 
  "256" -> "262" 
  "257" -> "258" 
  "257" -> "259" 
  "260" -> "261" 
}

digraph "fileNameNoExtensionExpression" {  
"35" [label = <(METHOD,fileNameNoExtensionExpression)<SUB>56</SUB>> ]
"36" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>56</SUB>> ]
"37" [label = <(RETURN,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String name = exchange.getIn().getHeader(&quot;CamelFileName&quot;, String.class);\012        if (name.lastIndexOf(&quot;.&quot;) != -1) {\012            return name.substring(0, name.lastIndexOf('.'));\012        } else {\012            return name;\012        }\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:name.noext&quot;;\012    }\012};,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String name = exchange.getIn().getHeader(&quot;CamelFileName&quot;, String.class);\012        if (name.lastIndexOf(&quot;.&quot;) != -1) {\012            return name.substring(0, name.lastIndexOf('.'));\012        } else {\012            return name;\012        }\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:name.noext&quot;;\012    }\012};)<SUB>57</SUB>> ]
"38" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>57</SUB>> ]
"39" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"40" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"41" [label = <(&lt;operator&gt;.alloc,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String name = exchange.getIn().getHeader(&quot;CamelFileName&quot;, String.class);\012        if (name.lastIndexOf(&quot;.&quot;) != -1) {\012            return name.substring(0, name.lastIndexOf('.'));\012        } else {\012            return name;\012        }\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:name.noext&quot;;\012    }\012})<SUB>57</SUB>> ]
"42" [label = <(&lt;init&gt;,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String name = exchange.getIn().getHeader(&quot;CamelFileName&quot;, String.class);\012        if (name.lastIndexOf(&quot;.&quot;) != -1) {\012            return name.substring(0, name.lastIndexOf('.'));\012        } else {\012            return name;\012        }\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:name.noext&quot;;\012    }\012})<SUB>57</SUB>> ]
"43" [label = <(IDENTIFIER,$obj1,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String name = exchange.getIn().getHeader(&quot;CamelFileName&quot;, String.class);\012        if (name.lastIndexOf(&quot;.&quot;) != -1) {\012            return name.substring(0, name.lastIndexOf('.'));\012        } else {\012            return name;\012        }\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:name.noext&quot;;\012    }\012})> ]
"44" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"45" [label = <(MODIFIER,PUBLIC)> ]
"46" [label = <(MODIFIER,STATIC)> ]
"47" [label = <(METHOD_RETURN,ANY)<SUB>56</SUB>> ]
  "35" -> "36" 
  "35" -> "45" 
  "35" -> "46" 
  "35" -> "47" 
  "36" -> "37" 
  "37" -> "38" 
  "38" -> "39" 
  "38" -> "42" 
  "38" -> "44" 
  "39" -> "40" 
  "39" -> "41" 
  "42" -> "43" 
}

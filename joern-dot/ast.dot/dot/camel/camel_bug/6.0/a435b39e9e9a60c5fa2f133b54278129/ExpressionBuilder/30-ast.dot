digraph "concatExpression" {  
"633" [label = <(METHOD,concatExpression)<SUB>599</SUB>> ]
"634" [label = <(PARAM,final Collection&lt;Expression&gt; expressions)<SUB>599</SUB>> ]
"635" [label = <(PARAM,final String expression)<SUB>599</SUB>> ]
"636" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>599</SUB>> ]
"637" [label = <(RETURN,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        StringBuffer buffer = new StringBuffer();\012        for (Expression&lt;E&gt; expression : expressions) {\012            String text = evaluateStringExpression(expression, exchange);\012            if (text != null) {\012                buffer.append(text);\012            }\012        }\012        return buffer.toString();\012    }\012\012    @Override\012    public String toString() {\012        if (expression != null) {\012            return expression;\012        } else {\012            return &quot;concat&quot; + expressions;\012        }\012    }\012};,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        StringBuffer buffer = new StringBuffer();\012        for (Expression&lt;E&gt; expression : expressions) {\012            String text = evaluateStringExpression(expression, exchange);\012            if (text != null) {\012                buffer.append(text);\012            }\012        }\012        return buffer.toString();\012    }\012\012    @Override\012    public String toString() {\012        if (expression != null) {\012            return expression;\012        } else {\012            return &quot;concat&quot; + expressions;\012        }\012    }\012};)<SUB>600</SUB>> ]
"638" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>600</SUB>> ]
"639" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"640" [label = <(IDENTIFIER,$obj35,&lt;empty&gt;)> ]
"641" [label = <(&lt;operator&gt;.alloc,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        StringBuffer buffer = new StringBuffer();\012        for (Expression&lt;E&gt; expression : expressions) {\012            String text = evaluateStringExpression(expression, exchange);\012            if (text != null) {\012                buffer.append(text);\012            }\012        }\012        return buffer.toString();\012    }\012\012    @Override\012    public String toString() {\012        if (expression != null) {\012            return expression;\012        } else {\012            return &quot;concat&quot; + expressions;\012        }\012    }\012})<SUB>600</SUB>> ]
"642" [label = <(&lt;init&gt;,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        StringBuffer buffer = new StringBuffer();\012        for (Expression&lt;E&gt; expression : expressions) {\012            String text = evaluateStringExpression(expression, exchange);\012            if (text != null) {\012                buffer.append(text);\012            }\012        }\012        return buffer.toString();\012    }\012\012    @Override\012    public String toString() {\012        if (expression != null) {\012            return expression;\012        } else {\012            return &quot;concat&quot; + expressions;\012        }\012    }\012})<SUB>600</SUB>> ]
"643" [label = <(IDENTIFIER,$obj35,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        StringBuffer buffer = new StringBuffer();\012        for (Expression&lt;E&gt; expression : expressions) {\012            String text = evaluateStringExpression(expression, exchange);\012            if (text != null) {\012                buffer.append(text);\012            }\012        }\012        return buffer.toString();\012    }\012\012    @Override\012    public String toString() {\012        if (expression != null) {\012            return expression;\012        } else {\012            return &quot;concat&quot; + expressions;\012        }\012    }\012})> ]
"644" [label = <(IDENTIFIER,$obj35,&lt;empty&gt;)> ]
"645" [label = <(MODIFIER,PUBLIC)> ]
"646" [label = <(MODIFIER,STATIC)> ]
"647" [label = <(METHOD_RETURN,ANY)<SUB>599</SUB>> ]
  "633" -> "634" 
  "633" -> "635" 
  "633" -> "636" 
  "633" -> "645" 
  "633" -> "646" 
  "633" -> "647" 
  "636" -> "637" 
  "637" -> "638" 
  "638" -> "639" 
  "638" -> "642" 
  "638" -> "644" 
  "639" -> "640" 
  "639" -> "641" 
  "642" -> "643" 
}

digraph "message" {  
"1202" [label = <(METHOD,message)<SUB>495</SUB>> ]
"88" [label = <(PARAM,this)<SUB>495</SUB>> ]
"1203" [label = <(PARAM,final int messageIndex)<SUB>495</SUB>> ]
"1204" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>495</SUB>> ]
"86" [label = <(LOCAL,AssertionClause clause: ANY)> ]
"1205" [label = <(&lt;operator&gt;.assignment,ANY clause = new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>496</SUB>> ]
"1206" [label = <(IDENTIFIER,clause,ANY clause = new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>496</SUB>> ]
"1207" [label = <(&lt;operator&gt;.alloc,new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>496</SUB>> ]
"1208" [label = <(&lt;init&gt;,new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>496</SUB>> ]
"85" [label = <(IDENTIFIER,clause,new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>496</SUB>> ]
"1209" [label = <(expects,expects(clause))<SUB>501</SUB>> ]
"87" [label = <(IDENTIFIER,this,expects(clause))<SUB>501</SUB>> ]
"1210" [label = <(IDENTIFIER,clause,expects(clause))<SUB>501</SUB>> ]
"1211" [label = <(RETURN,return clause;,return clause;)<SUB>502</SUB>> ]
"1212" [label = <(IDENTIFIER,clause,return clause;)<SUB>502</SUB>> ]
"1213" [label = <(MODIFIER,PUBLIC)> ]
"1214" [label = <(MODIFIER,VIRTUAL)> ]
"1215" [label = <(METHOD_RETURN,ANY)<SUB>495</SUB>> ]
  "1202" -> "88" 
  "1202" -> "1203" 
  "1202" -> "1204" 
  "1202" -> "1213" 
  "1202" -> "1214" 
  "1202" -> "1215" 
  "1204" -> "86" 
  "1204" -> "1205" 
  "1204" -> "1208" 
  "1204" -> "1209" 
  "1204" -> "1211" 
  "1205" -> "1206" 
  "1205" -> "1207" 
  "1208" -> "85" 
  "1209" -> "87" 
  "1209" -> "1210" 
  "1211" -> "1212" 
}

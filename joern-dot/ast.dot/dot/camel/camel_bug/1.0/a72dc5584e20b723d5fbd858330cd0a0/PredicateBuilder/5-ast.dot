digraph "isLessThanOrEqualTo" {  
"114" [label = <(METHOD,isLessThanOrEqualTo)<SUB>112</SUB>> ]
"115" [label = <(PARAM,final Expression&lt;E&gt; left)<SUB>112</SUB>> ]
"116" [label = <(PARAM,final Expression&lt;E&gt; right)<SUB>112</SUB>> ]
"117" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>112</SUB>> ]
"118" [label = <(RETURN,return new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return compare(leftValue, rightValue) &lt;= 0;\012    }\012\012    protected String getOperationText() {\012        return &quot;&lt;=&quot;;\012    }\012};,return new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return compare(leftValue, rightValue) &lt;= 0;\012    }\012\012    protected String getOperationText() {\012        return &quot;&lt;=&quot;;\012    }\012};)<SUB>113</SUB>> ]
"119" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>113</SUB>> ]
"120" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"121" [label = <(IDENTIFIER,$obj5,&lt;empty&gt;)> ]
"122" [label = <(&lt;operator&gt;.alloc,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return compare(leftValue, rightValue) &lt;= 0;\012    }\012\012    protected String getOperationText() {\012        return &quot;&lt;=&quot;;\012    }\012})<SUB>113</SUB>> ]
"123" [label = <(&lt;init&gt;,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return compare(leftValue, rightValue) &lt;= 0;\012    }\012\012    protected String getOperationText() {\012        return &quot;&lt;=&quot;;\012    }\012})<SUB>113</SUB>> ]
"124" [label = <(IDENTIFIER,$obj5,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return compare(leftValue, rightValue) &lt;= 0;\012    }\012\012    protected String getOperationText() {\012        return &quot;&lt;=&quot;;\012    }\012})> ]
"125" [label = <(IDENTIFIER,left,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return compare(leftValue, rightValue) &lt;= 0;\012    }\012\012    protected String getOperationText() {\012        return &quot;&lt;=&quot;;\012    }\012})<SUB>113</SUB>> ]
"126" [label = <(IDENTIFIER,right,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return compare(leftValue, rightValue) &lt;= 0;\012    }\012\012    protected String getOperationText() {\012        return &quot;&lt;=&quot;;\012    }\012})<SUB>113</SUB>> ]
"127" [label = <(IDENTIFIER,$obj5,&lt;empty&gt;)> ]
"128" [label = <(MODIFIER,PUBLIC)> ]
"129" [label = <(MODIFIER,STATIC)> ]
"130" [label = <(METHOD_RETURN,ANY)<SUB>112</SUB>> ]
  "114" -> "115" 
  "114" -> "116" 
  "114" -> "117" 
  "114" -> "128" 
  "114" -> "129" 
  "114" -> "130" 
  "117" -> "118" 
  "118" -> "119" 
  "119" -> "120" 
  "119" -> "123" 
  "119" -> "127" 
  "120" -> "121" 
  "120" -> "122" 
  "123" -> "124" 
  "123" -> "125" 
  "123" -> "126" 
}

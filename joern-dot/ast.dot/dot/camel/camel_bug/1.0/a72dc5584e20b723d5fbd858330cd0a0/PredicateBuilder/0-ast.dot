digraph "and" {  
"17" [label = <(METHOD,and)<SUB>40</SUB>> ]
"18" [label = <(PARAM,final Predicate&lt;E&gt; left)<SUB>40</SUB>> ]
"19" [label = <(PARAM,final Predicate&lt;E&gt; right)<SUB>40</SUB>> ]
"20" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>40</SUB>> ]
"21" [label = <(notNull,notNull(left, &quot;left&quot;))<SUB>41</SUB>> ]
"22" [label = <(IDENTIFIER,this,notNull(left, &quot;left&quot;))<SUB>41</SUB>> ]
"23" [label = <(IDENTIFIER,left,notNull(left, &quot;left&quot;))<SUB>41</SUB>> ]
"24" [label = <(LITERAL,&quot;left&quot;,notNull(left, &quot;left&quot;))<SUB>41</SUB>> ]
"25" [label = <(notNull,notNull(right, &quot;right&quot;))<SUB>42</SUB>> ]
"26" [label = <(IDENTIFIER,this,notNull(right, &quot;right&quot;))<SUB>42</SUB>> ]
"27" [label = <(IDENTIFIER,right,notNull(right, &quot;right&quot;))<SUB>42</SUB>> ]
"28" [label = <(LITERAL,&quot;right&quot;,notNull(right, &quot;right&quot;))<SUB>42</SUB>> ]
"29" [label = <(RETURN,return new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) &amp;&amp; right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) and (&quot; + right + &quot;)&quot;;\012    }\012};,return new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) &amp;&amp; right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) and (&quot; + right + &quot;)&quot;;\012    }\012};)<SUB>43</SUB>> ]
"30" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>43</SUB>> ]
"31" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"32" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"33" [label = <(&lt;operator&gt;.alloc,new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) &amp;&amp; right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) and (&quot; + right + &quot;)&quot;;\012    }\012})<SUB>43</SUB>> ]
"34" [label = <(&lt;init&gt;,new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) &amp;&amp; right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) and (&quot; + right + &quot;)&quot;;\012    }\012})<SUB>43</SUB>> ]
"35" [label = <(IDENTIFIER,$obj0,new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) &amp;&amp; right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) and (&quot; + right + &quot;)&quot;;\012    }\012})> ]
"36" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"37" [label = <(MODIFIER,PUBLIC)> ]
"38" [label = <(MODIFIER,STATIC)> ]
"39" [label = <(METHOD_RETURN,ANY)<SUB>40</SUB>> ]
  "17" -> "18" 
  "17" -> "19" 
  "17" -> "20" 
  "17" -> "37" 
  "17" -> "38" 
  "17" -> "39" 
  "20" -> "21" 
  "20" -> "25" 
  "20" -> "29" 
  "21" -> "22" 
  "21" -> "23" 
  "21" -> "24" 
  "25" -> "26" 
  "25" -> "27" 
  "25" -> "28" 
  "29" -> "30" 
  "30" -> "31" 
  "30" -> "34" 
  "30" -> "36" 
  "31" -> "32" 
  "31" -> "33" 
  "34" -> "35" 
}

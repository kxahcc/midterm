digraph "&lt;init&gt;" {  
"30" [label = <(METHOD,&lt;init&gt;)<SUB>31</SUB>> ]
"4" [label = <(PARAM,this)<SUB>31</SUB>> ]
"31" [label = <(PARAM,DebugInterceptor interceptor)<SUB>31</SUB>> ]
"32" [label = <(PARAM,Exchange exchange)<SUB>31</SUB>> ]
"33" [label = <(PARAM,Throwable exception)<SUB>31</SUB>> ]
"34" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>> ]
"35" [label = <(&lt;operator&gt;.assignment,this.interceptor = interceptor)<SUB>32</SUB>> ]
"36" [label = <(&lt;operator&gt;.fieldAccess,this.interceptor)<SUB>32</SUB>> ]
"3" [label = <(IDENTIFIER,this,this.interceptor = interceptor)<SUB>32</SUB>> ]
"37" [label = <(FIELD_IDENTIFIER,interceptor,interceptor)<SUB>32</SUB>> ]
"38" [label = <(IDENTIFIER,interceptor,this.interceptor = interceptor)<SUB>32</SUB>> ]
"39" [label = <(&lt;operator&gt;.assignment,this.exchange = exchange)<SUB>33</SUB>> ]
"40" [label = <(&lt;operator&gt;.fieldAccess,this.exchange)<SUB>33</SUB>> ]
"5" [label = <(IDENTIFIER,this,this.exchange = exchange)<SUB>33</SUB>> ]
"41" [label = <(FIELD_IDENTIFIER,exchange,exchange)<SUB>33</SUB>> ]
"42" [label = <(IDENTIFIER,exchange,this.exchange = exchange)<SUB>33</SUB>> ]
"43" [label = <(&lt;operator&gt;.assignment,this.exception = exception)<SUB>34</SUB>> ]
"44" [label = <(&lt;operator&gt;.fieldAccess,this.exception)<SUB>34</SUB>> ]
"6" [label = <(IDENTIFIER,this,this.exception = exception)<SUB>34</SUB>> ]
"45" [label = <(FIELD_IDENTIFIER,exception,exception)<SUB>34</SUB>> ]
"46" [label = <(IDENTIFIER,exception,this.exception = exception)<SUB>34</SUB>> ]
"47" [label = <(MODIFIER,CONSTRUCTOR)> ]
"48" [label = <(MODIFIER,PUBLIC)> ]
"49" [label = <(METHOD_RETURN,void)<SUB>35</SUB>> ]
  "30" -> "4" 
  "30" -> "31" 
  "30" -> "32" 
  "30" -> "33" 
  "30" -> "34" 
  "30" -> "47" 
  "30" -> "48" 
  "30" -> "49" 
  "34" -> "35" 
  "34" -> "39" 
  "34" -> "43" 
  "35" -> "36" 
  "35" -> "38" 
  "36" -> "3" 
  "36" -> "37" 
  "39" -> "40" 
  "39" -> "42" 
  "40" -> "5" 
  "40" -> "41" 
  "43" -> "44" 
  "43" -> "46" 
  "44" -> "6" 
  "44" -> "45" 
}

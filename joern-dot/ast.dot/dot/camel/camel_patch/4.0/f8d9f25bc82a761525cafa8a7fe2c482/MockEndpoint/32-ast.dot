digraph "message" {  
"1129" [label = <(METHOD,message)<SUB>456</SUB>> ]
"77" [label = <(PARAM,this)<SUB>456</SUB>> ]
"1130" [label = <(PARAM,final int messageIndex)<SUB>456</SUB>> ]
"1131" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>456</SUB>> ]
"75" [label = <(LOCAL,AssertionClause clause: ANY)> ]
"1132" [label = <(&lt;operator&gt;.assignment,ANY clause = new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>457</SUB>> ]
"1133" [label = <(IDENTIFIER,clause,ANY clause = new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>457</SUB>> ]
"1134" [label = <(&lt;operator&gt;.alloc,new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>457</SUB>> ]
"1135" [label = <(&lt;init&gt;,new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>457</SUB>> ]
"74" [label = <(IDENTIFIER,clause,new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>457</SUB>> ]
"1136" [label = <(expects,expects(clause))<SUB>462</SUB>> ]
"76" [label = <(IDENTIFIER,this,expects(clause))<SUB>462</SUB>> ]
"1137" [label = <(IDENTIFIER,clause,expects(clause))<SUB>462</SUB>> ]
"1138" [label = <(RETURN,return clause;,return clause;)<SUB>463</SUB>> ]
"1139" [label = <(IDENTIFIER,clause,return clause;)<SUB>463</SUB>> ]
"1140" [label = <(MODIFIER,PUBLIC)> ]
"1141" [label = <(MODIFIER,VIRTUAL)> ]
"1142" [label = <(METHOD_RETURN,ANY)<SUB>456</SUB>> ]
  "1129" -> "77" 
  "1129" -> "1130" 
  "1129" -> "1131" 
  "1129" -> "1140" 
  "1129" -> "1141" 
  "1129" -> "1142" 
  "1131" -> "75" 
  "1131" -> "1132" 
  "1131" -> "1135" 
  "1131" -> "1136" 
  "1131" -> "1138" 
  "1132" -> "1133" 
  "1132" -> "1134" 
  "1135" -> "74" 
  "1136" -> "76" 
  "1136" -> "1137" 
  "1138" -> "1139" 
}

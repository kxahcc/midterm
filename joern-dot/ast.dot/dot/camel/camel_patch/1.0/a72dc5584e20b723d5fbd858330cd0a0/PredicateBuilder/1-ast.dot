digraph "or" {  
"41" [label = <(METHOD,or)<SUB>58</SUB>> ]
"42" [label = <(PARAM,final Predicate&lt;E&gt; left)<SUB>58</SUB>> ]
"43" [label = <(PARAM,final Predicate&lt;E&gt; right)<SUB>58</SUB>> ]
"44" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>58</SUB>> ]
"45" [label = <(notNull,notNull(left, &quot;left&quot;))<SUB>59</SUB>> ]
"46" [label = <(IDENTIFIER,this,notNull(left, &quot;left&quot;))<SUB>59</SUB>> ]
"47" [label = <(IDENTIFIER,left,notNull(left, &quot;left&quot;))<SUB>59</SUB>> ]
"48" [label = <(LITERAL,&quot;left&quot;,notNull(left, &quot;left&quot;))<SUB>59</SUB>> ]
"49" [label = <(notNull,notNull(right, &quot;right&quot;))<SUB>60</SUB>> ]
"50" [label = <(IDENTIFIER,this,notNull(right, &quot;right&quot;))<SUB>60</SUB>> ]
"51" [label = <(IDENTIFIER,right,notNull(right, &quot;right&quot;))<SUB>60</SUB>> ]
"52" [label = <(LITERAL,&quot;right&quot;,notNull(right, &quot;right&quot;))<SUB>60</SUB>> ]
"53" [label = <(RETURN,return new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) || right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) or (&quot; + right + &quot;)&quot;;\012    }\012};,return new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) || right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) or (&quot; + right + &quot;)&quot;;\012    }\012};)<SUB>61</SUB>> ]
"54" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>61</SUB>> ]
"55" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"56" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"57" [label = <(&lt;operator&gt;.alloc,new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) || right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) or (&quot; + right + &quot;)&quot;;\012    }\012})<SUB>61</SUB>> ]
"58" [label = <(&lt;init&gt;,new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) || right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) or (&quot; + right + &quot;)&quot;;\012    }\012})<SUB>61</SUB>> ]
"59" [label = <(IDENTIFIER,$obj1,new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) || right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) or (&quot; + right + &quot;)&quot;;\012    }\012})> ]
"60" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"61" [label = <(MODIFIER,PUBLIC)> ]
"62" [label = <(MODIFIER,STATIC)> ]
"63" [label = <(METHOD_RETURN,ANY)<SUB>58</SUB>> ]
  "41" -> "42" 
  "41" -> "43" 
  "41" -> "44" 
  "41" -> "61" 
  "41" -> "62" 
  "41" -> "63" 
  "44" -> "45" 
  "44" -> "49" 
  "44" -> "53" 
  "45" -> "46" 
  "45" -> "47" 
  "45" -> "48" 
  "49" -> "50" 
  "49" -> "51" 
  "49" -> "52" 
  "53" -> "54" 
  "54" -> "55" 
  "54" -> "58" 
  "54" -> "60" 
  "55" -> "56" 
  "55" -> "57" 
  "58" -> "59" 
}

digraph "isEqualTo" {  
"64" [label = <(METHOD,isEqualTo)<SUB>73</SUB>> ]
"65" [label = <(PARAM,final Expression&lt;E&gt; left)<SUB>73</SUB>> ]
"66" [label = <(PARAM,final Expression&lt;E&gt; right)<SUB>73</SUB>> ]
"67" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>73</SUB>> ]
"68" [label = <(RETURN,return new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return ObjectHelper.equals(leftValue, rightValue);\012    }\012\012    protected String getOperationText() {\012        return &quot;==&quot;;\012    }\012};,return new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return ObjectHelper.equals(leftValue, rightValue);\012    }\012\012    protected String getOperationText() {\012        return &quot;==&quot;;\012    }\012};)<SUB>74</SUB>> ]
"69" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>74</SUB>> ]
"70" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"71" [label = <(IDENTIFIER,$obj2,&lt;empty&gt;)> ]
"72" [label = <(&lt;operator&gt;.alloc,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return ObjectHelper.equals(leftValue, rightValue);\012    }\012\012    protected String getOperationText() {\012        return &quot;==&quot;;\012    }\012})<SUB>74</SUB>> ]
"73" [label = <(&lt;init&gt;,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return ObjectHelper.equals(leftValue, rightValue);\012    }\012\012    protected String getOperationText() {\012        return &quot;==&quot;;\012    }\012})<SUB>74</SUB>> ]
"74" [label = <(IDENTIFIER,$obj2,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return ObjectHelper.equals(leftValue, rightValue);\012    }\012\012    protected String getOperationText() {\012        return &quot;==&quot;;\012    }\012})> ]
"75" [label = <(IDENTIFIER,left,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return ObjectHelper.equals(leftValue, rightValue);\012    }\012\012    protected String getOperationText() {\012        return &quot;==&quot;;\012    }\012})<SUB>74</SUB>> ]
"76" [label = <(IDENTIFIER,right,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return ObjectHelper.equals(leftValue, rightValue);\012    }\012\012    protected String getOperationText() {\012        return &quot;==&quot;;\012    }\012})<SUB>74</SUB>> ]
"77" [label = <(IDENTIFIER,$obj2,&lt;empty&gt;)> ]
"78" [label = <(MODIFIER,PUBLIC)> ]
"79" [label = <(MODIFIER,STATIC)> ]
"80" [label = <(METHOD_RETURN,ANY)<SUB>73</SUB>> ]
  "64" -> "65" 
  "64" -> "66" 
  "64" -> "67" 
  "64" -> "78" 
  "64" -> "79" 
  "64" -> "80" 
  "67" -> "68" 
  "68" -> "69" 
  "69" -> "70" 
  "69" -> "73" 
  "69" -> "77" 
  "70" -> "71" 
  "70" -> "72" 
  "73" -> "74" 
  "73" -> "75" 
  "73" -> "76" 
}

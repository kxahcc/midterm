digraph "iterator" {  
"36" [label = <(METHOD,iterator)<SUB>44</SUB>> ]
"37" [label = <(PARAM,Object value)<SUB>45</SUB>> ]
"38" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>45</SUB>> ]
"39" [label = <(CONTROL_STRUCTURE,if (value == null),if (value == null))<SUB>46</SUB>> ]
"40" [label = <(&lt;operator&gt;.equals,value == null)<SUB>46</SUB>> ]
"41" [label = <(IDENTIFIER,value,value == null)<SUB>46</SUB>> ]
"42" [label = <(LITERAL,null,value == null)<SUB>46</SUB>> ]
"43" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>46</SUB>> ]
"44" [label = <(RETURN,return Collections.EMPTY_LIST.iterator();,return Collections.EMPTY_LIST.iterator();)<SUB>47</SUB>> ]
"45" [label = <(iterator,Collections.EMPTY_LIST.iterator())<SUB>47</SUB>> ]
"46" [label = <(&lt;operator&gt;.fieldAccess,Collections.EMPTY_LIST)<SUB>47</SUB>> ]
"47" [label = <(IDENTIFIER,Collections,Collections.EMPTY_LIST.iterator())<SUB>47</SUB>> ]
"48" [label = <(FIELD_IDENTIFIER,EMPTY_LIST,EMPTY_LIST)<SUB>47</SUB>> ]
"49" [label = <(CONTROL_STRUCTURE,else,else)<SUB>49</SUB>> ]
"50" [label = <(CONTROL_STRUCTURE,if (value instanceof Collection),if (value instanceof Collection))<SUB>49</SUB>> ]
"51" [label = <(&lt;operator&gt;.instanceOf,value instanceof Collection)<SUB>49</SUB>> ]
"52" [label = <(IDENTIFIER,value,value instanceof Collection)<SUB>49</SUB>> ]
"53" [label = <(TYPE_REF,Collection,Collection)<SUB>49</SUB>> ]
"54" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>49</SUB>> ]
"55" [label = <(LOCAL,Collection collection: java.util.Collection)> ]
"56" [label = <(&lt;operator&gt;.assignment,Collection collection = (Collection) value)<SUB>50</SUB>> ]
"57" [label = <(IDENTIFIER,collection,Collection collection = (Collection) value)<SUB>50</SUB>> ]
"58" [label = <(&lt;operator&gt;.cast,(Collection) value)<SUB>50</SUB>> ]
"59" [label = <(TYPE_REF,Collection,Collection)<SUB>50</SUB>> ]
"60" [label = <(IDENTIFIER,value,(Collection) value)<SUB>50</SUB>> ]
"61" [label = <(RETURN,return collection.iterator();,return collection.iterator();)<SUB>51</SUB>> ]
"62" [label = <(iterator,collection.iterator())<SUB>51</SUB>> ]
"63" [label = <(IDENTIFIER,collection,collection.iterator())<SUB>51</SUB>> ]
"64" [label = <(CONTROL_STRUCTURE,else,else)<SUB>53</SUB>> ]
"65" [label = <(CONTROL_STRUCTURE,if (value.getClass().isArray()),if (value.getClass().isArray()))<SUB>53</SUB>> ]
"66" [label = <(isArray,value.getClass().isArray())<SUB>53</SUB>> ]
"67" [label = <(getClass,value.getClass())<SUB>53</SUB>> ]
"68" [label = <(IDENTIFIER,value,value.getClass())<SUB>53</SUB>> ]
"69" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>53</SUB>> ]
"70" [label = <(RETURN,return Arrays.asList(value).iterator();,return Arrays.asList(value).iterator();)<SUB>55</SUB>> ]
"71" [label = <(iterator,Arrays.asList(value).iterator())<SUB>55</SUB>> ]
"72" [label = <(asList,Arrays.asList(value))<SUB>55</SUB>> ]
"73" [label = <(IDENTIFIER,Arrays,Arrays.asList(value))<SUB>55</SUB>> ]
"74" [label = <(&lt;operator&gt;.arrayInitializer,&lt;operator&gt;.arrayInitializer)<SUB>55</SUB>> ]
"75" [label = <(IDENTIFIER,value,&lt;operator&gt;.arrayInitializer)<SUB>55</SUB>> ]
"76" [label = <(CONTROL_STRUCTURE,else,else)<SUB>57</SUB>> ]
"77" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>57</SUB>> ]
"78" [label = <(RETURN,return Collections.singletonList(value).iterator();,return Collections.singletonList(value).iterator();)<SUB>58</SUB>> ]
"79" [label = <(iterator,Collections.singletonList(value).iterator())<SUB>58</SUB>> ]
"80" [label = <(singletonList,Collections.singletonList(value))<SUB>58</SUB>> ]
"81" [label = <(IDENTIFIER,Collections,Collections.singletonList(value))<SUB>58</SUB>> ]
"82" [label = <(IDENTIFIER,value,Collections.singletonList(value))<SUB>58</SUB>> ]
"83" [label = <(MODIFIER,PUBLIC)> ]
"84" [label = <(MODIFIER,STATIC)> ]
"85" [label = <(ANNOTATION,@Converter,@Converter)<SUB>44</SUB>> ]
"86" [label = <(METHOD_RETURN,java.util.Iterator)<SUB>45</SUB>> ]
  "36" -> "37" 
  "36" -> "38" 
  "36" -> "83" 
  "36" -> "84" 
  "36" -> "85" 
  "36" -> "86" 
  "38" -> "39" 
  "39" -> "40" 
  "39" -> "43" 
  "39" -> "49" 
  "40" -> "41" 
  "40" -> "42" 
  "43" -> "44" 
  "44" -> "45" 
  "45" -> "46" 
  "46" -> "47" 
  "46" -> "48" 
  "49" -> "50" 
  "50" -> "51" 
  "50" -> "54" 
  "50" -> "64" 
  "51" -> "52" 
  "51" -> "53" 
  "54" -> "55" 
  "54" -> "56" 
  "54" -> "61" 
  "56" -> "57" 
  "56" -> "58" 
  "58" -> "59" 
  "58" -> "60" 
  "61" -> "62" 
  "62" -> "63" 
  "64" -> "65" 
  "65" -> "66" 
  "65" -> "69" 
  "65" -> "76" 
  "66" -> "67" 
  "67" -> "68" 
  "69" -> "70" 
  "70" -> "71" 
  "71" -> "72" 
  "72" -> "73" 
  "72" -> "74" 
  "74" -> "75" 
  "76" -> "77" 
  "77" -> "78" 
  "78" -> "79" 
  "79" -> "80" 
  "80" -> "81" 
  "80" -> "82" 
}

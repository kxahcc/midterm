digraph "regexReplaceAll" {  
"177" [label = <(METHOD,regexReplaceAll)<SUB>244</SUB>> ]
"178" [label = <(PARAM,final Expression&lt;E&gt; expression)<SUB>244</SUB>> ]
"179" [label = <(PARAM,String regex)<SUB>244</SUB>> ]
"180" [label = <(PARAM,final String replacement)<SUB>244</SUB>> ]
"181" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>244</SUB>> ]
"182" [label = <(LOCAL,Pattern pattern: java.util.regex.Pattern)> ]
"183" [label = <(&lt;operator&gt;.assignment,Pattern pattern = Pattern.compile(regex))<SUB>245</SUB>> ]
"184" [label = <(IDENTIFIER,pattern,Pattern pattern = Pattern.compile(regex))<SUB>245</SUB>> ]
"185" [label = <(compile,Pattern.compile(regex))<SUB>245</SUB>> ]
"186" [label = <(IDENTIFIER,Pattern,Pattern.compile(regex))<SUB>245</SUB>> ]
"187" [label = <(IDENTIFIER,regex,Pattern.compile(regex))<SUB>245</SUB>> ]
"188" [label = <(RETURN,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String text = evaluateStringExpression(expression, exchange);\012        if (text == null) {\012            return null;\012        }\012        return pattern.matcher(text).replaceAll(replacement);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;regexReplaceAll(&quot; + expression + &quot;, &quot; + pattern.pattern() + &quot;)&quot;;\012    }\012};,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String text = evaluateStringExpression(expression, exchange);\012        if (text == null) {\012            return null;\012        }\012        return pattern.matcher(text).replaceAll(replacement);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;regexReplaceAll(&quot; + expression + &quot;, &quot; + pattern.pattern() + &quot;)&quot;;\012    }\012};)<SUB>246</SUB>> ]
"189" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>246</SUB>> ]
"190" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"191" [label = <(IDENTIFIER,$obj11,&lt;empty&gt;)> ]
"192" [label = <(&lt;operator&gt;.alloc,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String text = evaluateStringExpression(expression, exchange);\012        if (text == null) {\012            return null;\012        }\012        return pattern.matcher(text).replaceAll(replacement);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;regexReplaceAll(&quot; + expression + &quot;, &quot; + pattern.pattern() + &quot;)&quot;;\012    }\012})<SUB>246</SUB>> ]
"193" [label = <(&lt;init&gt;,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String text = evaluateStringExpression(expression, exchange);\012        if (text == null) {\012            return null;\012        }\012        return pattern.matcher(text).replaceAll(replacement);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;regexReplaceAll(&quot; + expression + &quot;, &quot; + pattern.pattern() + &quot;)&quot;;\012    }\012})<SUB>246</SUB>> ]
"194" [label = <(IDENTIFIER,$obj11,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        String text = evaluateStringExpression(expression, exchange);\012        if (text == null) {\012            return null;\012        }\012        return pattern.matcher(text).replaceAll(replacement);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;regexReplaceAll(&quot; + expression + &quot;, &quot; + pattern.pattern() + &quot;)&quot;;\012    }\012})> ]
"195" [label = <(IDENTIFIER,$obj11,&lt;empty&gt;)> ]
"196" [label = <(MODIFIER,PUBLIC)> ]
"197" [label = <(MODIFIER,STATIC)> ]
"198" [label = <(METHOD_RETURN,ANY)<SUB>244</SUB>> ]
  "177" -> "178" 
  "177" -> "179" 
  "177" -> "180" 
  "177" -> "181" 
  "177" -> "196" 
  "177" -> "197" 
  "177" -> "198" 
  "181" -> "182" 
  "181" -> "183" 
  "181" -> "188" 
  "183" -> "184" 
  "183" -> "185" 
  "185" -> "186" 
  "185" -> "187" 
  "188" -> "189" 
  "189" -> "190" 
  "189" -> "193" 
  "189" -> "195" 
  "190" -> "191" 
  "190" -> "192" 
  "193" -> "194" 
}

digraph "message" {  
"655" [label = <(METHOD,message)<SUB>238</SUB>> ]
"32" [label = <(PARAM,this)<SUB>238</SUB>> ]
"656" [label = <(PARAM,final int messageIndex)<SUB>238</SUB>> ]
"657" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>238</SUB>> ]
"30" [label = <(LOCAL,AssertionClause clause: ANY)> ]
"658" [label = <(&lt;operator&gt;.assignment,ANY clause = new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>239</SUB>> ]
"659" [label = <(IDENTIFIER,clause,ANY clause = new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>239</SUB>> ]
"660" [label = <(&lt;operator&gt;.alloc,new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>239</SUB>> ]
"661" [label = <(&lt;init&gt;,new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>239</SUB>> ]
"29" [label = <(IDENTIFIER,clause,new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>239</SUB>> ]
"662" [label = <(expects,expects(clause))<SUB>244</SUB>> ]
"31" [label = <(IDENTIFIER,this,expects(clause))<SUB>244</SUB>> ]
"663" [label = <(IDENTIFIER,clause,expects(clause))<SUB>244</SUB>> ]
"664" [label = <(RETURN,return clause;,return clause;)<SUB>245</SUB>> ]
"665" [label = <(IDENTIFIER,clause,return clause;)<SUB>245</SUB>> ]
"666" [label = <(MODIFIER,PUBLIC)> ]
"667" [label = <(MODIFIER,VIRTUAL)> ]
"668" [label = <(METHOD_RETURN,ANY)<SUB>238</SUB>> ]
  "655" -> "32" 
  "655" -> "656" 
  "655" -> "657" 
  "655" -> "666" 
  "655" -> "667" 
  "655" -> "668" 
  "657" -> "30" 
  "657" -> "658" 
  "657" -> "661" 
  "657" -> "662" 
  "657" -> "664" 
  "658" -> "659" 
  "658" -> "660" 
  "661" -> "29" 
  "662" -> "31" 
  "662" -> "663" 
  "664" -> "665" 
}

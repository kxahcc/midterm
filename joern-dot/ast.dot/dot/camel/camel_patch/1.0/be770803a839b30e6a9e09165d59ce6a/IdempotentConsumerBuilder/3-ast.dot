digraph "wrapProcessor" {  
"54" [label = <(METHOD,wrapProcessor)<SUB>55</SUB>> ]
"55" [label = <(PARAM,this)<SUB>55</SUB>> ]
"56" [label = <(PARAM,Processor processor)<SUB>56</SUB>> ]
"57" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>56</SUB>> ]
"58" [label = <(RETURN,return new IdempotentConsumer(messageIdExpression, messageIdRegistry, processor);,return new IdempotentConsumer(messageIdExpression, messageIdRegistry, processor);)<SUB>57</SUB>> ]
"59" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>57</SUB>> ]
"60" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"61" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"62" [label = <(&lt;operator&gt;.alloc,new IdempotentConsumer(messageIdExpression, messageIdRegistry, processor))<SUB>57</SUB>> ]
"63" [label = <(&lt;init&gt;,new IdempotentConsumer(messageIdExpression, messageIdRegistry, processor))<SUB>57</SUB>> ]
"64" [label = <(IDENTIFIER,$obj0,new IdempotentConsumer(messageIdExpression, messageIdRegistry, processor))> ]
"65" [label = <(&lt;operator&gt;.fieldAccess,this.messageIdExpression)<SUB>57</SUB>> ]
"66" [label = <(IDENTIFIER,this,new IdempotentConsumer(messageIdExpression, messageIdRegistry, processor))<SUB>57</SUB>> ]
"67" [label = <(FIELD_IDENTIFIER,messageIdExpression,messageIdExpression)<SUB>57</SUB>> ]
"68" [label = <(&lt;operator&gt;.fieldAccess,this.messageIdRegistry)<SUB>57</SUB>> ]
"69" [label = <(IDENTIFIER,this,new IdempotentConsumer(messageIdExpression, messageIdRegistry, processor))<SUB>57</SUB>> ]
"70" [label = <(FIELD_IDENTIFIER,messageIdRegistry,messageIdRegistry)<SUB>57</SUB>> ]
"71" [label = <(IDENTIFIER,processor,new IdempotentConsumer(messageIdExpression, messageIdRegistry, processor))<SUB>57</SUB>> ]
"72" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"73" [label = <(MODIFIER,PROTECTED)> ]
"74" [label = <(MODIFIER,VIRTUAL)> ]
"75" [label = <(ANNOTATION,@Override,@Override)<SUB>55</SUB>> ]
"76" [label = <(METHOD_RETURN,org.apache.camel.Processor)<SUB>56</SUB>> ]
  "54" -> "55" 
  "54" -> "56" 
  "54" -> "57" 
  "54" -> "73" 
  "54" -> "74" 
  "54" -> "75" 
  "54" -> "76" 
  "57" -> "58" 
  "58" -> "59" 
  "59" -> "60" 
  "59" -> "63" 
  "59" -> "72" 
  "60" -> "61" 
  "60" -> "62" 
  "63" -> "64" 
  "63" -> "65" 
  "63" -> "68" 
  "63" -> "71" 
  "65" -> "66" 
  "65" -> "67" 
  "68" -> "69" 
  "68" -> "70" 
}

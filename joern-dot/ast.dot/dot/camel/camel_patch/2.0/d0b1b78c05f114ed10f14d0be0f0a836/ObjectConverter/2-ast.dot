digraph "iterator" {  
"41" [label = <(METHOD,iterator)<SUB>54</SUB>> ]
"42" [label = <(PARAM,Object value)<SUB>55</SUB>> ]
"43" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>55</SUB>> ]
"44" [label = <(CONTROL_STRUCTURE,if (value == null),if (value == null))<SUB>56</SUB>> ]
"45" [label = <(&lt;operator&gt;.equals,value == null)<SUB>56</SUB>> ]
"46" [label = <(IDENTIFIER,value,value == null)<SUB>56</SUB>> ]
"47" [label = <(LITERAL,null,value == null)<SUB>56</SUB>> ]
"48" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>56</SUB>> ]
"49" [label = <(RETURN,return Collections.EMPTY_LIST.iterator();,return Collections.EMPTY_LIST.iterator();)<SUB>57</SUB>> ]
"50" [label = <(iterator,Collections.EMPTY_LIST.iterator())<SUB>57</SUB>> ]
"51" [label = <(&lt;operator&gt;.fieldAccess,Collections.EMPTY_LIST)<SUB>57</SUB>> ]
"52" [label = <(IDENTIFIER,Collections,Collections.EMPTY_LIST.iterator())<SUB>57</SUB>> ]
"53" [label = <(FIELD_IDENTIFIER,EMPTY_LIST,EMPTY_LIST)<SUB>57</SUB>> ]
"54" [label = <(CONTROL_STRUCTURE,else,else)<SUB>58</SUB>> ]
"55" [label = <(CONTROL_STRUCTURE,if (value instanceof Collection),if (value instanceof Collection))<SUB>58</SUB>> ]
"56" [label = <(&lt;operator&gt;.instanceOf,value instanceof Collection)<SUB>58</SUB>> ]
"57" [label = <(IDENTIFIER,value,value instanceof Collection)<SUB>58</SUB>> ]
"58" [label = <(TYPE_REF,Collection,Collection)<SUB>58</SUB>> ]
"59" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>58</SUB>> ]
"60" [label = <(LOCAL,Collection collection: java.util.Collection)> ]
"61" [label = <(&lt;operator&gt;.assignment,Collection collection = (Collection) value)<SUB>59</SUB>> ]
"62" [label = <(IDENTIFIER,collection,Collection collection = (Collection) value)<SUB>59</SUB>> ]
"63" [label = <(&lt;operator&gt;.cast,(Collection) value)<SUB>59</SUB>> ]
"64" [label = <(TYPE_REF,Collection,Collection)<SUB>59</SUB>> ]
"65" [label = <(IDENTIFIER,value,(Collection) value)<SUB>59</SUB>> ]
"66" [label = <(RETURN,return collection.iterator();,return collection.iterator();)<SUB>60</SUB>> ]
"67" [label = <(iterator,collection.iterator())<SUB>60</SUB>> ]
"68" [label = <(IDENTIFIER,collection,collection.iterator())<SUB>60</SUB>> ]
"69" [label = <(CONTROL_STRUCTURE,else,else)<SUB>61</SUB>> ]
"70" [label = <(CONTROL_STRUCTURE,if (value.getClass().isArray()),if (value.getClass().isArray()))<SUB>61</SUB>> ]
"71" [label = <(isArray,value.getClass().isArray())<SUB>61</SUB>> ]
"72" [label = <(getClass,value.getClass())<SUB>61</SUB>> ]
"73" [label = <(IDENTIFIER,value,value.getClass())<SUB>61</SUB>> ]
"74" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>61</SUB>> ]
"75" [label = <(LOCAL,List&lt;Object&gt; list: java.util.List)> ]
"76" [label = <(&lt;operator&gt;.assignment,List list = Arrays.asList((Object[]) value))<SUB>63</SUB>> ]
"77" [label = <(IDENTIFIER,list,List list = Arrays.asList((Object[]) value))<SUB>63</SUB>> ]
"78" [label = <(asList,Arrays.asList((Object[]) value))<SUB>63</SUB>> ]
"79" [label = <(IDENTIFIER,Arrays,Arrays.asList((Object[]) value))<SUB>63</SUB>> ]
"80" [label = <(&lt;operator&gt;.arrayInitializer,&lt;operator&gt;.arrayInitializer)<SUB>63</SUB>> ]
"81" [label = <(&lt;operator&gt;.cast,(Object[]) value)<SUB>63</SUB>> ]
"82" [label = <(TYPE_REF,Object[],Object[])<SUB>63</SUB>> ]
"83" [label = <(IDENTIFIER,value,(Object[]) value)<SUB>63</SUB>> ]
"84" [label = <(RETURN,return list.iterator();,return list.iterator();)<SUB>64</SUB>> ]
"85" [label = <(iterator,list.iterator())<SUB>64</SUB>> ]
"86" [label = <(IDENTIFIER,list,list.iterator())<SUB>64</SUB>> ]
"87" [label = <(CONTROL_STRUCTURE,else,else)<SUB>65</SUB>> ]
"88" [label = <(CONTROL_STRUCTURE,if (value instanceof NodeList),if (value instanceof NodeList))<SUB>65</SUB>> ]
"89" [label = <(&lt;operator&gt;.instanceOf,value instanceof NodeList)<SUB>65</SUB>> ]
"90" [label = <(IDENTIFIER,value,value instanceof NodeList)<SUB>65</SUB>> ]
"91" [label = <(TYPE_REF,NodeList,NodeList)<SUB>65</SUB>> ]
"92" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>65</SUB>> ]
"93" [label = <(LOCAL,NodeList nodeList: org.w3c.dom.NodeList)> ]
"94" [label = <(&lt;operator&gt;.assignment,NodeList nodeList = (NodeList) value)<SUB>67</SUB>> ]
"95" [label = <(IDENTIFIER,nodeList,NodeList nodeList = (NodeList) value)<SUB>67</SUB>> ]
"96" [label = <(&lt;operator&gt;.cast,(NodeList) value)<SUB>67</SUB>> ]
"97" [label = <(TYPE_REF,NodeList,NodeList)<SUB>67</SUB>> ]
"98" [label = <(IDENTIFIER,value,(NodeList) value)<SUB>67</SUB>> ]
"99" [label = <(RETURN,return new Iterator&lt;Node&gt;() {\012\012    int idx = -1;\012\012    public boolean hasNext() {\012        return ++idx &lt; nodeList.getLength();\012    }\012\012    public Node next() {\012        return nodeList.item(idx);\012    }\012\012    public void remove() {\012        throw new UnsupportedOperationException();\012    }\012};,return new Iterator&lt;Node&gt;() {\012\012    int idx = -1;\012\012    public boolean hasNext() {\012        return ++idx &lt; nodeList.getLength();\012    }\012\012    public Node next() {\012        return nodeList.item(idx);\012    }\012\012    public void remove() {\012        throw new UnsupportedOperationException();\012    }\012};)<SUB>68</SUB>> ]
"100" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>68</SUB>> ]
"101" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"102" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"103" [label = <(&lt;operator&gt;.alloc,new Iterator&lt;Node&gt;() {\012\012    int idx = -1;\012\012    public boolean hasNext() {\012        return ++idx &lt; nodeList.getLength();\012    }\012\012    public Node next() {\012        return nodeList.item(idx);\012    }\012\012    public void remove() {\012        throw new UnsupportedOperationException();\012    }\012})<SUB>68</SUB>> ]
"104" [label = <(&lt;init&gt;,new Iterator&lt;Node&gt;() {\012\012    int idx = -1;\012\012    public boolean hasNext() {\012        return ++idx &lt; nodeList.getLength();\012    }\012\012    public Node next() {\012        return nodeList.item(idx);\012    }\012\012    public void remove() {\012        throw new UnsupportedOperationException();\012    }\012})<SUB>68</SUB>> ]
"105" [label = <(IDENTIFIER,$obj0,new Iterator&lt;Node&gt;() {\012\012    int idx = -1;\012\012    public boolean hasNext() {\012        return ++idx &lt; nodeList.getLength();\012    }\012\012    public Node next() {\012        return nodeList.item(idx);\012    }\012\012    public void remove() {\012        throw new UnsupportedOperationException();\012    }\012})> ]
"106" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"107" [label = <(CONTROL_STRUCTURE,else,else)<SUB>83</SUB>> ]
"108" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>83</SUB>> ]
"109" [label = <(RETURN,return Collections.singletonList(value).iterator();,return Collections.singletonList(value).iterator();)<SUB>84</SUB>> ]
"110" [label = <(iterator,Collections.singletonList(value).iterator())<SUB>84</SUB>> ]
"111" [label = <(singletonList,Collections.singletonList(value))<SUB>84</SUB>> ]
"112" [label = <(IDENTIFIER,Collections,Collections.singletonList(value))<SUB>84</SUB>> ]
"113" [label = <(IDENTIFIER,value,Collections.singletonList(value))<SUB>84</SUB>> ]
"114" [label = <(MODIFIER,PUBLIC)> ]
"115" [label = <(MODIFIER,STATIC)> ]
"116" [label = <(ANNOTATION,@Converter,@Converter)<SUB>54</SUB>> ]
"117" [label = <(METHOD_RETURN,java.util.Iterator)<SUB>55</SUB>> ]
  "41" -> "42" 
  "41" -> "43" 
  "41" -> "114" 
  "41" -> "115" 
  "41" -> "116" 
  "41" -> "117" 
  "43" -> "44" 
  "44" -> "45" 
  "44" -> "48" 
  "44" -> "54" 
  "45" -> "46" 
  "45" -> "47" 
  "48" -> "49" 
  "49" -> "50" 
  "50" -> "51" 
  "51" -> "52" 
  "51" -> "53" 
  "54" -> "55" 
  "55" -> "56" 
  "55" -> "59" 
  "55" -> "69" 
  "56" -> "57" 
  "56" -> "58" 
  "59" -> "60" 
  "59" -> "61" 
  "59" -> "66" 
  "61" -> "62" 
  "61" -> "63" 
  "63" -> "64" 
  "63" -> "65" 
  "66" -> "67" 
  "67" -> "68" 
  "69" -> "70" 
  "70" -> "71" 
  "70" -> "74" 
  "70" -> "87" 
  "71" -> "72" 
  "72" -> "73" 
  "74" -> "75" 
  "74" -> "76" 
  "74" -> "84" 
  "76" -> "77" 
  "76" -> "78" 
  "78" -> "79" 
  "78" -> "80" 
  "80" -> "81" 
  "81" -> "82" 
  "81" -> "83" 
  "84" -> "85" 
  "85" -> "86" 
  "87" -> "88" 
  "88" -> "89" 
  "88" -> "92" 
  "88" -> "107" 
  "89" -> "90" 
  "89" -> "91" 
  "92" -> "93" 
  "92" -> "94" 
  "92" -> "99" 
  "94" -> "95" 
  "94" -> "96" 
  "96" -> "97" 
  "96" -> "98" 
  "99" -> "100" 
  "100" -> "101" 
  "100" -> "104" 
  "100" -> "106" 
  "101" -> "102" 
  "101" -> "103" 
  "104" -> "105" 
  "107" -> "108" 
  "108" -> "109" 
  "109" -> "110" 
  "110" -> "111" 
  "111" -> "112" 
  "111" -> "113" 
}

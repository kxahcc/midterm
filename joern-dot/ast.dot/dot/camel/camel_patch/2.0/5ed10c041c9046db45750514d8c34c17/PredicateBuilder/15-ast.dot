digraph "isInstanceOf" {  
"270" [label = <(METHOD,isInstanceOf)<SUB>233</SUB>> ]
"271" [label = <(PARAM,final Expression&lt;E&gt; expression)<SUB>233</SUB>> ]
"272" [label = <(PARAM,final Class type)<SUB>234</SUB>> ]
"273" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>234</SUB>> ]
"274" [label = <(notNull,notNull(expression, &quot;expression&quot;))<SUB>235</SUB>> ]
"275" [label = <(IDENTIFIER,this,notNull(expression, &quot;expression&quot;))<SUB>235</SUB>> ]
"276" [label = <(IDENTIFIER,expression,notNull(expression, &quot;expression&quot;))<SUB>235</SUB>> ]
"277" [label = <(LITERAL,&quot;expression&quot;,notNull(expression, &quot;expression&quot;))<SUB>235</SUB>> ]
"278" [label = <(notNull,notNull(type, &quot;type&quot;))<SUB>236</SUB>> ]
"279" [label = <(IDENTIFIER,this,notNull(type, &quot;type&quot;))<SUB>236</SUB>> ]
"280" [label = <(IDENTIFIER,type,notNull(type, &quot;type&quot;))<SUB>236</SUB>> ]
"281" [label = <(LITERAL,&quot;type&quot;,notNull(type, &quot;type&quot;))<SUB>236</SUB>> ]
"282" [label = <(RETURN,return new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        Object value = expression.evaluate(exchange);\012        return type.isInstance(value);\012    }\012\012    @Override\012    public String toString() {\012        return expression + &quot; instanceof &quot; + type.getName();\012    }\012\012    @Override\012    protected String assertionFailureMessage(E exchange) {\012        return super.assertionFailureMessage(exchange) + &quot; for &lt;&quot; + expression.evaluate(exchange) + &quot;&gt;&quot;;\012    }\012};,return new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        Object value = expression.evaluate(exchange);\012        return type.isInstance(value);\012    }\012\012    @Override\012    public String toString() {\012        return expression + &quot; instanceof &quot; + type.getName();\012    }\012\012    @Override\012    protected String assertionFailureMessage(E exchange) {\012        return super.assertionFailureMessage(exchange) + &quot; for &lt;&quot; + expression.evaluate(exchange) + &quot;&gt;&quot;;\012    }\012};)<SUB>238</SUB>> ]
"283" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>238</SUB>> ]
"284" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"285" [label = <(IDENTIFIER,$obj11,&lt;empty&gt;)> ]
"286" [label = <(&lt;operator&gt;.alloc,new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        Object value = expression.evaluate(exchange);\012        return type.isInstance(value);\012    }\012\012    @Override\012    public String toString() {\012        return expression + &quot; instanceof &quot; + type.getName();\012    }\012\012    @Override\012    protected String assertionFailureMessage(E exchange) {\012        return super.assertionFailureMessage(exchange) + &quot; for &lt;&quot; + expression.evaluate(exchange) + &quot;&gt;&quot;;\012    }\012})<SUB>238</SUB>> ]
"287" [label = <(&lt;init&gt;,new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        Object value = expression.evaluate(exchange);\012        return type.isInstance(value);\012    }\012\012    @Override\012    public String toString() {\012        return expression + &quot; instanceof &quot; + type.getName();\012    }\012\012    @Override\012    protected String assertionFailureMessage(E exchange) {\012        return super.assertionFailureMessage(exchange) + &quot; for &lt;&quot; + expression.evaluate(exchange) + &quot;&gt;&quot;;\012    }\012})<SUB>238</SUB>> ]
"288" [label = <(IDENTIFIER,$obj11,new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        Object value = expression.evaluate(exchange);\012        return type.isInstance(value);\012    }\012\012    @Override\012    public String toString() {\012        return expression + &quot; instanceof &quot; + type.getName();\012    }\012\012    @Override\012    protected String assertionFailureMessage(E exchange) {\012        return super.assertionFailureMessage(exchange) + &quot; for &lt;&quot; + expression.evaluate(exchange) + &quot;&gt;&quot;;\012    }\012})> ]
"289" [label = <(IDENTIFIER,$obj11,&lt;empty&gt;)> ]
"290" [label = <(MODIFIER,PUBLIC)> ]
"291" [label = <(MODIFIER,STATIC)> ]
"292" [label = <(METHOD_RETURN,ANY)<SUB>233</SUB>> ]
  "270" -> "271" 
  "270" -> "272" 
  "270" -> "273" 
  "270" -> "290" 
  "270" -> "291" 
  "270" -> "292" 
  "273" -> "274" 
  "273" -> "278" 
  "273" -> "282" 
  "274" -> "275" 
  "274" -> "276" 
  "274" -> "277" 
  "278" -> "279" 
  "278" -> "280" 
  "278" -> "281" 
  "282" -> "283" 
  "283" -> "284" 
  "283" -> "287" 
  "283" -> "289" 
  "284" -> "285" 
  "284" -> "286" 
  "287" -> "288" 
}

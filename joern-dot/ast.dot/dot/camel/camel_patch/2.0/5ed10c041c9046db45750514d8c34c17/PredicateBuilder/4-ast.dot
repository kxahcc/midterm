digraph "and" {  
"79" [label = <(METHOD,and)<SUB>94</SUB>> ]
"80" [label = <(PARAM,final Predicate&lt;E&gt; left)<SUB>94</SUB>> ]
"81" [label = <(PARAM,final Predicate&lt;E&gt; right)<SUB>94</SUB>> ]
"82" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>94</SUB>> ]
"83" [label = <(notNull,notNull(left, &quot;left&quot;))<SUB>95</SUB>> ]
"84" [label = <(IDENTIFIER,this,notNull(left, &quot;left&quot;))<SUB>95</SUB>> ]
"85" [label = <(IDENTIFIER,left,notNull(left, &quot;left&quot;))<SUB>95</SUB>> ]
"86" [label = <(LITERAL,&quot;left&quot;,notNull(left, &quot;left&quot;))<SUB>95</SUB>> ]
"87" [label = <(notNull,notNull(right, &quot;right&quot;))<SUB>96</SUB>> ]
"88" [label = <(IDENTIFIER,this,notNull(right, &quot;right&quot;))<SUB>96</SUB>> ]
"89" [label = <(IDENTIFIER,right,notNull(right, &quot;right&quot;))<SUB>96</SUB>> ]
"90" [label = <(LITERAL,&quot;right&quot;,notNull(right, &quot;right&quot;))<SUB>96</SUB>> ]
"91" [label = <(RETURN,return new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) &amp;&amp; right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) and (&quot; + right + &quot;)&quot;;\012    }\012};,return new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) &amp;&amp; right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) and (&quot; + right + &quot;)&quot;;\012    }\012};)<SUB>97</SUB>> ]
"92" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>97</SUB>> ]
"93" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"94" [label = <(IDENTIFIER,$obj2,&lt;empty&gt;)> ]
"95" [label = <(&lt;operator&gt;.alloc,new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) &amp;&amp; right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) and (&quot; + right + &quot;)&quot;;\012    }\012})<SUB>97</SUB>> ]
"96" [label = <(&lt;init&gt;,new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) &amp;&amp; right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) and (&quot; + right + &quot;)&quot;;\012    }\012})<SUB>97</SUB>> ]
"97" [label = <(IDENTIFIER,$obj2,new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) &amp;&amp; right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) and (&quot; + right + &quot;)&quot;;\012    }\012})> ]
"98" [label = <(IDENTIFIER,$obj2,&lt;empty&gt;)> ]
"99" [label = <(MODIFIER,PUBLIC)> ]
"100" [label = <(MODIFIER,STATIC)> ]
"101" [label = <(METHOD_RETURN,ANY)<SUB>94</SUB>> ]
  "79" -> "80" 
  "79" -> "81" 
  "79" -> "82" 
  "79" -> "99" 
  "79" -> "100" 
  "79" -> "101" 
  "82" -> "83" 
  "82" -> "87" 
  "82" -> "91" 
  "83" -> "84" 
  "83" -> "85" 
  "83" -> "86" 
  "87" -> "88" 
  "87" -> "89" 
  "87" -> "90" 
  "91" -> "92" 
  "92" -> "93" 
  "92" -> "96" 
  "92" -> "98" 
  "93" -> "94" 
  "93" -> "95" 
  "96" -> "97" 
}

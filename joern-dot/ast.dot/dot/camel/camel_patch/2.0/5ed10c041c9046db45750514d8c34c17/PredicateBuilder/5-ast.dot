digraph "or" {  
"102" [label = <(METHOD,or)<SUB>112</SUB>> ]
"103" [label = <(PARAM,final Predicate&lt;E&gt; left)<SUB>112</SUB>> ]
"104" [label = <(PARAM,final Predicate&lt;E&gt; right)<SUB>112</SUB>> ]
"105" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>112</SUB>> ]
"106" [label = <(notNull,notNull(left, &quot;left&quot;))<SUB>113</SUB>> ]
"107" [label = <(IDENTIFIER,this,notNull(left, &quot;left&quot;))<SUB>113</SUB>> ]
"108" [label = <(IDENTIFIER,left,notNull(left, &quot;left&quot;))<SUB>113</SUB>> ]
"109" [label = <(LITERAL,&quot;left&quot;,notNull(left, &quot;left&quot;))<SUB>113</SUB>> ]
"110" [label = <(notNull,notNull(right, &quot;right&quot;))<SUB>114</SUB>> ]
"111" [label = <(IDENTIFIER,this,notNull(right, &quot;right&quot;))<SUB>114</SUB>> ]
"112" [label = <(IDENTIFIER,right,notNull(right, &quot;right&quot;))<SUB>114</SUB>> ]
"113" [label = <(LITERAL,&quot;right&quot;,notNull(right, &quot;right&quot;))<SUB>114</SUB>> ]
"114" [label = <(RETURN,return new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) || right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) or (&quot; + right + &quot;)&quot;;\012    }\012};,return new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) || right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) or (&quot; + right + &quot;)&quot;;\012    }\012};)<SUB>115</SUB>> ]
"115" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>115</SUB>> ]
"116" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"117" [label = <(IDENTIFIER,$obj3,&lt;empty&gt;)> ]
"118" [label = <(&lt;operator&gt;.alloc,new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) || right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) or (&quot; + right + &quot;)&quot;;\012    }\012})<SUB>115</SUB>> ]
"119" [label = <(&lt;init&gt;,new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) || right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) or (&quot; + right + &quot;)&quot;;\012    }\012})<SUB>115</SUB>> ]
"120" [label = <(IDENTIFIER,$obj3,new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        return left.matches(exchange) || right.matches(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;(&quot; + left + &quot;) or (&quot; + right + &quot;)&quot;;\012    }\012})> ]
"121" [label = <(IDENTIFIER,$obj3,&lt;empty&gt;)> ]
"122" [label = <(MODIFIER,PUBLIC)> ]
"123" [label = <(MODIFIER,STATIC)> ]
"124" [label = <(METHOD_RETURN,ANY)<SUB>112</SUB>> ]
  "102" -> "103" 
  "102" -> "104" 
  "102" -> "105" 
  "102" -> "122" 
  "102" -> "123" 
  "102" -> "124" 
  "105" -> "106" 
  "105" -> "110" 
  "105" -> "114" 
  "106" -> "107" 
  "106" -> "108" 
  "106" -> "109" 
  "110" -> "111" 
  "110" -> "112" 
  "110" -> "113" 
  "114" -> "115" 
  "115" -> "116" 
  "115" -> "119" 
  "115" -> "121" 
  "116" -> "117" 
  "116" -> "118" 
  "119" -> "120" 
}

digraph "toPredicate" {  
"23" [label = <(METHOD,toPredicate)<SUB>48</SUB>> ]
"24" [label = <(PARAM,final Expression&lt;E&gt; expression)<SUB>48</SUB>> ]
"25" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>48</SUB>> ]
"26" [label = <(RETURN,return new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        Object value = expression.evaluate(exchange);\012        return evaluateValuePredicate(value);\012    }\012\012    @Override\012    public String toString() {\012        return expression.toString();\012    }\012};,return new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        Object value = expression.evaluate(exchange);\012        return evaluateValuePredicate(value);\012    }\012\012    @Override\012    public String toString() {\012        return expression.toString();\012    }\012};)<SUB>49</SUB>> ]
"27" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>49</SUB>> ]
"28" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"29" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"30" [label = <(&lt;operator&gt;.alloc,new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        Object value = expression.evaluate(exchange);\012        return evaluateValuePredicate(value);\012    }\012\012    @Override\012    public String toString() {\012        return expression.toString();\012    }\012})<SUB>49</SUB>> ]
"31" [label = <(&lt;init&gt;,new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        Object value = expression.evaluate(exchange);\012        return evaluateValuePredicate(value);\012    }\012\012    @Override\012    public String toString() {\012        return expression.toString();\012    }\012})<SUB>49</SUB>> ]
"32" [label = <(IDENTIFIER,$obj0,new PredicateSupport&lt;E&gt;() {\012\012    public boolean matches(E exchange) {\012        Object value = expression.evaluate(exchange);\012        return evaluateValuePredicate(value);\012    }\012\012    @Override\012    public String toString() {\012        return expression.toString();\012    }\012})> ]
"33" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"34" [label = <(MODIFIER,PUBLIC)> ]
"35" [label = <(MODIFIER,STATIC)> ]
"36" [label = <(METHOD_RETURN,ANY)<SUB>48</SUB>> ]
  "23" -> "24" 
  "23" -> "25" 
  "23" -> "34" 
  "23" -> "35" 
  "23" -> "36" 
  "25" -> "26" 
  "26" -> "27" 
  "27" -> "28" 
  "27" -> "31" 
  "27" -> "33" 
  "28" -> "29" 
  "28" -> "30" 
  "31" -> "32" 
}

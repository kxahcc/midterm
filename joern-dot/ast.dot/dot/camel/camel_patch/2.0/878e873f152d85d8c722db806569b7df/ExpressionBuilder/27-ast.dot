digraph "concatExpression" {  
"405" [label = <(METHOD,concatExpression)<SUB>516</SUB>> ]
"406" [label = <(PARAM,final Collection&lt;Expression&gt; expressions)<SUB>516</SUB>> ]
"407" [label = <(PARAM,final String expression)<SUB>516</SUB>> ]
"408" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>516</SUB>> ]
"409" [label = <(RETURN,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        StringBuffer buffer = new StringBuffer();\012        for (Expression&lt;E&gt; expression : expressions) {\012            String text = evaluateStringExpression(expression, exchange);\012            if (text != null) {\012                buffer.append(text);\012            }\012        }\012        return buffer.toString();\012    }\012\012    @Override\012    public String toString() {\012        if (expression != null) {\012            return expression;\012        } else {\012            return &quot;concat&quot; + expressions;\012        }\012    }\012};,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        StringBuffer buffer = new StringBuffer();\012        for (Expression&lt;E&gt; expression : expressions) {\012            String text = evaluateStringExpression(expression, exchange);\012            if (text != null) {\012                buffer.append(text);\012            }\012        }\012        return buffer.toString();\012    }\012\012    @Override\012    public String toString() {\012        if (expression != null) {\012            return expression;\012        } else {\012            return &quot;concat&quot; + expressions;\012        }\012    }\012};)<SUB>517</SUB>> ]
"410" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>517</SUB>> ]
"411" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"412" [label = <(IDENTIFIER,$obj22,&lt;empty&gt;)> ]
"413" [label = <(&lt;operator&gt;.alloc,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        StringBuffer buffer = new StringBuffer();\012        for (Expression&lt;E&gt; expression : expressions) {\012            String text = evaluateStringExpression(expression, exchange);\012            if (text != null) {\012                buffer.append(text);\012            }\012        }\012        return buffer.toString();\012    }\012\012    @Override\012    public String toString() {\012        if (expression != null) {\012            return expression;\012        } else {\012            return &quot;concat&quot; + expressions;\012        }\012    }\012})<SUB>517</SUB>> ]
"414" [label = <(&lt;init&gt;,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        StringBuffer buffer = new StringBuffer();\012        for (Expression&lt;E&gt; expression : expressions) {\012            String text = evaluateStringExpression(expression, exchange);\012            if (text != null) {\012                buffer.append(text);\012            }\012        }\012        return buffer.toString();\012    }\012\012    @Override\012    public String toString() {\012        if (expression != null) {\012            return expression;\012        } else {\012            return &quot;concat&quot; + expressions;\012        }\012    }\012})<SUB>517</SUB>> ]
"415" [label = <(IDENTIFIER,$obj22,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        StringBuffer buffer = new StringBuffer();\012        for (Expression&lt;E&gt; expression : expressions) {\012            String text = evaluateStringExpression(expression, exchange);\012            if (text != null) {\012                buffer.append(text);\012            }\012        }\012        return buffer.toString();\012    }\012\012    @Override\012    public String toString() {\012        if (expression != null) {\012            return expression;\012        } else {\012            return &quot;concat&quot; + expressions;\012        }\012    }\012})> ]
"416" [label = <(IDENTIFIER,$obj22,&lt;empty&gt;)> ]
"417" [label = <(MODIFIER,PUBLIC)> ]
"418" [label = <(MODIFIER,STATIC)> ]
"419" [label = <(METHOD_RETURN,ANY)<SUB>516</SUB>> ]
  "405" -> "406" 
  "405" -> "407" 
  "405" -> "408" 
  "405" -> "417" 
  "405" -> "418" 
  "405" -> "419" 
  "408" -> "409" 
  "409" -> "410" 
  "410" -> "411" 
  "410" -> "414" 
  "410" -> "416" 
  "411" -> "412" 
  "411" -> "413" 
  "414" -> "415" 
}

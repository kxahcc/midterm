digraph "message" {  
"1100" [label = <(METHOD,message)<SUB>384</SUB>> ]
"63" [label = <(PARAM,this)<SUB>384</SUB>> ]
"1101" [label = <(PARAM,final int messageIndex)<SUB>384</SUB>> ]
"1102" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>384</SUB>> ]
"61" [label = <(LOCAL,AssertionClause clause: ANY)> ]
"1103" [label = <(&lt;operator&gt;.assignment,ANY clause = new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>385</SUB>> ]
"1104" [label = <(IDENTIFIER,clause,ANY clause = new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>385</SUB>> ]
"1105" [label = <(&lt;operator&gt;.alloc,new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>385</SUB>> ]
"1106" [label = <(&lt;init&gt;,new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>385</SUB>> ]
"60" [label = <(IDENTIFIER,clause,new AssertionClause() {\012\012    public void run() {\012        applyAssertionOn(MockEndpoint.this, messageIndex, assertExchangeReceived(messageIndex));\012    }\012})<SUB>385</SUB>> ]
"1107" [label = <(expects,expects(clause))<SUB>390</SUB>> ]
"62" [label = <(IDENTIFIER,this,expects(clause))<SUB>390</SUB>> ]
"1108" [label = <(IDENTIFIER,clause,expects(clause))<SUB>390</SUB>> ]
"1109" [label = <(RETURN,return clause;,return clause;)<SUB>391</SUB>> ]
"1110" [label = <(IDENTIFIER,clause,return clause;)<SUB>391</SUB>> ]
"1111" [label = <(MODIFIER,PUBLIC)> ]
"1112" [label = <(MODIFIER,VIRTUAL)> ]
"1113" [label = <(METHOD_RETURN,org.apache.camel.AssertionClause)<SUB>384</SUB>> ]
  "1100" -> "63" 
  "1100" -> "1101" 
  "1100" -> "1102" 
  "1100" -> "1111" 
  "1100" -> "1112" 
  "1100" -> "1113" 
  "1102" -> "61" 
  "1102" -> "1103" 
  "1102" -> "1106" 
  "1102" -> "1107" 
  "1102" -> "1109" 
  "1103" -> "1104" 
  "1103" -> "1105" 
  "1106" -> "60" 
  "1107" -> "62" 
  "1107" -> "1108" 
  "1109" -> "1110" 
}

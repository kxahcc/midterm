digraph "&lt;init&gt;" {  
"58" [label = <(METHOD,&lt;init&gt;)<SUB>43</SUB>> ]
"4" [label = <(PARAM,this)<SUB>43</SUB>> ]
"59" [label = <(PARAM,final FileEndpoint endpoint)<SUB>43</SUB>> ]
"60" [label = <(PARAM,Processor processor)<SUB>43</SUB>> ]
"61" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>43</SUB>> ]
"62" [label = <(&lt;operator&gt;.assignment,boolean recursive = true)<SUB>38</SUB>> ]
"63" [label = <(&lt;operator&gt;.fieldAccess,this.recursive)<SUB>38</SUB>> ]
"64" [label = <(IDENTIFIER,this,boolean recursive = true)<SUB>38</SUB>> ]
"65" [label = <(FIELD_IDENTIFIER,recursive,recursive)<SUB>38</SUB>> ]
"66" [label = <(LITERAL,true,boolean recursive = true)<SUB>38</SUB>> ]
"67" [label = <(&lt;operator&gt;.assignment,String regexPattern = &quot;&quot;)<SUB>39</SUB>> ]
"68" [label = <(&lt;operator&gt;.fieldAccess,this.regexPattern)<SUB>39</SUB>> ]
"69" [label = <(IDENTIFIER,this,String regexPattern = &quot;&quot;)<SUB>39</SUB>> ]
"70" [label = <(FIELD_IDENTIFIER,regexPattern,regexPattern)<SUB>39</SUB>> ]
"71" [label = <(LITERAL,&quot;&quot;,String regexPattern = &quot;&quot;)<SUB>39</SUB>> ]
"72" [label = <(&lt;init&gt;,super(endpoint, processor);)<SUB>44</SUB>> ]
"3" [label = <(IDENTIFIER,this,super(endpoint, processor);)> ]
"73" [label = <(IDENTIFIER,endpoint,super(endpoint, processor);)<SUB>44</SUB>> ]
"74" [label = <(IDENTIFIER,processor,super(endpoint, processor);)<SUB>44</SUB>> ]
"75" [label = <(&lt;operator&gt;.assignment,this.endpoint = endpoint)<SUB>45</SUB>> ]
"76" [label = <(&lt;operator&gt;.fieldAccess,this.endpoint)<SUB>45</SUB>> ]
"5" [label = <(IDENTIFIER,this,this.endpoint = endpoint)<SUB>45</SUB>> ]
"77" [label = <(FIELD_IDENTIFIER,endpoint,endpoint)<SUB>45</SUB>> ]
"78" [label = <(IDENTIFIER,endpoint,this.endpoint = endpoint)<SUB>45</SUB>> ]
"79" [label = <(MODIFIER,CONSTRUCTOR)> ]
"80" [label = <(MODIFIER,PUBLIC)> ]
"81" [label = <(METHOD_RETURN,void)<SUB>46</SUB>> ]
  "58" -> "4" 
  "58" -> "59" 
  "58" -> "60" 
  "58" -> "61" 
  "58" -> "79" 
  "58" -> "80" 
  "58" -> "81" 
  "61" -> "62" 
  "61" -> "67" 
  "61" -> "72" 
  "61" -> "75" 
  "62" -> "63" 
  "62" -> "66" 
  "63" -> "64" 
  "63" -> "65" 
  "67" -> "68" 
  "67" -> "71" 
  "68" -> "69" 
  "68" -> "70" 
  "72" -> "3" 
  "72" -> "73" 
  "72" -> "74" 
  "75" -> "76" 
  "75" -> "78" 
  "76" -> "5" 
  "76" -> "77" 
}

digraph "mandatoryConvertTo" {  
"72" [label = <(METHOD,mandatoryConvertTo)<SUB>68</SUB>> ]
"73" [label = <(PARAM,CamelContext context)<SUB>68</SUB>> ]
"74" [label = <(PARAM,Class&lt;T&gt; type)<SUB>68</SUB>> ]
"75" [label = <(PARAM,Object value)<SUB>68</SUB>> ]
"76" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>68</SUB>> ]
"77" [label = <(LOCAL,T answer: java.lang.Object)> ]
"78" [label = <(&lt;operator&gt;.assignment,Object answer = convertTo(context, type, value))<SUB>69</SUB>> ]
"79" [label = <(IDENTIFIER,answer,Object answer = convertTo(context, type, value))<SUB>69</SUB>> ]
"80" [label = <(convertTo,convertTo(context, type, value))<SUB>69</SUB>> ]
"81" [label = <(IDENTIFIER,this,convertTo(context, type, value))<SUB>69</SUB>> ]
"82" [label = <(IDENTIFIER,context,convertTo(context, type, value))<SUB>69</SUB>> ]
"83" [label = <(IDENTIFIER,type,convertTo(context, type, value))<SUB>69</SUB>> ]
"84" [label = <(IDENTIFIER,value,convertTo(context, type, value))<SUB>69</SUB>> ]
"85" [label = <(CONTROL_STRUCTURE,if (answer == null),if (answer == null))<SUB>70</SUB>> ]
"86" [label = <(&lt;operator&gt;.equals,answer == null)<SUB>70</SUB>> ]
"87" [label = <(IDENTIFIER,answer,answer == null)<SUB>70</SUB>> ]
"88" [label = <(LITERAL,null,answer == null)<SUB>70</SUB>> ]
"89" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>70</SUB>> ]
"90" [label = <(&lt;operator&gt;.throw,throw new IllegalArgumentException(&quot;Value &quot; + value + &quot; converted to &quot; + type.getName() + &quot; cannot be null&quot;);)<SUB>71</SUB>> ]
"91" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>71</SUB>> ]
"92" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"93" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"94" [label = <(&lt;operator&gt;.alloc,new IllegalArgumentException(&quot;Value &quot; + value + &quot; converted to &quot; + type.getName() + &quot; cannot be null&quot;))<SUB>71</SUB>> ]
"95" [label = <(&lt;init&gt;,new IllegalArgumentException(&quot;Value &quot; + value + &quot; converted to &quot; + type.getName() + &quot; cannot be null&quot;))<SUB>71</SUB>> ]
"96" [label = <(IDENTIFIER,$obj1,new IllegalArgumentException(&quot;Value &quot; + value + &quot; converted to &quot; + type.getName() + &quot; cannot be null&quot;))> ]
"97" [label = <(&lt;operator&gt;.addition,&quot;Value &quot; + value + &quot; converted to &quot; + type.getName() + &quot; cannot be null&quot;)<SUB>71</SUB>> ]
"98" [label = <(&lt;operator&gt;.addition,&quot;Value &quot; + value + &quot; converted to &quot; + type.getName())<SUB>71</SUB>> ]
"99" [label = <(&lt;operator&gt;.addition,&quot;Value &quot; + value + &quot; converted to &quot;)<SUB>71</SUB>> ]
"100" [label = <(&lt;operator&gt;.addition,&quot;Value &quot; + value)<SUB>71</SUB>> ]
"101" [label = <(LITERAL,&quot;Value &quot;,&quot;Value &quot; + value)<SUB>71</SUB>> ]
"102" [label = <(IDENTIFIER,value,&quot;Value &quot; + value)<SUB>71</SUB>> ]
"103" [label = <(LITERAL,&quot; converted to &quot;,&quot;Value &quot; + value + &quot; converted to &quot;)<SUB>71</SUB>> ]
"104" [label = <(getName,type.getName())<SUB>71</SUB>> ]
"105" [label = <(IDENTIFIER,type,type.getName())<SUB>71</SUB>> ]
"106" [label = <(LITERAL,&quot; cannot be null&quot;,&quot;Value &quot; + value + &quot; converted to &quot; + type.getName() + &quot; cannot be null&quot;)<SUB>71</SUB>> ]
"107" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"108" [label = <(RETURN,return answer;,return answer;)<SUB>73</SUB>> ]
"109" [label = <(IDENTIFIER,answer,return answer;)<SUB>73</SUB>> ]
"110" [label = <(MODIFIER,PUBLIC)> ]
"111" [label = <(MODIFIER,STATIC)> ]
"112" [label = <(METHOD_RETURN,java.lang.Object)<SUB>68</SUB>> ]
  "72" -> "73" 
  "72" -> "74" 
  "72" -> "75" 
  "72" -> "76" 
  "72" -> "110" 
  "72" -> "111" 
  "72" -> "112" 
  "76" -> "77" 
  "76" -> "78" 
  "76" -> "85" 
  "76" -> "108" 
  "78" -> "79" 
  "78" -> "80" 
  "80" -> "81" 
  "80" -> "82" 
  "80" -> "83" 
  "80" -> "84" 
  "85" -> "86" 
  "85" -> "89" 
  "86" -> "87" 
  "86" -> "88" 
  "89" -> "90" 
  "90" -> "91" 
  "91" -> "92" 
  "91" -> "95" 
  "91" -> "107" 
  "92" -> "93" 
  "92" -> "94" 
  "95" -> "96" 
  "95" -> "97" 
  "97" -> "98" 
  "97" -> "106" 
  "98" -> "99" 
  "98" -> "104" 
  "99" -> "100" 
  "99" -> "103" 
  "100" -> "101" 
  "100" -> "102" 
  "104" -> "105" 
  "108" -> "109" 
}

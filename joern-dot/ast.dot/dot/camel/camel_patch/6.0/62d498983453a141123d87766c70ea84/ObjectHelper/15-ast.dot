digraph "createIterator" {  
"638" [label = <(METHOD,createIterator)<SUB>292</SUB>> ]
"639" [label = <(PARAM,Object value)<SUB>293</SUB>> ]
"640" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>293</SUB>> ]
"641" [label = <(CONTROL_STRUCTURE,if (value == null),if (value == null))<SUB>294</SUB>> ]
"642" [label = <(&lt;operator&gt;.equals,value == null)<SUB>294</SUB>> ]
"643" [label = <(IDENTIFIER,value,value == null)<SUB>294</SUB>> ]
"644" [label = <(LITERAL,null,value == null)<SUB>294</SUB>> ]
"645" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>294</SUB>> ]
"646" [label = <(RETURN,return Collections.EMPTY_LIST.iterator();,return Collections.EMPTY_LIST.iterator();)<SUB>295</SUB>> ]
"647" [label = <(iterator,Collections.EMPTY_LIST.iterator())<SUB>295</SUB>> ]
"648" [label = <(&lt;operator&gt;.fieldAccess,Collections.EMPTY_LIST)<SUB>295</SUB>> ]
"649" [label = <(IDENTIFIER,Collections,Collections.EMPTY_LIST.iterator())<SUB>295</SUB>> ]
"650" [label = <(FIELD_IDENTIFIER,EMPTY_LIST,EMPTY_LIST)<SUB>295</SUB>> ]
"651" [label = <(CONTROL_STRUCTURE,else,else)<SUB>296</SUB>> ]
"652" [label = <(CONTROL_STRUCTURE,if (value instanceof Iterator),if (value instanceof Iterator))<SUB>296</SUB>> ]
"653" [label = <(&lt;operator&gt;.instanceOf,value instanceof Iterator)<SUB>296</SUB>> ]
"654" [label = <(IDENTIFIER,value,value instanceof Iterator)<SUB>296</SUB>> ]
"655" [label = <(TYPE_REF,Iterator,Iterator)<SUB>296</SUB>> ]
"656" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>296</SUB>> ]
"657" [label = <(RETURN,return (Iterator) value;,return (Iterator) value;)<SUB>297</SUB>> ]
"658" [label = <(&lt;operator&gt;.cast,(Iterator) value)<SUB>297</SUB>> ]
"659" [label = <(TYPE_REF,Iterator,Iterator)<SUB>297</SUB>> ]
"660" [label = <(IDENTIFIER,value,(Iterator) value)<SUB>297</SUB>> ]
"661" [label = <(CONTROL_STRUCTURE,else,else)<SUB>298</SUB>> ]
"662" [label = <(CONTROL_STRUCTURE,if (value instanceof Collection),if (value instanceof Collection))<SUB>298</SUB>> ]
"663" [label = <(&lt;operator&gt;.instanceOf,value instanceof Collection)<SUB>298</SUB>> ]
"664" [label = <(IDENTIFIER,value,value instanceof Collection)<SUB>298</SUB>> ]
"665" [label = <(TYPE_REF,Collection,Collection)<SUB>298</SUB>> ]
"666" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>298</SUB>> ]
"667" [label = <(LOCAL,Collection collection: java.util.Collection)> ]
"668" [label = <(&lt;operator&gt;.assignment,Collection collection = (Collection) value)<SUB>299</SUB>> ]
"669" [label = <(IDENTIFIER,collection,Collection collection = (Collection) value)<SUB>299</SUB>> ]
"670" [label = <(&lt;operator&gt;.cast,(Collection) value)<SUB>299</SUB>> ]
"671" [label = <(TYPE_REF,Collection,Collection)<SUB>299</SUB>> ]
"672" [label = <(IDENTIFIER,value,(Collection) value)<SUB>299</SUB>> ]
"673" [label = <(RETURN,return collection.iterator();,return collection.iterator();)<SUB>300</SUB>> ]
"674" [label = <(iterator,collection.iterator())<SUB>300</SUB>> ]
"675" [label = <(IDENTIFIER,collection,collection.iterator())<SUB>300</SUB>> ]
"676" [label = <(CONTROL_STRUCTURE,else,else)<SUB>301</SUB>> ]
"677" [label = <(CONTROL_STRUCTURE,if (value.getClass().isArray()),if (value.getClass().isArray()))<SUB>301</SUB>> ]
"678" [label = <(isArray,value.getClass().isArray())<SUB>301</SUB>> ]
"679" [label = <(getClass,value.getClass())<SUB>301</SUB>> ]
"680" [label = <(IDENTIFIER,value,value.getClass())<SUB>301</SUB>> ]
"681" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>301</SUB>> ]
"682" [label = <(LOCAL,List&lt;Object&gt; list: java.util.List)> ]
"683" [label = <(&lt;operator&gt;.assignment,List list = Arrays.asList((Object[]) value))<SUB>303</SUB>> ]
"684" [label = <(IDENTIFIER,list,List list = Arrays.asList((Object[]) value))<SUB>303</SUB>> ]
"685" [label = <(asList,Arrays.asList((Object[]) value))<SUB>303</SUB>> ]
"686" [label = <(IDENTIFIER,Arrays,Arrays.asList((Object[]) value))<SUB>303</SUB>> ]
"687" [label = <(&lt;operator&gt;.arrayInitializer,&lt;operator&gt;.arrayInitializer)<SUB>303</SUB>> ]
"688" [label = <(&lt;operator&gt;.cast,(Object[]) value)<SUB>303</SUB>> ]
"689" [label = <(TYPE_REF,Object[],Object[])<SUB>303</SUB>> ]
"690" [label = <(IDENTIFIER,value,(Object[]) value)<SUB>303</SUB>> ]
"691" [label = <(RETURN,return list.iterator();,return list.iterator();)<SUB>304</SUB>> ]
"692" [label = <(iterator,list.iterator())<SUB>304</SUB>> ]
"693" [label = <(IDENTIFIER,list,list.iterator())<SUB>304</SUB>> ]
"694" [label = <(CONTROL_STRUCTURE,else,else)<SUB>305</SUB>> ]
"695" [label = <(CONTROL_STRUCTURE,if (value instanceof NodeList),if (value instanceof NodeList))<SUB>305</SUB>> ]
"696" [label = <(&lt;operator&gt;.instanceOf,value instanceof NodeList)<SUB>305</SUB>> ]
"697" [label = <(IDENTIFIER,value,value instanceof NodeList)<SUB>305</SUB>> ]
"698" [label = <(TYPE_REF,NodeList,NodeList)<SUB>305</SUB>> ]
"699" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>305</SUB>> ]
"700" [label = <(LOCAL,NodeList nodeList: org.w3c.dom.NodeList)> ]
"701" [label = <(&lt;operator&gt;.assignment,NodeList nodeList = (NodeList) value)<SUB>307</SUB>> ]
"702" [label = <(IDENTIFIER,nodeList,NodeList nodeList = (NodeList) value)<SUB>307</SUB>> ]
"703" [label = <(&lt;operator&gt;.cast,(NodeList) value)<SUB>307</SUB>> ]
"704" [label = <(TYPE_REF,NodeList,NodeList)<SUB>307</SUB>> ]
"705" [label = <(IDENTIFIER,value,(NodeList) value)<SUB>307</SUB>> ]
"706" [label = <(RETURN,return new Iterator&lt;Node&gt;() {\012\012    int idx = -1;\012\012    public boolean hasNext() {\012        return ++idx &lt; nodeList.getLength();\012    }\012\012    public Node next() {\012        return nodeList.item(idx);\012    }\012\012    public void remove() {\012        throw new UnsupportedOperationException();\012    }\012};,return new Iterator&lt;Node&gt;() {\012\012    int idx = -1;\012\012    public boolean hasNext() {\012        return ++idx &lt; nodeList.getLength();\012    }\012\012    public Node next() {\012        return nodeList.item(idx);\012    }\012\012    public void remove() {\012        throw new UnsupportedOperationException();\012    }\012};)<SUB>308</SUB>> ]
"707" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>308</SUB>> ]
"708" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"709" [label = <(IDENTIFIER,$obj4,&lt;empty&gt;)> ]
"710" [label = <(&lt;operator&gt;.alloc,new Iterator&lt;Node&gt;() {\012\012    int idx = -1;\012\012    public boolean hasNext() {\012        return ++idx &lt; nodeList.getLength();\012    }\012\012    public Node next() {\012        return nodeList.item(idx);\012    }\012\012    public void remove() {\012        throw new UnsupportedOperationException();\012    }\012})<SUB>308</SUB>> ]
"711" [label = <(&lt;init&gt;,new Iterator&lt;Node&gt;() {\012\012    int idx = -1;\012\012    public boolean hasNext() {\012        return ++idx &lt; nodeList.getLength();\012    }\012\012    public Node next() {\012        return nodeList.item(idx);\012    }\012\012    public void remove() {\012        throw new UnsupportedOperationException();\012    }\012})<SUB>308</SUB>> ]
"712" [label = <(IDENTIFIER,$obj4,new Iterator&lt;Node&gt;() {\012\012    int idx = -1;\012\012    public boolean hasNext() {\012        return ++idx &lt; nodeList.getLength();\012    }\012\012    public Node next() {\012        return nodeList.item(idx);\012    }\012\012    public void remove() {\012        throw new UnsupportedOperationException();\012    }\012})> ]
"713" [label = <(IDENTIFIER,$obj4,&lt;empty&gt;)> ]
"714" [label = <(CONTROL_STRUCTURE,else,else)<SUB>323</SUB>> ]
"715" [label = <(CONTROL_STRUCTURE,if (value instanceof String),if (value instanceof String))<SUB>323</SUB>> ]
"716" [label = <(&lt;operator&gt;.instanceOf,value instanceof String)<SUB>323</SUB>> ]
"717" [label = <(IDENTIFIER,value,value instanceof String)<SUB>323</SUB>> ]
"718" [label = <(TYPE_REF,String,String)<SUB>323</SUB>> ]
"719" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>323</SUB>> ]
"4" [label = <(LOCAL,Scanner scanner: java.util.Scanner)> ]
"720" [label = <(&lt;operator&gt;.assignment,Scanner scanner = new Scanner((String) value))<SUB>324</SUB>> ]
"721" [label = <(IDENTIFIER,scanner,Scanner scanner = new Scanner((String) value))<SUB>324</SUB>> ]
"722" [label = <(&lt;operator&gt;.alloc,new Scanner((String) value))<SUB>324</SUB>> ]
"723" [label = <(&lt;init&gt;,new Scanner((String) value))<SUB>324</SUB>> ]
"3" [label = <(IDENTIFIER,scanner,new Scanner((String) value))<SUB>324</SUB>> ]
"724" [label = <(&lt;operator&gt;.cast,(String) value)<SUB>324</SUB>> ]
"725" [label = <(TYPE_REF,String,String)<SUB>324</SUB>> ]
"726" [label = <(IDENTIFIER,value,(String) value)<SUB>324</SUB>> ]
"727" [label = <(useDelimiter,scanner.useDelimiter(&quot;,&quot;))<SUB>326</SUB>> ]
"728" [label = <(IDENTIFIER,scanner,scanner.useDelimiter(&quot;,&quot;))<SUB>326</SUB>> ]
"729" [label = <(LITERAL,&quot;,&quot;,scanner.useDelimiter(&quot;,&quot;))<SUB>326</SUB>> ]
"730" [label = <(RETURN,return scanner;,return scanner;)<SUB>327</SUB>> ]
"731" [label = <(IDENTIFIER,scanner,return scanner;)<SUB>327</SUB>> ]
"732" [label = <(CONTROL_STRUCTURE,else,else)<SUB>328</SUB>> ]
"733" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>328</SUB>> ]
"734" [label = <(RETURN,return Collections.singletonList(value).iterator();,return Collections.singletonList(value).iterator();)<SUB>329</SUB>> ]
"735" [label = <(iterator,Collections.singletonList(value).iterator())<SUB>329</SUB>> ]
"736" [label = <(singletonList,Collections.singletonList(value))<SUB>329</SUB>> ]
"737" [label = <(IDENTIFIER,Collections,Collections.singletonList(value))<SUB>329</SUB>> ]
"738" [label = <(IDENTIFIER,value,Collections.singletonList(value))<SUB>329</SUB>> ]
"739" [label = <(MODIFIER,PUBLIC)> ]
"740" [label = <(MODIFIER,STATIC)> ]
"741" [label = <(ANNOTATION,@SuppressWarnings(&quot;unchecked&quot;),@SuppressWarnings(&quot;unchecked&quot;))<SUB>292</SUB>> ]
"742" [label = <(ANNOTATION_PARAMETER_ASSIGN,&quot;unchecked&quot;)> ]
"743" [label = <(ANNOTATION_PARAMETER,value)> ]
"744" [label = <(ANNOTATION_LITERAL,unchecked,unchecked)> ]
"745" [label = <(METHOD_RETURN,java.util.Iterator)<SUB>293</SUB>> ]
  "638" -> "639" 
  "638" -> "640" 
  "638" -> "739" 
  "638" -> "740" 
  "638" -> "741" 
  "638" -> "745" 
  "640" -> "641" 
  "641" -> "642" 
  "641" -> "645" 
  "641" -> "651" 
  "642" -> "643" 
  "642" -> "644" 
  "645" -> "646" 
  "646" -> "647" 
  "647" -> "648" 
  "648" -> "649" 
  "648" -> "650" 
  "651" -> "652" 
  "652" -> "653" 
  "652" -> "656" 
  "652" -> "661" 
  "653" -> "654" 
  "653" -> "655" 
  "656" -> "657" 
  "657" -> "658" 
  "658" -> "659" 
  "658" -> "660" 
  "661" -> "662" 
  "662" -> "663" 
  "662" -> "666" 
  "662" -> "676" 
  "663" -> "664" 
  "663" -> "665" 
  "666" -> "667" 
  "666" -> "668" 
  "666" -> "673" 
  "668" -> "669" 
  "668" -> "670" 
  "670" -> "671" 
  "670" -> "672" 
  "673" -> "674" 
  "674" -> "675" 
  "676" -> "677" 
  "677" -> "678" 
  "677" -> "681" 
  "677" -> "694" 
  "678" -> "679" 
  "679" -> "680" 
  "681" -> "682" 
  "681" -> "683" 
  "681" -> "691" 
  "683" -> "684" 
  "683" -> "685" 
  "685" -> "686" 
  "685" -> "687" 
  "687" -> "688" 
  "688" -> "689" 
  "688" -> "690" 
  "691" -> "692" 
  "692" -> "693" 
  "694" -> "695" 
  "695" -> "696" 
  "695" -> "699" 
  "695" -> "714" 
  "696" -> "697" 
  "696" -> "698" 
  "699" -> "700" 
  "699" -> "701" 
  "699" -> "706" 
  "701" -> "702" 
  "701" -> "703" 
  "703" -> "704" 
  "703" -> "705" 
  "706" -> "707" 
  "707" -> "708" 
  "707" -> "711" 
  "707" -> "713" 
  "708" -> "709" 
  "708" -> "710" 
  "711" -> "712" 
  "714" -> "715" 
  "715" -> "716" 
  "715" -> "719" 
  "715" -> "732" 
  "716" -> "717" 
  "716" -> "718" 
  "719" -> "4" 
  "719" -> "720" 
  "719" -> "723" 
  "719" -> "727" 
  "719" -> "730" 
  "720" -> "721" 
  "720" -> "722" 
  "723" -> "3" 
  "723" -> "724" 
  "724" -> "725" 
  "724" -> "726" 
  "727" -> "728" 
  "727" -> "729" 
  "730" -> "731" 
  "732" -> "733" 
  "733" -> "734" 
  "734" -> "735" 
  "735" -> "736" 
  "736" -> "737" 
  "736" -> "738" 
  "741" -> "742" 
  "742" -> "743" 
  "742" -> "744" 
}

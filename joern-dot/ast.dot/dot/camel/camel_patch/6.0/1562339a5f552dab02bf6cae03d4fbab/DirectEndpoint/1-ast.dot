digraph "&lt;init&gt;" {  
"52" [label = <(METHOD,&lt;init&gt;)<SUB>46</SUB>> ]
"6" [label = <(PARAM,this)<SUB>46</SUB>> ]
"53" [label = <(PARAM,String endpointUri)<SUB>46</SUB>> ]
"54" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>46</SUB>> ]
"55" [label = <(&lt;operator&gt;.assignment,boolean allowMultipleConsumers = true)<SUB>39</SUB>> ]
"56" [label = <(&lt;operator&gt;.fieldAccess,this.allowMultipleConsumers)<SUB>39</SUB>> ]
"57" [label = <(IDENTIFIER,this,boolean allowMultipleConsumers = true)<SUB>39</SUB>> ]
"58" [label = <(FIELD_IDENTIFIER,allowMultipleConsumers,allowMultipleConsumers)<SUB>39</SUB>> ]
"59" [label = <(LITERAL,true,boolean allowMultipleConsumers = true)<SUB>39</SUB>> ]
"60" [label = <(&lt;operator&gt;.assignment,CopyOnWriteArrayList&lt;DefaultConsumer&lt;E&gt;&gt; consumers = new CopyOnWriteArrayList&lt;DefaultConsumer&lt;E&gt;&gt;())<SUB>40</SUB>> ]
"61" [label = <(&lt;operator&gt;.fieldAccess,this.consumers)<SUB>40</SUB>> ]
"62" [label = <(IDENTIFIER,this,CopyOnWriteArrayList&lt;DefaultConsumer&lt;E&gt;&gt; consumers = new CopyOnWriteArrayList&lt;DefaultConsumer&lt;E&gt;&gt;())<SUB>40</SUB>> ]
"63" [label = <(FIELD_IDENTIFIER,consumers,consumers)<SUB>40</SUB>> ]
"64" [label = <(&lt;operator&gt;.alloc,new CopyOnWriteArrayList&lt;DefaultConsumer&lt;E&gt;&gt;())<SUB>40</SUB>> ]
"65" [label = <(&lt;init&gt;,new CopyOnWriteArrayList&lt;DefaultConsumer&lt;E&gt;&gt;())<SUB>40</SUB>> ]
"66" [label = <(&lt;operator&gt;.fieldAccess,this.consumers)<SUB>40</SUB>> ]
"67" [label = <(IDENTIFIER,this,new CopyOnWriteArrayList&lt;DefaultConsumer&lt;E&gt;&gt;())<SUB>40</SUB>> ]
"68" [label = <(FIELD_IDENTIFIER,consumers,consumers)<SUB>40</SUB>> ]
"69" [label = <(&lt;init&gt;,super(endpointUri);)<SUB>47</SUB>> ]
"5" [label = <(IDENTIFIER,this,super(endpointUri);)> ]
"70" [label = <(IDENTIFIER,endpointUri,super(endpointUri);)<SUB>47</SUB>> ]
"71" [label = <(MODIFIER,CONSTRUCTOR)> ]
"72" [label = <(MODIFIER,PUBLIC)> ]
"73" [label = <(METHOD_RETURN,void)<SUB>48</SUB>> ]
  "52" -> "6" 
  "52" -> "53" 
  "52" -> "54" 
  "52" -> "71" 
  "52" -> "72" 
  "52" -> "73" 
  "54" -> "55" 
  "54" -> "60" 
  "54" -> "65" 
  "54" -> "69" 
  "55" -> "56" 
  "55" -> "59" 
  "56" -> "57" 
  "56" -> "58" 
  "60" -> "61" 
  "60" -> "64" 
  "61" -> "62" 
  "61" -> "63" 
  "65" -> "66" 
  "66" -> "67" 
  "66" -> "68" 
  "69" -> "5" 
  "69" -> "70" 
}

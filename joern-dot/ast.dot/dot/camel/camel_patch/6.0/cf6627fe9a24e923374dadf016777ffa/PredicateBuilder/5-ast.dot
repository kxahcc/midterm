digraph "isEqualTo" {  
"101" [label = <(METHOD,isEqualTo)<SUB>115</SUB>> ]
"102" [label = <(PARAM,final Expression&lt;E&gt; left)<SUB>115</SUB>> ]
"103" [label = <(PARAM,final Expression&lt;E&gt; right)<SUB>116</SUB>> ]
"104" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>116</SUB>> ]
"105" [label = <(RETURN,return new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return ObjectHelper.equal(leftValue, rightValue);\012    }\012\012    protected String getOperationText() {\012        return &quot;==&quot;;\012    }\012};,return new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return ObjectHelper.equal(leftValue, rightValue);\012    }\012\012    protected String getOperationText() {\012        return &quot;==&quot;;\012    }\012};)<SUB>117</SUB>> ]
"106" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>117</SUB>> ]
"107" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"108" [label = <(IDENTIFIER,$obj4,&lt;empty&gt;)> ]
"109" [label = <(&lt;operator&gt;.alloc,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return ObjectHelper.equal(leftValue, rightValue);\012    }\012\012    protected String getOperationText() {\012        return &quot;==&quot;;\012    }\012})<SUB>117</SUB>> ]
"110" [label = <(&lt;init&gt;,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return ObjectHelper.equal(leftValue, rightValue);\012    }\012\012    protected String getOperationText() {\012        return &quot;==&quot;;\012    }\012})<SUB>117</SUB>> ]
"111" [label = <(IDENTIFIER,$obj4,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return ObjectHelper.equal(leftValue, rightValue);\012    }\012\012    protected String getOperationText() {\012        return &quot;==&quot;;\012    }\012})> ]
"112" [label = <(IDENTIFIER,left,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return ObjectHelper.equal(leftValue, rightValue);\012    }\012\012    protected String getOperationText() {\012        return &quot;==&quot;;\012    }\012})<SUB>117</SUB>> ]
"113" [label = <(IDENTIFIER,right,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return ObjectHelper.equal(leftValue, rightValue);\012    }\012\012    protected String getOperationText() {\012        return &quot;==&quot;;\012    }\012})<SUB>117</SUB>> ]
"114" [label = <(IDENTIFIER,$obj4,&lt;empty&gt;)> ]
"115" [label = <(MODIFIER,PUBLIC)> ]
"116" [label = <(MODIFIER,STATIC)> ]
"117" [label = <(METHOD_RETURN,ANY)<SUB>115</SUB>> ]
  "101" -> "102" 
  "101" -> "103" 
  "101" -> "104" 
  "101" -> "115" 
  "101" -> "116" 
  "101" -> "117" 
  "104" -> "105" 
  "105" -> "106" 
  "106" -> "107" 
  "106" -> "110" 
  "106" -> "114" 
  "107" -> "108" 
  "107" -> "109" 
  "110" -> "111" 
  "110" -> "112" 
  "110" -> "113" 
}

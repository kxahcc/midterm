digraph "isLessThanOrEqualTo" {  
"152" [label = <(METHOD,isLessThanOrEqualTo)<SUB>157</SUB>> ]
"153" [label = <(PARAM,final Expression&lt;E&gt; left)<SUB>157</SUB>> ]
"154" [label = <(PARAM,final Expression&lt;E&gt; right)<SUB>158</SUB>> ]
"155" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>158</SUB>> ]
"156" [label = <(RETURN,return new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return compare(leftValue, rightValue) &lt;= 0;\012    }\012\012    protected String getOperationText() {\012        return &quot;&lt;=&quot;;\012    }\012};,return new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return compare(leftValue, rightValue) &lt;= 0;\012    }\012\012    protected String getOperationText() {\012        return &quot;&lt;=&quot;;\012    }\012};)<SUB>159</SUB>> ]
"157" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>159</SUB>> ]
"158" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"159" [label = <(IDENTIFIER,$obj7,&lt;empty&gt;)> ]
"160" [label = <(&lt;operator&gt;.alloc,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return compare(leftValue, rightValue) &lt;= 0;\012    }\012\012    protected String getOperationText() {\012        return &quot;&lt;=&quot;;\012    }\012})<SUB>159</SUB>> ]
"161" [label = <(&lt;init&gt;,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return compare(leftValue, rightValue) &lt;= 0;\012    }\012\012    protected String getOperationText() {\012        return &quot;&lt;=&quot;;\012    }\012})<SUB>159</SUB>> ]
"162" [label = <(IDENTIFIER,$obj7,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return compare(leftValue, rightValue) &lt;= 0;\012    }\012\012    protected String getOperationText() {\012        return &quot;&lt;=&quot;;\012    }\012})> ]
"163" [label = <(IDENTIFIER,left,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return compare(leftValue, rightValue) &lt;= 0;\012    }\012\012    protected String getOperationText() {\012        return &quot;&lt;=&quot;;\012    }\012})<SUB>159</SUB>> ]
"164" [label = <(IDENTIFIER,right,new BinaryPredicateSupport&lt;E&gt;(left, right) {\012\012    protected boolean matches(E exchange, Object leftValue, Object rightValue) {\012        return compare(leftValue, rightValue) &lt;= 0;\012    }\012\012    protected String getOperationText() {\012        return &quot;&lt;=&quot;;\012    }\012})<SUB>159</SUB>> ]
"165" [label = <(IDENTIFIER,$obj7,&lt;empty&gt;)> ]
"166" [label = <(MODIFIER,PUBLIC)> ]
"167" [label = <(MODIFIER,STATIC)> ]
"168" [label = <(METHOD_RETURN,ANY)<SUB>157</SUB>> ]
  "152" -> "153" 
  "152" -> "154" 
  "152" -> "155" 
  "152" -> "166" 
  "152" -> "167" 
  "152" -> "168" 
  "155" -> "156" 
  "156" -> "157" 
  "157" -> "158" 
  "157" -> "161" 
  "157" -> "165" 
  "158" -> "159" 
  "158" -> "160" 
  "161" -> "162" 
  "161" -> "163" 
  "161" -> "164" 
}

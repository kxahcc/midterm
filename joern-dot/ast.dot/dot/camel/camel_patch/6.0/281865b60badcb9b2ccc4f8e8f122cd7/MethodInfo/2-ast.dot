digraph "createMethodInvocation" {  
"178" [label = <(METHOD,createMethodInvocation)<SUB>77</SUB>> ]
"179" [label = <(PARAM,this)<SUB>77</SUB>> ]
"180" [label = <(PARAM,final Object pojo)<SUB>77</SUB>> ]
"181" [label = <(PARAM,final Exchange exchange)<SUB>77</SUB>> ]
"182" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>77</SUB>> ]
"183" [label = <(LOCAL,Object[] arguments: java.lang.Object[])> ]
"184" [label = <(&lt;operator&gt;.assignment,Object[] arguments = (Object[]) parametersExpression.evaluate(exchange))<SUB>78</SUB>> ]
"185" [label = <(IDENTIFIER,arguments,Object[] arguments = (Object[]) parametersExpression.evaluate(exchange))<SUB>78</SUB>> ]
"186" [label = <(&lt;operator&gt;.cast,(Object[]) parametersExpression.evaluate(exchange))<SUB>78</SUB>> ]
"187" [label = <(TYPE_REF,Object[],Object[])<SUB>78</SUB>> ]
"188" [label = <(evaluate,evaluate(exchange))<SUB>78</SUB>> ]
"189" [label = <(&lt;operator&gt;.fieldAccess,this.parametersExpression)<SUB>78</SUB>> ]
"190" [label = <(IDENTIFIER,this,evaluate(exchange))<SUB>78</SUB>> ]
"191" [label = <(FIELD_IDENTIFIER,parametersExpression,parametersExpression)<SUB>78</SUB>> ]
"192" [label = <(IDENTIFIER,exchange,evaluate(exchange))<SUB>78</SUB>> ]
"193" [label = <(RETURN,return new MethodInvocation() {\012\012    public Method getMethod() {\012        return method;\012    }\012\012    public Object[] getArguments() {\012        return arguments;\012    }\012\012    public Object proceed() throws Exception {\012        if (LOG.isTraceEnabled()) {\012            LOG.trace(&quot;&gt;&gt;&gt;&gt; invoking: &quot; + method + &quot; on bean: &quot; + pojo + &quot; with arguments: &quot; + asString(arguments) + &quot; for exchange: &quot; + exchange);\012        }\012        Object result = invoke(method, pojo, arguments, exchange);\012        if (recipientList != null) {\012            recipientList.sendToRecipientList(exchange, result);\012        }\012        return result;\012    }\012\012    public Object getThis() {\012        return pojo;\012    }\012\012    public AccessibleObject getStaticPart() {\012        return method;\012    }\012};,return new MethodInvocation() {\012\012    public Method getMethod() {\012        return method;\012    }\012\012    public Object[] getArguments() {\012        return arguments;\012    }\012\012    public Object proceed() throws Exception {\012        if (LOG.isTraceEnabled()) {\012            LOG.trace(&quot;&gt;&gt;&gt;&gt; invoking: &quot; + method + &quot; on bean: &quot; + pojo + &quot; with arguments: &quot; + asString(arguments) + &quot; for exchange: &quot; + exchange);\012        }\012        Object result = invoke(method, pojo, arguments, exchange);\012        if (recipientList != null) {\012            recipientList.sendToRecipientList(exchange, result);\012        }\012        return result;\012    }\012\012    public Object getThis() {\012        return pojo;\012    }\012\012    public AccessibleObject getStaticPart() {\012        return method;\012    }\012};)<SUB>79</SUB>> ]
"194" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>79</SUB>> ]
"195" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"196" [label = <(IDENTIFIER,$obj2,&lt;empty&gt;)> ]
"197" [label = <(&lt;operator&gt;.alloc,new MethodInvocation() {\012\012    public Method getMethod() {\012        return method;\012    }\012\012    public Object[] getArguments() {\012        return arguments;\012    }\012\012    public Object proceed() throws Exception {\012        if (LOG.isTraceEnabled()) {\012            LOG.trace(&quot;&gt;&gt;&gt;&gt; invoking: &quot; + method + &quot; on bean: &quot; + pojo + &quot; with arguments: &quot; + asString(arguments) + &quot; for exchange: &quot; + exchange);\012        }\012        Object result = invoke(method, pojo, arguments, exchange);\012        if (recipientList != null) {\012            recipientList.sendToRecipientList(exchange, result);\012        }\012        return result;\012    }\012\012    public Object getThis() {\012        return pojo;\012    }\012\012    public AccessibleObject getStaticPart() {\012        return method;\012    }\012})<SUB>79</SUB>> ]
"198" [label = <(&lt;init&gt;,new MethodInvocation() {\012\012    public Method getMethod() {\012        return method;\012    }\012\012    public Object[] getArguments() {\012        return arguments;\012    }\012\012    public Object proceed() throws Exception {\012        if (LOG.isTraceEnabled()) {\012            LOG.trace(&quot;&gt;&gt;&gt;&gt; invoking: &quot; + method + &quot; on bean: &quot; + pojo + &quot; with arguments: &quot; + asString(arguments) + &quot; for exchange: &quot; + exchange);\012        }\012        Object result = invoke(method, pojo, arguments, exchange);\012        if (recipientList != null) {\012            recipientList.sendToRecipientList(exchange, result);\012        }\012        return result;\012    }\012\012    public Object getThis() {\012        return pojo;\012    }\012\012    public AccessibleObject getStaticPart() {\012        return method;\012    }\012})<SUB>79</SUB>> ]
"199" [label = <(IDENTIFIER,$obj2,new MethodInvocation() {\012\012    public Method getMethod() {\012        return method;\012    }\012\012    public Object[] getArguments() {\012        return arguments;\012    }\012\012    public Object proceed() throws Exception {\012        if (LOG.isTraceEnabled()) {\012            LOG.trace(&quot;&gt;&gt;&gt;&gt; invoking: &quot; + method + &quot; on bean: &quot; + pojo + &quot; with arguments: &quot; + asString(arguments) + &quot; for exchange: &quot; + exchange);\012        }\012        Object result = invoke(method, pojo, arguments, exchange);\012        if (recipientList != null) {\012            recipientList.sendToRecipientList(exchange, result);\012        }\012        return result;\012    }\012\012    public Object getThis() {\012        return pojo;\012    }\012\012    public AccessibleObject getStaticPart() {\012        return method;\012    }\012})> ]
"200" [label = <(IDENTIFIER,$obj2,&lt;empty&gt;)> ]
"201" [label = <(MODIFIER,PUBLIC)> ]
"202" [label = <(MODIFIER,VIRTUAL)> ]
"203" [label = <(METHOD_RETURN,ANY)<SUB>77</SUB>> ]
  "178" -> "179" 
  "178" -> "180" 
  "178" -> "181" 
  "178" -> "182" 
  "178" -> "201" 
  "178" -> "202" 
  "178" -> "203" 
  "182" -> "183" 
  "182" -> "184" 
  "182" -> "193" 
  "184" -> "185" 
  "184" -> "186" 
  "186" -> "187" 
  "186" -> "188" 
  "188" -> "189" 
  "188" -> "192" 
  "189" -> "190" 
  "189" -> "191" 
  "193" -> "194" 
  "194" -> "195" 
  "194" -> "198" 
  "194" -> "200" 
  "195" -> "196" 
  "195" -> "197" 
  "198" -> "199" 
}

digraph "bodyExpression" {  
"161" [label = <(METHOD,bodyExpression)<SUB>250</SUB>> ]
"162" [label = <(PARAM,final Class&lt;T&gt; type)<SUB>250</SUB>> ]
"163" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>250</SUB>> ]
"164" [label = <(RETURN,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getBody(type);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;bodyAs[&quot; + type.getName() + &quot;]&quot;;\012    }\012};,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getBody(type);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;bodyAs[&quot; + type.getName() + &quot;]&quot;;\012    }\012};)<SUB>251</SUB>> ]
"165" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>251</SUB>> ]
"166" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"167" [label = <(IDENTIFIER,$obj9,&lt;empty&gt;)> ]
"168" [label = <(&lt;operator&gt;.alloc,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getBody(type);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;bodyAs[&quot; + type.getName() + &quot;]&quot;;\012    }\012})<SUB>251</SUB>> ]
"169" [label = <(&lt;init&gt;,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getBody(type);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;bodyAs[&quot; + type.getName() + &quot;]&quot;;\012    }\012})<SUB>251</SUB>> ]
"170" [label = <(IDENTIFIER,$obj9,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getBody(type);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;bodyAs[&quot; + type.getName() + &quot;]&quot;;\012    }\012})> ]
"171" [label = <(IDENTIFIER,$obj9,&lt;empty&gt;)> ]
"172" [label = <(MODIFIER,PUBLIC)> ]
"173" [label = <(MODIFIER,STATIC)> ]
"174" [label = <(METHOD_RETURN,ANY)<SUB>250</SUB>> ]
  "161" -> "162" 
  "161" -> "163" 
  "161" -> "172" 
  "161" -> "173" 
  "161" -> "174" 
  "163" -> "164" 
  "164" -> "165" 
  "165" -> "166" 
  "165" -> "169" 
  "165" -> "171" 
  "166" -> "167" 
  "166" -> "168" 
  "169" -> "170" 
}

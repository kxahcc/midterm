digraph "fileParentExpression" {  
"49" [label = <(METHOD,fileParentExpression)<SUB>75</SUB>> ]
"50" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>75</SUB>> ]
"51" [label = <(RETURN,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getHeader(&quot;CamelFileParent&quot;, String.class);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:parent&quot;;\012    }\012};,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getHeader(&quot;CamelFileParent&quot;, String.class);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:parent&quot;;\012    }\012};)<SUB>76</SUB>> ]
"52" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>76</SUB>> ]
"53" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"54" [label = <(IDENTIFIER,$obj2,&lt;empty&gt;)> ]
"55" [label = <(&lt;operator&gt;.alloc,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getHeader(&quot;CamelFileParent&quot;, String.class);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:parent&quot;;\012    }\012})<SUB>76</SUB>> ]
"56" [label = <(&lt;init&gt;,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getHeader(&quot;CamelFileParent&quot;, String.class);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:parent&quot;;\012    }\012})<SUB>76</SUB>> ]
"57" [label = <(IDENTIFIER,$obj2,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getHeader(&quot;CamelFileParent&quot;, String.class);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:parent&quot;;\012    }\012})> ]
"58" [label = <(IDENTIFIER,$obj2,&lt;empty&gt;)> ]
"59" [label = <(MODIFIER,PUBLIC)> ]
"60" [label = <(MODIFIER,STATIC)> ]
"61" [label = <(METHOD_RETURN,ANY)<SUB>75</SUB>> ]
  "49" -> "50" 
  "49" -> "59" 
  "49" -> "60" 
  "49" -> "61" 
  "50" -> "51" 
  "51" -> "52" 
  "52" -> "53" 
  "52" -> "56" 
  "52" -> "58" 
  "53" -> "54" 
  "53" -> "55" 
  "56" -> "57" 
}

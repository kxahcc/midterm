digraph "dateExpression" {  
"114" [label = <(METHOD,dateExpression)<SUB>140</SUB>> ]
"115" [label = <(PARAM,final String command)<SUB>140</SUB>> ]
"116" [label = <(PARAM,final String pattern)<SUB>140</SUB>> ]
"117" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>140</SUB>> ]
"118" [label = <(RETURN,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        if (&quot;file&quot;.equals(command)) {\012            Date date = exchange.getIn().getHeader(&quot;CamelFileLastModified&quot;, Date.class);\012            if (date != null) {\012                SimpleDateFormat df = new SimpleDateFormat(pattern);\012                return df.format(date);\012            } else {\012                return null;\012            }\012        }\012        return ExpressionBuilder.dateExpression(command, pattern).evaluate(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;date(&quot; + command + &quot;:&quot; + pattern + &quot;)&quot;;\012    }\012};,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        if (&quot;file&quot;.equals(command)) {\012            Date date = exchange.getIn().getHeader(&quot;CamelFileLastModified&quot;, Date.class);\012            if (date != null) {\012                SimpleDateFormat df = new SimpleDateFormat(pattern);\012                return df.format(date);\012            } else {\012                return null;\012            }\012        }\012        return ExpressionBuilder.dateExpression(command, pattern).evaluate(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;date(&quot; + command + &quot;:&quot; + pattern + &quot;)&quot;;\012    }\012};)<SUB>141</SUB>> ]
"119" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>141</SUB>> ]
"120" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"121" [label = <(IDENTIFIER,$obj7,&lt;empty&gt;)> ]
"122" [label = <(&lt;operator&gt;.alloc,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        if (&quot;file&quot;.equals(command)) {\012            Date date = exchange.getIn().getHeader(&quot;CamelFileLastModified&quot;, Date.class);\012            if (date != null) {\012                SimpleDateFormat df = new SimpleDateFormat(pattern);\012                return df.format(date);\012            } else {\012                return null;\012            }\012        }\012        return ExpressionBuilder.dateExpression(command, pattern).evaluate(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;date(&quot; + command + &quot;:&quot; + pattern + &quot;)&quot;;\012    }\012})<SUB>141</SUB>> ]
"123" [label = <(&lt;init&gt;,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        if (&quot;file&quot;.equals(command)) {\012            Date date = exchange.getIn().getHeader(&quot;CamelFileLastModified&quot;, Date.class);\012            if (date != null) {\012                SimpleDateFormat df = new SimpleDateFormat(pattern);\012                return df.format(date);\012            } else {\012                return null;\012            }\012        }\012        return ExpressionBuilder.dateExpression(command, pattern).evaluate(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;date(&quot; + command + &quot;:&quot; + pattern + &quot;)&quot;;\012    }\012})<SUB>141</SUB>> ]
"124" [label = <(IDENTIFIER,$obj7,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        if (&quot;file&quot;.equals(command)) {\012            Date date = exchange.getIn().getHeader(&quot;CamelFileLastModified&quot;, Date.class);\012            if (date != null) {\012                SimpleDateFormat df = new SimpleDateFormat(pattern);\012                return df.format(date);\012            } else {\012                return null;\012            }\012        }\012        return ExpressionBuilder.dateExpression(command, pattern).evaluate(exchange);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;date(&quot; + command + &quot;:&quot; + pattern + &quot;)&quot;;\012    }\012})> ]
"125" [label = <(IDENTIFIER,$obj7,&lt;empty&gt;)> ]
"126" [label = <(MODIFIER,PUBLIC)> ]
"127" [label = <(MODIFIER,STATIC)> ]
"128" [label = <(METHOD_RETURN,ANY)<SUB>140</SUB>> ]
  "114" -> "115" 
  "114" -> "116" 
  "114" -> "117" 
  "114" -> "126" 
  "114" -> "127" 
  "114" -> "128" 
  "117" -> "118" 
  "118" -> "119" 
  "119" -> "120" 
  "119" -> "123" 
  "119" -> "125" 
  "120" -> "121" 
  "120" -> "122" 
  "123" -> "124" 
}

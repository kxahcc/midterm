digraph "fileNameExpression" {  
"23" [label = <(METHOD,fileNameExpression)<SUB>43</SUB>> ]
"24" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>43</SUB>> ]
"25" [label = <(RETURN,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getHeader(&quot;CamelFileName&quot;, String.class);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:name&quot;;\012    }\012};,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getHeader(&quot;CamelFileName&quot;, String.class);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:name&quot;;\012    }\012};)<SUB>44</SUB>> ]
"26" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>44</SUB>> ]
"27" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"28" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"29" [label = <(&lt;operator&gt;.alloc,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getHeader(&quot;CamelFileName&quot;, String.class);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:name&quot;;\012    }\012})<SUB>44</SUB>> ]
"30" [label = <(&lt;init&gt;,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getHeader(&quot;CamelFileName&quot;, String.class);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:name&quot;;\012    }\012})<SUB>44</SUB>> ]
"31" [label = <(IDENTIFIER,$obj0,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getHeader(&quot;CamelFileName&quot;, String.class);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:name&quot;;\012    }\012})> ]
"32" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"33" [label = <(MODIFIER,PUBLIC)> ]
"34" [label = <(MODIFIER,STATIC)> ]
"35" [label = <(METHOD_RETURN,ANY)<SUB>43</SUB>> ]
  "23" -> "24" 
  "23" -> "33" 
  "23" -> "34" 
  "23" -> "35" 
  "24" -> "25" 
  "25" -> "26" 
  "26" -> "27" 
  "26" -> "30" 
  "26" -> "32" 
  "27" -> "28" 
  "27" -> "29" 
  "30" -> "31" 
}

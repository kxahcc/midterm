digraph "fileSizeExpression" {  
"101" [label = <(METHOD,fileSizeExpression)<SUB>127</SUB>> ]
"102" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>127</SUB>> ]
"103" [label = <(RETURN,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getHeader(&quot;CamelFileLength&quot;, Long.class);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:length&quot;;\012    }\012};,return new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getHeader(&quot;CamelFileLength&quot;, Long.class);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:length&quot;;\012    }\012};)<SUB>128</SUB>> ]
"104" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>128</SUB>> ]
"105" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"106" [label = <(IDENTIFIER,$obj6,&lt;empty&gt;)> ]
"107" [label = <(&lt;operator&gt;.alloc,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getHeader(&quot;CamelFileLength&quot;, Long.class);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:length&quot;;\012    }\012})<SUB>128</SUB>> ]
"108" [label = <(&lt;init&gt;,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getHeader(&quot;CamelFileLength&quot;, Long.class);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:length&quot;;\012    }\012})<SUB>128</SUB>> ]
"109" [label = <(IDENTIFIER,$obj6,new Expression&lt;E&gt;() {\012\012    public Object evaluate(E exchange) {\012        return exchange.getIn().getHeader(&quot;CamelFileLength&quot;, Long.class);\012    }\012\012    @Override\012    public String toString() {\012        return &quot;file:length&quot;;\012    }\012})> ]
"110" [label = <(IDENTIFIER,$obj6,&lt;empty&gt;)> ]
"111" [label = <(MODIFIER,PUBLIC)> ]
"112" [label = <(MODIFIER,STATIC)> ]
"113" [label = <(METHOD_RETURN,ANY)<SUB>127</SUB>> ]
  "101" -> "102" 
  "101" -> "111" 
  "101" -> "112" 
  "101" -> "113" 
  "102" -> "103" 
  "103" -> "104" 
  "104" -> "105" 
  "104" -> "108" 
  "104" -> "110" 
  "105" -> "106" 
  "105" -> "107" 
  "108" -> "109" 
}

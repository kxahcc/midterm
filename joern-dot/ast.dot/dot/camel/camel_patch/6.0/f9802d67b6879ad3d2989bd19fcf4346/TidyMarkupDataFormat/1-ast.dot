digraph "&lt;init&gt;" {  
"36" [label = <(METHOD,&lt;init&gt;)<SUB>45</SUB>> ]
"7" [label = <(PARAM,this)<SUB>45</SUB>> ]
"37" [label = <(PARAM,Class&lt;?&gt; dataObjectType)<SUB>45</SUB>> ]
"38" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>45</SUB>> ]
"39" [label = <(&lt;init&gt;,this();)<SUB>46</SUB>> ]
"6" [label = <(IDENTIFIER,this,this();)> ]
"40" [label = <(CONTROL_STRUCTURE,if (!dataObjectType.isAssignableFrom(String.class) &amp;&amp; !dataObjectType.isAssignableFrom(Node.class)),if (!dataObjectType.isAssignableFrom(String.class) &amp;&amp; !dataObjectType.isAssignableFrom(Node.class)))<SUB>47</SUB>> ]
"41" [label = <(&lt;operator&gt;.logicalAnd,!dataObjectType.isAssignableFrom(String.class) &amp;&amp; !dataObjectType.isAssignableFrom(Node.class))<SUB>47</SUB>> ]
"42" [label = <(&lt;operator&gt;.logicalNot,!dataObjectType.isAssignableFrom(String.class))<SUB>47</SUB>> ]
"43" [label = <(isAssignableFrom,dataObjectType.isAssignableFrom(String.class))<SUB>47</SUB>> ]
"44" [label = <(IDENTIFIER,dataObjectType,dataObjectType.isAssignableFrom(String.class))<SUB>47</SUB>> ]
"45" [label = <(&lt;operator&gt;.fieldAccess,String.class)<SUB>47</SUB>> ]
"46" [label = <(IDENTIFIER,String,dataObjectType.isAssignableFrom(String.class))<SUB>47</SUB>> ]
"47" [label = <(FIELD_IDENTIFIER,class,class)<SUB>47</SUB>> ]
"48" [label = <(&lt;operator&gt;.logicalNot,!dataObjectType.isAssignableFrom(Node.class))<SUB>47</SUB>> ]
"49" [label = <(isAssignableFrom,isAssignableFrom(Node.class))<SUB>47</SUB>> ]
"50" [label = <(IDENTIFIER,dataObjectType,isAssignableFrom(Node.class))<SUB>47</SUB>> ]
"51" [label = <(&lt;operator&gt;.fieldAccess,Node.class)<SUB>47</SUB>> ]
"52" [label = <(IDENTIFIER,Node,isAssignableFrom(Node.class))<SUB>47</SUB>> ]
"53" [label = <(FIELD_IDENTIFIER,class,class)<SUB>47</SUB>> ]
"54" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>47</SUB>> ]
"55" [label = <(&lt;operator&gt;.throw,throw new IllegalArgumentException(&quot;TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object&quot;);)<SUB>48</SUB>> ]
"56" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>48</SUB>> ]
"57" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"58" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"59" [label = <(&lt;operator&gt;.alloc,new IllegalArgumentException(&quot;TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object&quot;))<SUB>48</SUB>> ]
"60" [label = <(&lt;init&gt;,new IllegalArgumentException(&quot;TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object&quot;))<SUB>48</SUB>> ]
"61" [label = <(IDENTIFIER,$obj0,new IllegalArgumentException(&quot;TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object&quot;))> ]
"62" [label = <(LITERAL,&quot;TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object&quot;,new IllegalArgumentException(&quot;TidyMarkupDataFormat only supports returning a String or a org.w3c.dom.Node object&quot;))<SUB>48</SUB>> ]
"63" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"64" [label = <(setDataObjectType,this.setDataObjectType(dataObjectType))<SUB>50</SUB>> ]
"8" [label = <(IDENTIFIER,this,this.setDataObjectType(dataObjectType))<SUB>50</SUB>> ]
"65" [label = <(IDENTIFIER,dataObjectType,this.setDataObjectType(dataObjectType))<SUB>50</SUB>> ]
"66" [label = <(MODIFIER,CONSTRUCTOR)> ]
"67" [label = <(MODIFIER,PUBLIC)> ]
"68" [label = <(METHOD_RETURN,void)<SUB>51</SUB>> ]
  "36" -> "7" 
  "36" -> "37" 
  "36" -> "38" 
  "36" -> "66" 
  "36" -> "67" 
  "36" -> "68" 
  "38" -> "39" 
  "38" -> "40" 
  "38" -> "64" 
  "39" -> "6" 
  "40" -> "41" 
  "40" -> "54" 
  "41" -> "42" 
  "41" -> "48" 
  "42" -> "43" 
  "43" -> "44" 
  "43" -> "45" 
  "45" -> "46" 
  "45" -> "47" 
  "48" -> "49" 
  "49" -> "50" 
  "49" -> "51" 
  "51" -> "52" 
  "51" -> "53" 
  "54" -> "55" 
  "55" -> "56" 
  "56" -> "57" 
  "56" -> "60" 
  "56" -> "63" 
  "57" -> "58" 
  "57" -> "59" 
  "60" -> "61" 
  "60" -> "62" 
  "64" -> "8" 
  "64" -> "65" 
}

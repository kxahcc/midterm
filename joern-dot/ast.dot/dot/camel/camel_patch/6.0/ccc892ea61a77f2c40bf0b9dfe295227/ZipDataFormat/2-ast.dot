digraph "marshal" {  
"52" [label = <(METHOD,marshal)<SUB>43</SUB>> ]
"53" [label = <(PARAM,this)<SUB>43</SUB>> ]
"54" [label = <(PARAM,Exchange exchange)<SUB>43</SUB>> ]
"55" [label = <(PARAM,Object graph)<SUB>43</SUB>> ]
"56" [label = <(PARAM,OutputStream stream)<SUB>43</SUB>> ]
"57" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>44</SUB>> ]
"58" [label = <(LOCAL,InputStream is: java.io.InputStream)> ]
"59" [label = <(&lt;operator&gt;.assignment,InputStream is = convertTo(InputStream.class, graph))<SUB>46</SUB>> ]
"60" [label = <(IDENTIFIER,is,InputStream is = convertTo(InputStream.class, graph))<SUB>46</SUB>> ]
"61" [label = <(convertTo,convertTo(InputStream.class, graph))<SUB>46</SUB>> ]
"62" [label = <(getTypeConverter,getTypeConverter())<SUB>46</SUB>> ]
"63" [label = <(getContext,getContext())<SUB>46</SUB>> ]
"64" [label = <(IDENTIFIER,exchange,getContext())<SUB>46</SUB>> ]
"65" [label = <(&lt;operator&gt;.fieldAccess,InputStream.class)<SUB>46</SUB>> ]
"66" [label = <(IDENTIFIER,InputStream,convertTo(InputStream.class, graph))<SUB>46</SUB>> ]
"67" [label = <(FIELD_IDENTIFIER,class,class)<SUB>46</SUB>> ]
"68" [label = <(IDENTIFIER,graph,convertTo(InputStream.class, graph))<SUB>46</SUB>> ]
"69" [label = <(CONTROL_STRUCTURE,if (is == null),if (is == null))<SUB>47</SUB>> ]
"70" [label = <(&lt;operator&gt;.equals,is == null)<SUB>47</SUB>> ]
"71" [label = <(IDENTIFIER,is,is == null)<SUB>47</SUB>> ]
"72" [label = <(LITERAL,null,is == null)<SUB>47</SUB>> ]
"73" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>47</SUB>> ]
"74" [label = <(&lt;operator&gt;.throw,throw new IllegalArgumentException(&quot;Cannot get the inputstream for ZipDataFormat mashalling&quot;);)<SUB>48</SUB>> ]
"75" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>48</SUB>> ]
"76" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"77" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"78" [label = <(&lt;operator&gt;.alloc,new IllegalArgumentException(&quot;Cannot get the inputstream for ZipDataFormat mashalling&quot;))<SUB>48</SUB>> ]
"79" [label = <(&lt;init&gt;,new IllegalArgumentException(&quot;Cannot get the inputstream for ZipDataFormat mashalling&quot;))<SUB>48</SUB>> ]
"80" [label = <(IDENTIFIER,$obj0,new IllegalArgumentException(&quot;Cannot get the inputstream for ZipDataFormat mashalling&quot;))> ]
"81" [label = <(LITERAL,&quot;Cannot get the inputstream for ZipDataFormat mashalling&quot;,new IllegalArgumentException(&quot;Cannot get the inputstream for ZipDataFormat mashalling&quot;))<SUB>48</SUB>> ]
"82" [label = <(IDENTIFIER,$obj0,&lt;empty&gt;)> ]
"8" [label = <(LOCAL,DeflaterOutputStream zipOutput: java.util.zip.DeflaterOutputStream)> ]
"83" [label = <(&lt;operator&gt;.assignment,DeflaterOutputStream zipOutput = new DeflaterOutputStream(stream, new Deflater(compressionLevel)))<SUB>51</SUB>> ]
"84" [label = <(IDENTIFIER,zipOutput,DeflaterOutputStream zipOutput = new DeflaterOutputStream(stream, new Deflater(compressionLevel)))<SUB>51</SUB>> ]
"85" [label = <(&lt;operator&gt;.alloc,new DeflaterOutputStream(stream, new Deflater(compressionLevel)))<SUB>51</SUB>> ]
"86" [label = <(&lt;init&gt;,new DeflaterOutputStream(stream, new Deflater(compressionLevel)))<SUB>51</SUB>> ]
"7" [label = <(IDENTIFIER,zipOutput,new DeflaterOutputStream(stream, new Deflater(compressionLevel)))<SUB>51</SUB>> ]
"87" [label = <(IDENTIFIER,stream,new DeflaterOutputStream(stream, new Deflater(compressionLevel)))<SUB>51</SUB>> ]
"88" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>51</SUB>> ]
"89" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"90" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"91" [label = <(&lt;operator&gt;.alloc,new Deflater(compressionLevel))<SUB>51</SUB>> ]
"92" [label = <(&lt;init&gt;,new Deflater(compressionLevel))<SUB>51</SUB>> ]
"93" [label = <(IDENTIFIER,$obj1,new Deflater(compressionLevel))> ]
"94" [label = <(&lt;operator&gt;.fieldAccess,this.compressionLevel)<SUB>51</SUB>> ]
"95" [label = <(IDENTIFIER,this,new Deflater(compressionLevel))<SUB>51</SUB>> ]
"96" [label = <(FIELD_IDENTIFIER,compressionLevel,compressionLevel)<SUB>51</SUB>> ]
"97" [label = <(IDENTIFIER,$obj1,&lt;empty&gt;)> ]
"98" [label = <(CONTROL_STRUCTURE,try,try)<SUB>52</SUB>> ]
"99" [label = <(BLOCK,try,try)<SUB>52</SUB>> ]
"100" [label = <(copy,copy(is, zipOutput))<SUB>53</SUB>> ]
"101" [label = <(IDENTIFIER,IOConverter,copy(is, zipOutput))<SUB>53</SUB>> ]
"102" [label = <(IDENTIFIER,is,copy(is, zipOutput))<SUB>53</SUB>> ]
"103" [label = <(IDENTIFIER,zipOutput,copy(is, zipOutput))<SUB>53</SUB>> ]
"104" [label = <(BLOCK,finally,finally)<SUB>54</SUB>> ]
"105" [label = <(close,zipOutput.close())<SUB>55</SUB>> ]
"106" [label = <(IDENTIFIER,zipOutput,zipOutput.close())<SUB>55</SUB>> ]
"107" [label = <(MODIFIER,PUBLIC)> ]
"108" [label = <(MODIFIER,VIRTUAL)> ]
"109" [label = <(METHOD_RETURN,void)<SUB>43</SUB>> ]
  "52" -> "53" 
  "52" -> "54" 
  "52" -> "55" 
  "52" -> "56" 
  "52" -> "57" 
  "52" -> "107" 
  "52" -> "108" 
  "52" -> "109" 
  "57" -> "58" 
  "57" -> "59" 
  "57" -> "69" 
  "57" -> "8" 
  "57" -> "83" 
  "57" -> "86" 
  "57" -> "98" 
  "59" -> "60" 
  "59" -> "61" 
  "61" -> "62" 
  "61" -> "65" 
  "61" -> "68" 
  "62" -> "63" 
  "63" -> "64" 
  "65" -> "66" 
  "65" -> "67" 
  "69" -> "70" 
  "69" -> "73" 
  "70" -> "71" 
  "70" -> "72" 
  "73" -> "74" 
  "74" -> "75" 
  "75" -> "76" 
  "75" -> "79" 
  "75" -> "82" 
  "76" -> "77" 
  "76" -> "78" 
  "79" -> "80" 
  "79" -> "81" 
  "83" -> "84" 
  "83" -> "85" 
  "86" -> "7" 
  "86" -> "87" 
  "86" -> "88" 
  "88" -> "89" 
  "88" -> "92" 
  "88" -> "97" 
  "89" -> "90" 
  "89" -> "91" 
  "92" -> "93" 
  "92" -> "94" 
  "94" -> "95" 
  "94" -> "96" 
  "98" -> "99" 
  "98" -> "104" 
  "99" -> "100" 
  "100" -> "101" 
  "100" -> "102" 
  "100" -> "103" 
  "104" -> "105" 
  "105" -> "106" 
}

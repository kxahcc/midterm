digraph "loadConverterMethods" {  
"338" [label = <(METHOD,loadConverterMethods)<SUB>141</SUB>> ]
"23" [label = <(PARAM,this)<SUB>141</SUB>> ]
"339" [label = <(PARAM,TypeConverterRegistry registry)<SUB>141</SUB>> ]
"340" [label = <(PARAM,Class type)<SUB>141</SUB>> ]
"341" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>141</SUB>> ]
"342" [label = <(CONTROL_STRUCTURE,if (visitedClasses.contains(type)),if (visitedClasses.contains(type)))<SUB>142</SUB>> ]
"343" [label = <(contains,visitedClasses.contains(type))<SUB>142</SUB>> ]
"344" [label = <(&lt;operator&gt;.fieldAccess,this.visitedClasses)<SUB>142</SUB>> ]
"345" [label = <(IDENTIFIER,this,visitedClasses.contains(type))<SUB>142</SUB>> ]
"346" [label = <(FIELD_IDENTIFIER,visitedClasses,visitedClasses)<SUB>142</SUB>> ]
"347" [label = <(IDENTIFIER,type,visitedClasses.contains(type))<SUB>142</SUB>> ]
"348" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>142</SUB>> ]
"349" [label = <(RETURN,return;,return;)<SUB>143</SUB>> ]
"350" [label = <(add,visitedClasses.add(type))<SUB>145</SUB>> ]
"351" [label = <(&lt;operator&gt;.fieldAccess,this.visitedClasses)<SUB>145</SUB>> ]
"352" [label = <(IDENTIFIER,this,visitedClasses.add(type))<SUB>145</SUB>> ]
"353" [label = <(FIELD_IDENTIFIER,visitedClasses,visitedClasses)<SUB>145</SUB>> ]
"354" [label = <(IDENTIFIER,type,visitedClasses.add(type))<SUB>145</SUB>> ]
"355" [label = <(CONTROL_STRUCTURE,try,try)<SUB>146</SUB>> ]
"356" [label = <(BLOCK,try,try)<SUB>146</SUB>> ]
"357" [label = <(LOCAL,Method[] methods: java.lang.reflect.Method[])> ]
"358" [label = <(&lt;operator&gt;.assignment,Method[] methods = type.getDeclaredMethods())<SUB>147</SUB>> ]
"359" [label = <(IDENTIFIER,methods,Method[] methods = type.getDeclaredMethods())<SUB>147</SUB>> ]
"360" [label = <(getDeclaredMethods,type.getDeclaredMethods())<SUB>147</SUB>> ]
"361" [label = <(IDENTIFIER,type,type.getDeclaredMethods())<SUB>147</SUB>> ]
"26" [label = <(LOCAL,CachingInjector injector: ANY)> ]
"362" [label = <(&lt;operator&gt;.assignment,ANY injector = null)<SUB>148</SUB>> ]
"363" [label = <(IDENTIFIER,injector,ANY injector = null)<SUB>148</SUB>> ]
"364" [label = <(LITERAL,null,ANY injector = null)<SUB>148</SUB>> ]
"365" [label = <(CONTROL_STRUCTURE,&lt;empty&gt;,&lt;empty&gt;)> ]
"366" [label = <(LOCAL,$idx0: int)<SUB>150</SUB>> ]
"367" [label = <(&lt;operator&gt;.assignment,int $idx0 = 0)<SUB>150</SUB>> ]
"368" [label = <(IDENTIFIER,$idx0,int $idx0 = 0)<SUB>150</SUB>> ]
"369" [label = <(LITERAL,0,int $idx0 = 0)<SUB>150</SUB>> ]
"370" [label = <(&lt;operator&gt;.lessThan,$idx0 &lt; methods.length)<SUB>150</SUB>> ]
"371" [label = <(IDENTIFIER,$idx0,$idx0 &lt; methods.length)<SUB>150</SUB>> ]
"372" [label = <(&lt;operator&gt;.fieldAccess,methods.length)<SUB>150</SUB>> ]
"373" [label = <(IDENTIFIER,methods,$idx0 &lt; methods.length)<SUB>150</SUB>> ]
"374" [label = <(FIELD_IDENTIFIER,length,length)<SUB>150</SUB>> ]
"375" [label = <(&lt;operator&gt;.postIncrement,$idx0++)<SUB>150</SUB>> ]
"376" [label = <(IDENTIFIER,$idx0,$idx0++)<SUB>150</SUB>> ]
"377" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>150</SUB>> ]
"378" [label = <(LOCAL,method: java.lang.reflect.Method)<SUB>150</SUB>> ]
"379" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>150</SUB>> ]
"380" [label = <(IDENTIFIER,method,&lt;empty&gt;)<SUB>150</SUB>> ]
"381" [label = <(&lt;operator&gt;.indexAccess,&lt;empty&gt;)<SUB>150</SUB>> ]
"382" [label = <(IDENTIFIER,methods,&lt;empty&gt;)<SUB>150</SUB>> ]
"383" [label = <(IDENTIFIER,$idx0,&lt;empty&gt;)<SUB>150</SUB>> ]
"384" [label = <(CONTROL_STRUCTURE,if (ObjectHelper.hasAnnotation(method, Converter.class, true)),if (ObjectHelper.hasAnnotation(method, Converter.class, true)))<SUB>153</SUB>> ]
"385" [label = <(hasAnnotation,hasAnnotation(method, Converter.class, true))<SUB>153</SUB>> ]
"386" [label = <(IDENTIFIER,ObjectHelper,hasAnnotation(method, Converter.class, true))<SUB>153</SUB>> ]
"387" [label = <(IDENTIFIER,method,hasAnnotation(method, Converter.class, true))<SUB>153</SUB>> ]
"388" [label = <(&lt;operator&gt;.fieldAccess,Converter.class)<SUB>153</SUB>> ]
"389" [label = <(IDENTIFIER,Converter,hasAnnotation(method, Converter.class, true))<SUB>153</SUB>> ]
"390" [label = <(FIELD_IDENTIFIER,class,class)<SUB>153</SUB>> ]
"391" [label = <(LITERAL,true,hasAnnotation(method, Converter.class, true))<SUB>153</SUB>> ]
"392" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>153</SUB>> ]
"393" [label = <(CONTROL_STRUCTURE,if (isValidConverterMethod(method)),if (isValidConverterMethod(method)))<SUB>154</SUB>> ]
"394" [label = <(isValidConverterMethod,this.isValidConverterMethod(method))<SUB>154</SUB>> ]
"22" [label = <(IDENTIFIER,this,this.isValidConverterMethod(method))<SUB>154</SUB>> ]
"395" [label = <(IDENTIFIER,method,this.isValidConverterMethod(method))<SUB>154</SUB>> ]
"396" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>154</SUB>> ]
"397" [label = <(LOCAL,int modifiers: int)> ]
"398" [label = <(&lt;operator&gt;.assignment,int modifiers = method.getModifiers())<SUB>155</SUB>> ]
"399" [label = <(IDENTIFIER,modifiers,int modifiers = method.getModifiers())<SUB>155</SUB>> ]
"400" [label = <(getModifiers,method.getModifiers())<SUB>155</SUB>> ]
"401" [label = <(IDENTIFIER,method,method.getModifiers())<SUB>155</SUB>> ]
"402" [label = <(CONTROL_STRUCTURE,if (isAbstract(modifiers) || !isPublic(modifiers)),if (isAbstract(modifiers) || !isPublic(modifiers)))<SUB>156</SUB>> ]
"403" [label = <(&lt;operator&gt;.logicalOr,isAbstract(modifiers) || !isPublic(modifiers))<SUB>156</SUB>> ]
"404" [label = <(isAbstract,isAbstract(modifiers))<SUB>156</SUB>> ]
"405" [label = <(IDENTIFIER,modifiers,isAbstract(modifiers))<SUB>156</SUB>> ]
"406" [label = <(&lt;operator&gt;.logicalNot,!isPublic(modifiers))<SUB>156</SUB>> ]
"407" [label = <(isPublic,isPublic(modifiers))<SUB>156</SUB>> ]
"408" [label = <(IDENTIFIER,modifiers,isPublic(modifiers))<SUB>156</SUB>> ]
"409" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>156</SUB>> ]
"410" [label = <(warn,warn(&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot; + method + &quot; as a converter method is not a public and concrete method&quot;))<SUB>157</SUB>> ]
"411" [label = <(&lt;operator&gt;.fieldAccess,AnnotationTypeConverterLoader.LOG)<SUB>157</SUB>> ]
"412" [label = <(IDENTIFIER,AnnotationTypeConverterLoader,warn(&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot; + method + &quot; as a converter method is not a public and concrete method&quot;))<SUB>157</SUB>> ]
"413" [label = <(FIELD_IDENTIFIER,LOG,LOG)<SUB>157</SUB>> ]
"414" [label = <(&lt;operator&gt;.addition,&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot; + method + &quot; as a converter method is not a public and concrete method&quot;)<SUB>157</SUB>> ]
"415" [label = <(&lt;operator&gt;.addition,&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot; + method)<SUB>157</SUB>> ]
"416" [label = <(&lt;operator&gt;.addition,&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot;)<SUB>157</SUB>> ]
"417" [label = <(&lt;operator&gt;.addition,&quot;Ignoring bad converter on type: &quot; + type.getName())<SUB>157</SUB>> ]
"418" [label = <(LITERAL,&quot;Ignoring bad converter on type: &quot;,&quot;Ignoring bad converter on type: &quot; + type.getName())<SUB>157</SUB>> ]
"419" [label = <(getName,type.getName())<SUB>157</SUB>> ]
"420" [label = <(IDENTIFIER,type,type.getName())<SUB>157</SUB>> ]
"421" [label = <(LITERAL,&quot; method: &quot;,&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot;)<SUB>157</SUB>> ]
"422" [label = <(IDENTIFIER,method,&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot; + method)<SUB>157</SUB>> ]
"423" [label = <(LITERAL,&quot; as a converter method is not a public and concrete method&quot;,&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot; + method + &quot; as a converter method is not a public and concrete method&quot;)<SUB>158</SUB>> ]
"424" [label = <(CONTROL_STRUCTURE,else,else)<SUB>159</SUB>> ]
"425" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>159</SUB>> ]
"426" [label = <(LOCAL,Class&lt;?&gt; toType: java.lang.Class)> ]
"427" [label = <(&lt;operator&gt;.assignment,Class toType = method.getReturnType())<SUB>160</SUB>> ]
"428" [label = <(IDENTIFIER,toType,Class toType = method.getReturnType())<SUB>160</SUB>> ]
"429" [label = <(getReturnType,method.getReturnType())<SUB>160</SUB>> ]
"430" [label = <(IDENTIFIER,method,method.getReturnType())<SUB>160</SUB>> ]
"431" [label = <(CONTROL_STRUCTURE,if (toType.equals(Void.class)),if (toType.equals(Void.class)))<SUB>161</SUB>> ]
"432" [label = <(equals,toType.equals(Void.class))<SUB>161</SUB>> ]
"433" [label = <(IDENTIFIER,toType,toType.equals(Void.class))<SUB>161</SUB>> ]
"434" [label = <(&lt;operator&gt;.fieldAccess,Void.class)<SUB>161</SUB>> ]
"435" [label = <(IDENTIFIER,Void,toType.equals(Void.class))<SUB>161</SUB>> ]
"436" [label = <(FIELD_IDENTIFIER,class,class)<SUB>161</SUB>> ]
"437" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>161</SUB>> ]
"438" [label = <(warn,warn(&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot; + method + &quot; as a converter method returns a void method&quot;))<SUB>162</SUB>> ]
"439" [label = <(&lt;operator&gt;.fieldAccess,AnnotationTypeConverterLoader.LOG)<SUB>162</SUB>> ]
"440" [label = <(IDENTIFIER,AnnotationTypeConverterLoader,warn(&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot; + method + &quot; as a converter method returns a void method&quot;))<SUB>162</SUB>> ]
"441" [label = <(FIELD_IDENTIFIER,LOG,LOG)<SUB>162</SUB>> ]
"442" [label = <(&lt;operator&gt;.addition,&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot; + method + &quot; as a converter method returns a void method&quot;)<SUB>162</SUB>> ]
"443" [label = <(&lt;operator&gt;.addition,&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot; + method)<SUB>162</SUB>> ]
"444" [label = <(&lt;operator&gt;.addition,&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot;)<SUB>162</SUB>> ]
"445" [label = <(&lt;operator&gt;.addition,&quot;Ignoring bad converter on type: &quot; + type.getName())<SUB>162</SUB>> ]
"446" [label = <(LITERAL,&quot;Ignoring bad converter on type: &quot;,&quot;Ignoring bad converter on type: &quot; + type.getName())<SUB>162</SUB>> ]
"447" [label = <(getName,type.getName())<SUB>162</SUB>> ]
"448" [label = <(IDENTIFIER,type,type.getName())<SUB>162</SUB>> ]
"449" [label = <(LITERAL,&quot; method: &quot;,&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot;)<SUB>162</SUB>> ]
"450" [label = <(IDENTIFIER,method,&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot; + method)<SUB>163</SUB>> ]
"451" [label = <(LITERAL,&quot; as a converter method returns a void method&quot;,&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot; + method + &quot; as a converter method returns a void method&quot;)<SUB>163</SUB>> ]
"452" [label = <(CONTROL_STRUCTURE,else,else)<SUB>164</SUB>> ]
"453" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>164</SUB>> ]
"454" [label = <(LOCAL,Class&lt;?&gt; fromType: java.lang.Class)> ]
"455" [label = <(&lt;operator&gt;.assignment,Class fromType = method.getParameterTypes()[0])<SUB>165</SUB>> ]
"456" [label = <(IDENTIFIER,fromType,Class fromType = method.getParameterTypes()[0])<SUB>165</SUB>> ]
"457" [label = <(&lt;operator&gt;.indexAccess,method.getParameterTypes()[0])<SUB>165</SUB>> ]
"458" [label = <(getParameterTypes,method.getParameterTypes())<SUB>165</SUB>> ]
"459" [label = <(IDENTIFIER,method,method.getParameterTypes())<SUB>165</SUB>> ]
"460" [label = <(LITERAL,0,Class fromType = method.getParameterTypes()[0])<SUB>165</SUB>> ]
"461" [label = <(CONTROL_STRUCTURE,if (isStatic(modifiers)),if (isStatic(modifiers)))<SUB>166</SUB>> ]
"462" [label = <(isStatic,isStatic(modifiers))<SUB>166</SUB>> ]
"463" [label = <(IDENTIFIER,modifiers,isStatic(modifiers))<SUB>166</SUB>> ]
"464" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>166</SUB>> ]
"465" [label = <(registerTypeConverter,registerTypeConverter(registry, method, toType, fromType, new StaticMethodTypeConverter(method)))<SUB>167</SUB>> ]
"24" [label = <(IDENTIFIER,this,registerTypeConverter(registry, method, toType, fromType, new StaticMethodTypeConverter(method)))<SUB>167</SUB>> ]
"466" [label = <(IDENTIFIER,registry,registerTypeConverter(registry, method, toType, fromType, new StaticMethodTypeConverter(method)))<SUB>167</SUB>> ]
"467" [label = <(IDENTIFIER,method,registerTypeConverter(registry, method, toType, fromType, new StaticMethodTypeConverter(method)))<SUB>167</SUB>> ]
"468" [label = <(IDENTIFIER,toType,registerTypeConverter(registry, method, toType, fromType, new StaticMethodTypeConverter(method)))<SUB>167</SUB>> ]
"469" [label = <(IDENTIFIER,fromType,registerTypeConverter(registry, method, toType, fromType, new StaticMethodTypeConverter(method)))<SUB>167</SUB>> ]
"470" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>168</SUB>> ]
"471" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"472" [label = <(IDENTIFIER,$obj7,&lt;empty&gt;)> ]
"473" [label = <(&lt;operator&gt;.alloc,new StaticMethodTypeConverter(method))<SUB>168</SUB>> ]
"474" [label = <(&lt;init&gt;,new StaticMethodTypeConverter(method))<SUB>168</SUB>> ]
"475" [label = <(IDENTIFIER,$obj7,new StaticMethodTypeConverter(method))> ]
"476" [label = <(IDENTIFIER,method,new StaticMethodTypeConverter(method))<SUB>168</SUB>> ]
"477" [label = <(IDENTIFIER,$obj7,&lt;empty&gt;)> ]
"478" [label = <(CONTROL_STRUCTURE,else,else)<SUB>169</SUB>> ]
"479" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>169</SUB>> ]
"480" [label = <(CONTROL_STRUCTURE,if (injector == null),if (injector == null))<SUB>170</SUB>> ]
"481" [label = <(&lt;operator&gt;.equals,injector == null)<SUB>170</SUB>> ]
"482" [label = <(IDENTIFIER,injector,injector == null)<SUB>170</SUB>> ]
"483" [label = <(LITERAL,null,injector == null)<SUB>170</SUB>> ]
"484" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>170</SUB>> ]
"485" [label = <(&lt;operator&gt;.assignment,injector = new CachingInjector(registry, type))<SUB>171</SUB>> ]
"486" [label = <(IDENTIFIER,injector,injector = new CachingInjector(registry, type))<SUB>171</SUB>> ]
"487" [label = <(&lt;operator&gt;.alloc,new CachingInjector(registry, type))<SUB>171</SUB>> ]
"488" [label = <(&lt;init&gt;,new CachingInjector(registry, type))<SUB>171</SUB>> ]
"25" [label = <(IDENTIFIER,injector,new CachingInjector(registry, type))<SUB>171</SUB>> ]
"489" [label = <(IDENTIFIER,registry,new CachingInjector(registry, type))<SUB>171</SUB>> ]
"490" [label = <(IDENTIFIER,type,new CachingInjector(registry, type))<SUB>171</SUB>> ]
"491" [label = <(registerTypeConverter,registerTypeConverter(registry, method, toType, fromType, new InstanceMethodTypeConverter(injector, method)))<SUB>173</SUB>> ]
"27" [label = <(IDENTIFIER,this,registerTypeConverter(registry, method, toType, fromType, new InstanceMethodTypeConverter(injector, method)))<SUB>173</SUB>> ]
"492" [label = <(IDENTIFIER,registry,registerTypeConverter(registry, method, toType, fromType, new InstanceMethodTypeConverter(injector, method)))<SUB>173</SUB>> ]
"493" [label = <(IDENTIFIER,method,registerTypeConverter(registry, method, toType, fromType, new InstanceMethodTypeConverter(injector, method)))<SUB>173</SUB>> ]
"494" [label = <(IDENTIFIER,toType,registerTypeConverter(registry, method, toType, fromType, new InstanceMethodTypeConverter(injector, method)))<SUB>173</SUB>> ]
"495" [label = <(IDENTIFIER,fromType,registerTypeConverter(registry, method, toType, fromType, new InstanceMethodTypeConverter(injector, method)))<SUB>173</SUB>> ]
"496" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>174</SUB>> ]
"497" [label = <(&lt;operator&gt;.assignment,&lt;empty&gt;)> ]
"498" [label = <(IDENTIFIER,$obj9,&lt;empty&gt;)> ]
"499" [label = <(&lt;operator&gt;.alloc,new InstanceMethodTypeConverter(injector, method))<SUB>174</SUB>> ]
"500" [label = <(&lt;init&gt;,new InstanceMethodTypeConverter(injector, method))<SUB>174</SUB>> ]
"501" [label = <(IDENTIFIER,$obj9,new InstanceMethodTypeConverter(injector, method))> ]
"502" [label = <(IDENTIFIER,injector,new InstanceMethodTypeConverter(injector, method))<SUB>174</SUB>> ]
"503" [label = <(IDENTIFIER,method,new InstanceMethodTypeConverter(injector, method))<SUB>174</SUB>> ]
"504" [label = <(IDENTIFIER,$obj9,&lt;empty&gt;)> ]
"505" [label = <(CONTROL_STRUCTURE,else,else)<SUB>178</SUB>> ]
"506" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>178</SUB>> ]
"507" [label = <(warn,warn(&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot; + method + &quot; as a converter method should have one parameter&quot;))<SUB>179</SUB>> ]
"508" [label = <(&lt;operator&gt;.fieldAccess,AnnotationTypeConverterLoader.LOG)<SUB>179</SUB>> ]
"509" [label = <(IDENTIFIER,AnnotationTypeConverterLoader,warn(&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot; + method + &quot; as a converter method should have one parameter&quot;))<SUB>179</SUB>> ]
"510" [label = <(FIELD_IDENTIFIER,LOG,LOG)<SUB>179</SUB>> ]
"511" [label = <(&lt;operator&gt;.addition,&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot; + method + &quot; as a converter method should have one parameter&quot;)<SUB>179</SUB>> ]
"512" [label = <(&lt;operator&gt;.addition,&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot; + method)<SUB>179</SUB>> ]
"513" [label = <(&lt;operator&gt;.addition,&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot;)<SUB>179</SUB>> ]
"514" [label = <(&lt;operator&gt;.addition,&quot;Ignoring bad converter on type: &quot; + type.getName())<SUB>179</SUB>> ]
"515" [label = <(LITERAL,&quot;Ignoring bad converter on type: &quot;,&quot;Ignoring bad converter on type: &quot; + type.getName())<SUB>179</SUB>> ]
"516" [label = <(getName,type.getName())<SUB>179</SUB>> ]
"517" [label = <(IDENTIFIER,type,type.getName())<SUB>179</SUB>> ]
"518" [label = <(LITERAL,&quot; method: &quot;,&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot;)<SUB>179</SUB>> ]
"519" [label = <(IDENTIFIER,method,&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot; + method)<SUB>179</SUB>> ]
"520" [label = <(LITERAL,&quot; as a converter method should have one parameter&quot;,&quot;Ignoring bad converter on type: &quot; + type.getName() + &quot; method: &quot; + method + &quot; as a converter method should have one parameter&quot;)<SUB>180</SUB>> ]
"521" [label = <(LOCAL,Class superclass: java.lang.Class)> ]
"522" [label = <(&lt;operator&gt;.assignment,Class superclass = type.getSuperclass())<SUB>185</SUB>> ]
"523" [label = <(IDENTIFIER,superclass,Class superclass = type.getSuperclass())<SUB>185</SUB>> ]
"524" [label = <(getSuperclass,type.getSuperclass())<SUB>185</SUB>> ]
"525" [label = <(IDENTIFIER,type,type.getSuperclass())<SUB>185</SUB>> ]
"526" [label = <(CONTROL_STRUCTURE,if (superclass != null &amp;&amp; !superclass.equals(Object.class)),if (superclass != null &amp;&amp; !superclass.equals(Object.class)))<SUB>186</SUB>> ]
"527" [label = <(&lt;operator&gt;.logicalAnd,superclass != null &amp;&amp; !superclass.equals(Object.class))<SUB>186</SUB>> ]
"528" [label = <(&lt;operator&gt;.notEquals,superclass != null)<SUB>186</SUB>> ]
"529" [label = <(IDENTIFIER,superclass,superclass != null)<SUB>186</SUB>> ]
"530" [label = <(LITERAL,null,superclass != null)<SUB>186</SUB>> ]
"531" [label = <(&lt;operator&gt;.logicalNot,!superclass.equals(Object.class))<SUB>186</SUB>> ]
"532" [label = <(equals,superclass.equals(Object.class))<SUB>186</SUB>> ]
"533" [label = <(IDENTIFIER,superclass,superclass.equals(Object.class))<SUB>186</SUB>> ]
"534" [label = <(&lt;operator&gt;.fieldAccess,Object.class)<SUB>186</SUB>> ]
"535" [label = <(IDENTIFIER,Object,superclass.equals(Object.class))<SUB>186</SUB>> ]
"536" [label = <(FIELD_IDENTIFIER,class,class)<SUB>186</SUB>> ]
"537" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>186</SUB>> ]
"538" [label = <(loadConverterMethods,loadConverterMethods(registry, superclass))<SUB>187</SUB>> ]
"28" [label = <(IDENTIFIER,this,loadConverterMethods(registry, superclass))<SUB>187</SUB>> ]
"539" [label = <(IDENTIFIER,registry,loadConverterMethods(registry, superclass))<SUB>187</SUB>> ]
"540" [label = <(IDENTIFIER,superclass,loadConverterMethods(registry, superclass))<SUB>187</SUB>> ]
"541" [label = <(BLOCK,catch,catch)> ]
"542" [label = <(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>189</SUB>> ]
"543" [label = <(warn,warn(&quot;Ignoring converter type: &quot; + type.getName() + &quot; as a dependent class could not be found: &quot; + e, e))<SUB>190</SUB>> ]
"544" [label = <(&lt;operator&gt;.fieldAccess,AnnotationTypeConverterLoader.LOG)<SUB>190</SUB>> ]
"545" [label = <(IDENTIFIER,AnnotationTypeConverterLoader,warn(&quot;Ignoring converter type: &quot; + type.getName() + &quot; as a dependent class could not be found: &quot; + e, e))<SUB>190</SUB>> ]
"546" [label = <(FIELD_IDENTIFIER,LOG,LOG)<SUB>190</SUB>> ]
"547" [label = <(&lt;operator&gt;.addition,&quot;Ignoring converter type: &quot; + type.getName() + &quot; as a dependent class could not be found: &quot; + e)<SUB>190</SUB>> ]
"548" [label = <(&lt;operator&gt;.addition,&quot;Ignoring converter type: &quot; + type.getName() + &quot; as a dependent class could not be found: &quot;)<SUB>190</SUB>> ]
"549" [label = <(&lt;operator&gt;.addition,&quot;Ignoring converter type: &quot; + type.getName())<SUB>190</SUB>> ]
"550" [label = <(LITERAL,&quot;Ignoring converter type: &quot;,&quot;Ignoring converter type: &quot; + type.getName())<SUB>190</SUB>> ]
"551" [label = <(getName,type.getName())<SUB>190</SUB>> ]
"552" [label = <(IDENTIFIER,type,type.getName())<SUB>190</SUB>> ]
"553" [label = <(LITERAL,&quot; as a dependent class could not be found: &quot;,&quot;Ignoring converter type: &quot; + type.getName() + &quot; as a dependent class could not be found: &quot;)<SUB>190</SUB>> ]
"554" [label = <(IDENTIFIER,e,&quot;Ignoring converter type: &quot; + type.getName() + &quot; as a dependent class could not be found: &quot; + e)<SUB>190</SUB>> ]
"555" [label = <(IDENTIFIER,e,warn(&quot;Ignoring converter type: &quot; + type.getName() + &quot; as a dependent class could not be found: &quot; + e, e))<SUB>190</SUB>> ]
"556" [label = <(MODIFIER,PROTECTED)> ]
"557" [label = <(MODIFIER,VIRTUAL)> ]
"558" [label = <(METHOD_RETURN,void)<SUB>141</SUB>> ]
  "338" -> "23" 
  "338" -> "339" 
  "338" -> "340" 
  "338" -> "341" 
  "338" -> "556" 
  "338" -> "557" 
  "338" -> "558" 
  "341" -> "342" 
  "341" -> "350" 
  "341" -> "355" 
  "342" -> "343" 
  "342" -> "348" 
  "343" -> "344" 
  "343" -> "347" 
  "344" -> "345" 
  "344" -> "346" 
  "348" -> "349" 
  "350" -> "351" 
  "350" -> "354" 
  "351" -> "352" 
  "351" -> "353" 
  "355" -> "356" 
  "355" -> "541" 
  "356" -> "357" 
  "356" -> "358" 
  "356" -> "26" 
  "356" -> "362" 
  "356" -> "365" 
  "356" -> "521" 
  "356" -> "522" 
  "356" -> "526" 
  "358" -> "359" 
  "358" -> "360" 
  "360" -> "361" 
  "362" -> "363" 
  "362" -> "364" 
  "365" -> "366" 
  "365" -> "367" 
  "365" -> "370" 
  "365" -> "375" 
  "365" -> "377" 
  "367" -> "368" 
  "367" -> "369" 
  "370" -> "371" 
  "370" -> "372" 
  "372" -> "373" 
  "372" -> "374" 
  "375" -> "376" 
  "377" -> "378" 
  "377" -> "379" 
  "377" -> "384" 
  "379" -> "380" 
  "379" -> "381" 
  "381" -> "382" 
  "381" -> "383" 
  "384" -> "385" 
  "384" -> "392" 
  "385" -> "386" 
  "385" -> "387" 
  "385" -> "388" 
  "385" -> "391" 
  "388" -> "389" 
  "388" -> "390" 
  "392" -> "393" 
  "393" -> "394" 
  "393" -> "396" 
  "393" -> "505" 
  "394" -> "22" 
  "394" -> "395" 
  "396" -> "397" 
  "396" -> "398" 
  "396" -> "402" 
  "398" -> "399" 
  "398" -> "400" 
  "400" -> "401" 
  "402" -> "403" 
  "402" -> "409" 
  "402" -> "424" 
  "403" -> "404" 
  "403" -> "406" 
  "404" -> "405" 
  "406" -> "407" 
  "407" -> "408" 
  "409" -> "410" 
  "410" -> "411" 
  "410" -> "414" 
  "411" -> "412" 
  "411" -> "413" 
  "414" -> "415" 
  "414" -> "423" 
  "415" -> "416" 
  "415" -> "422" 
  "416" -> "417" 
  "416" -> "421" 
  "417" -> "418" 
  "417" -> "419" 
  "419" -> "420" 
  "424" -> "425" 
  "425" -> "426" 
  "425" -> "427" 
  "425" -> "431" 
  "427" -> "428" 
  "427" -> "429" 
  "429" -> "430" 
  "431" -> "432" 
  "431" -> "437" 
  "431" -> "452" 
  "432" -> "433" 
  "432" -> "434" 
  "434" -> "435" 
  "434" -> "436" 
  "437" -> "438" 
  "438" -> "439" 
  "438" -> "442" 
  "439" -> "440" 
  "439" -> "441" 
  "442" -> "443" 
  "442" -> "451" 
  "443" -> "444" 
  "443" -> "450" 
  "444" -> "445" 
  "444" -> "449" 
  "445" -> "446" 
  "445" -> "447" 
  "447" -> "448" 
  "452" -> "453" 
  "453" -> "454" 
  "453" -> "455" 
  "453" -> "461" 
  "455" -> "456" 
  "455" -> "457" 
  "457" -> "458" 
  "457" -> "460" 
  "458" -> "459" 
  "461" -> "462" 
  "461" -> "464" 
  "461" -> "478" 
  "462" -> "463" 
  "464" -> "465" 
  "465" -> "24" 
  "465" -> "466" 
  "465" -> "467" 
  "465" -> "468" 
  "465" -> "469" 
  "465" -> "470" 
  "470" -> "471" 
  "470" -> "474" 
  "470" -> "477" 
  "471" -> "472" 
  "471" -> "473" 
  "474" -> "475" 
  "474" -> "476" 
  "478" -> "479" 
  "479" -> "480" 
  "479" -> "491" 
  "480" -> "481" 
  "480" -> "484" 
  "481" -> "482" 
  "481" -> "483" 
  "484" -> "485" 
  "484" -> "488" 
  "485" -> "486" 
  "485" -> "487" 
  "488" -> "25" 
  "488" -> "489" 
  "488" -> "490" 
  "491" -> "27" 
  "491" -> "492" 
  "491" -> "493" 
  "491" -> "494" 
  "491" -> "495" 
  "491" -> "496" 
  "496" -> "497" 
  "496" -> "500" 
  "496" -> "504" 
  "497" -> "498" 
  "497" -> "499" 
  "500" -> "501" 
  "500" -> "502" 
  "500" -> "503" 
  "505" -> "506" 
  "506" -> "507" 
  "507" -> "508" 
  "507" -> "511" 
  "508" -> "509" 
  "508" -> "510" 
  "511" -> "512" 
  "511" -> "520" 
  "512" -> "513" 
  "512" -> "519" 
  "513" -> "514" 
  "513" -> "518" 
  "514" -> "515" 
  "514" -> "516" 
  "516" -> "517" 
  "522" -> "523" 
  "522" -> "524" 
  "524" -> "525" 
  "526" -> "527" 
  "526" -> "537" 
  "527" -> "528" 
  "527" -> "531" 
  "528" -> "529" 
  "528" -> "530" 
  "531" -> "532" 
  "532" -> "533" 
  "532" -> "534" 
  "534" -> "535" 
  "534" -> "536" 
  "537" -> "538" 
  "538" -> "28" 
  "538" -> "539" 
  "538" -> "540" 
  "541" -> "542" 
  "542" -> "543" 
  "543" -> "544" 
  "543" -> "547" 
  "543" -> "555" 
  "544" -> "545" 
  "544" -> "546" 
  "547" -> "548" 
  "547" -> "554" 
  "548" -> "549" 
  "548" -> "553" 
  "549" -> "550" 
  "549" -> "551" 
  "551" -> "552" 
}
